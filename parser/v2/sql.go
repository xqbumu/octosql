// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package v2

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const WATERMARK = 57363
const DELAY = 57364
const COUNTING = 57365
const ALL = 57366
const DISTINCT = 57367
const AS = 57368
const EXISTS = 57369
const ASC = 57370
const DESC = 57371
const INTO = 57372
const DUPLICATE = 57373
const DEFAULT = 57374
const SET = 57375
const LOCK = 57376
const UNLOCK = 57377
const KEYS = 57378
const DO = 57379
const CALL = 57380
const DISTINCTROW = 57381
const PARSER = 57382
const GENERATED = 57383
const ALWAYS = 57384
const OUTFILE = 57385
const S3 = 57386
const DATA = 57387
const LOAD = 57388
const LINES = 57389
const TERMINATED = 57390
const ESCAPED = 57391
const ENCLOSED = 57392
const DUMPFILE = 57393
const CSV = 57394
const HEADER = 57395
const MANIFEST = 57396
const OVERWRITE = 57397
const STARTING = 57398
const OPTIONALLY = 57399
const VALUES = 57400
const LAST_INSERT_ID = 57401
const NEXT = 57402
const VALUE = 57403
const SHARE = 57404
const MODE = 57405
const SQL_NO_CACHE = 57406
const SQL_CACHE = 57407
const SQL_CALC_FOUND_ROWS = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const ON = 57419
const USING = 57420
const INPLACE = 57421
const COPY = 57422
const ALGORITHM = 57423
const NONE = 57424
const SHARED = 57425
const EXCLUSIVE = 57426
const SUBQUERY_AS_EXPR = 57427
const ID = 57428
const AT_ID = 57429
const AT_AT_ID = 57430
const HEX = 57431
const STRING = 57432
const NCHAR_STRING = 57433
const INTEGRAL = 57434
const FLOAT = 57435
const DECIMAL = 57436
const HEXNUM = 57437
const VALUE_ARG = 57438
const LIST_ARG = 57439
const COMMENT = 57440
const COMMENT_KEYWORD = 57441
const BIT_LITERAL = 57442
const COMPRESSION = 57443
const EXTRACT = 57444
const NULL = 57445
const TRUE = 57446
const FALSE = 57447
const OFF = 57448
const DISCARD = 57449
const IMPORT = 57450
const ENABLE = 57451
const DISABLE = 57452
const TABLESPACE = 57453
const VIRTUAL = 57454
const STORED = 57455
const EMPTY_FROM_CLAUSE = 57456
const LOWER_THAN_CHARSET = 57457
const CHARSET = 57458
const UNIQUE = 57459
const KEY = 57460
const EXPRESSION_PREC_SETTER = 57461
const OR = 57462
const XOR = 57463
const AND = 57464
const NOT = 57465
const BETWEEN = 57466
const CASE = 57467
const WHEN = 57468
const THEN = 57469
const ELSE = 57470
const END = 57471
const LE = 57472
const GE = 57473
const NE = 57474
const NULL_SAFE_EQUAL = 57475
const IS = 57476
const LIKE = 57477
const REGEXP = 57478
const IN = 57479
const RIGHTARROW = 57480
const SHIFT_LEFT = 57481
const SHIFT_RIGHT = 57482
const DIV = 57483
const MOD = 57484
const UNARY = 57485
const COLLATE = 57486
const BINARY = 57487
const UNDERSCORE_ARMSCII8 = 57488
const UNDERSCORE_ASCII = 57489
const UNDERSCORE_BIG5 = 57490
const UNDERSCORE_BINARY = 57491
const UNDERSCORE_CP1250 = 57492
const UNDERSCORE_CP1251 = 57493
const UNDERSCORE_CP1256 = 57494
const UNDERSCORE_CP1257 = 57495
const UNDERSCORE_CP850 = 57496
const UNDERSCORE_CP852 = 57497
const UNDERSCORE_CP866 = 57498
const UNDERSCORE_CP932 = 57499
const UNDERSCORE_DEC8 = 57500
const UNDERSCORE_EUCJPMS = 57501
const UNDERSCORE_EUCKR = 57502
const UNDERSCORE_GB18030 = 57503
const UNDERSCORE_GB2312 = 57504
const UNDERSCORE_GBK = 57505
const UNDERSCORE_GEOSTD8 = 57506
const UNDERSCORE_GREEK = 57507
const UNDERSCORE_HEBREW = 57508
const UNDERSCORE_HP8 = 57509
const UNDERSCORE_KEYBCS2 = 57510
const UNDERSCORE_KOI8R = 57511
const UNDERSCORE_KOI8U = 57512
const UNDERSCORE_LATIN1 = 57513
const UNDERSCORE_LATIN2 = 57514
const UNDERSCORE_LATIN5 = 57515
const UNDERSCORE_LATIN7 = 57516
const UNDERSCORE_MACCE = 57517
const UNDERSCORE_MACROMAN = 57518
const UNDERSCORE_SJIS = 57519
const UNDERSCORE_SWE7 = 57520
const UNDERSCORE_TIS620 = 57521
const UNDERSCORE_UCS2 = 57522
const UNDERSCORE_UJIS = 57523
const UNDERSCORE_UTF16 = 57524
const UNDERSCORE_UTF16LE = 57525
const UNDERSCORE_UTF32 = 57526
const UNDERSCORE_UTF8 = 57527
const UNDERSCORE_UTF8MB4 = 57528
const INTERVAL = 57529
const JSON_EXTRACT_OP = 57530
const JSON_UNQUOTE_EXTRACT_OP = 57531
const CREATE = 57532
const ALTER = 57533
const DROP = 57534
const RENAME = 57535
const ANALYZE = 57536
const ADD = 57537
const FLUSH = 57538
const CHANGE = 57539
const MODIFY = 57540
const DEALLOCATE = 57541
const REVERT = 57542
const SCHEMA = 57543
const TABLE = 57544
const DESCRIPTOR = 57545
const INDEX = 57546
const VIEW = 57547
const TO = 57548
const IGNORE = 57549
const IF = 57550
const PRIMARY = 57551
const COLUMN = 57552
const SPATIAL = 57553
const FULLTEXT = 57554
const KEY_BLOCK_SIZE = 57555
const CHECK = 57556
const INDEXES = 57557
const ACTION = 57558
const CASCADE = 57559
const CONSTRAINT = 57560
const FOREIGN = 57561
const NO = 57562
const REFERENCES = 57563
const RESTRICT = 57564
const SHOW = 57565
const DESCRIBE = 57566
const EXPLAIN = 57567
const DATE = 57568
const ESCAPE = 57569
const REPAIR = 57570
const OPTIMIZE = 57571
const TRUNCATE = 57572
const COALESCE = 57573
const EXCHANGE = 57574
const REBUILD = 57575
const PARTITIONING = 57576
const REMOVE = 57577
const PREPARE = 57578
const EXECUTE = 57579
const MAXVALUE = 57580
const PARTITION = 57581
const REORGANIZE = 57582
const LESS = 57583
const THAN = 57584
const PROCEDURE = 57585
const TRIGGER = 57586
const VINDEX = 57587
const VINDEXES = 57588
const DIRECTORY = 57589
const NAME = 57590
const UPGRADE = 57591
const STATUS = 57592
const VARIABLES = 57593
const WARNINGS = 57594
const CASCADED = 57595
const DEFINER = 57596
const OPTION = 57597
const SQL = 57598
const UNDEFINED = 57599
const SEQUENCE = 57600
const MERGE = 57601
const TEMPORARY = 57602
const TEMPTABLE = 57603
const INVOKER = 57604
const SECURITY = 57605
const FIRST = 57606
const AFTER = 57607
const LAST = 57608
const VITESS_MIGRATION = 57609
const CANCEL = 57610
const RETRY = 57611
const COMPLETE = 57612
const CLEANUP = 57613
const BEGIN = 57614
const START = 57615
const TRANSACTION = 57616
const COMMIT = 57617
const ROLLBACK = 57618
const SAVEPOINT = 57619
const RELEASE = 57620
const WORK = 57621
const BIT = 57622
const TINYINT = 57623
const SMALLINT = 57624
const MEDIUMINT = 57625
const INT = 57626
const INTEGER = 57627
const BIGINT = 57628
const INTNUM = 57629
const REAL = 57630
const DOUBLE = 57631
const FLOAT_TYPE = 57632
const DECIMAL_TYPE = 57633
const NUMERIC = 57634
const TIME = 57635
const TIMESTAMP = 57636
const DATETIME = 57637
const YEAR = 57638
const CHAR = 57639
const VARCHAR = 57640
const BOOL = 57641
const CHARACTER = 57642
const VARBINARY = 57643
const NCHAR = 57644
const TEXT = 57645
const TINYTEXT = 57646
const MEDIUMTEXT = 57647
const LONGTEXT = 57648
const BLOB = 57649
const TINYBLOB = 57650
const MEDIUMBLOB = 57651
const LONGBLOB = 57652
const JSON = 57653
const ENUM = 57654
const GEOMETRY = 57655
const POINT = 57656
const LINESTRING = 57657
const POLYGON = 57658
const GEOMETRYCOLLECTION = 57659
const MULTIPOINT = 57660
const MULTILINESTRING = 57661
const MULTIPOLYGON = 57662
const ASCII = 57663
const UNICODE = 57664
const NULLX = 57665
const AUTO_INCREMENT = 57666
const APPROXNUM = 57667
const SIGNED = 57668
const UNSIGNED = 57669
const ZEROFILL = 57670
const CODE = 57671
const COLLATION = 57672
const COLUMNS = 57673
const DATABASES = 57674
const ENGINES = 57675
const EVENT = 57676
const EXTENDED = 57677
const FIELDS = 57678
const FULL = 57679
const FUNCTION = 57680
const GTID_EXECUTED = 57681
const KEYSPACES = 57682
const OPEN = 57683
const PLUGINS = 57684
const PRIVILEGES = 57685
const PROCESSLIST = 57686
const SCHEMAS = 57687
const TABLES = 57688
const TRIGGERS = 57689
const USER = 57690
const VGTID_EXECUTED = 57691
const VITESS_KEYSPACES = 57692
const VITESS_METADATA = 57693
const VITESS_MIGRATIONS = 57694
const VITESS_REPLICATION_STATUS = 57695
const VITESS_SHARDS = 57696
const VITESS_TABLETS = 57697
const VSCHEMA = 57698
const NAMES = 57699
const GLOBAL = 57700
const SESSION = 57701
const ISOLATION = 57702
const LEVEL = 57703
const READ = 57704
const WRITE = 57705
const ONLY = 57706
const REPEATABLE = 57707
const COMMITTED = 57708
const UNCOMMITTED = 57709
const SERIALIZABLE = 57710
const CURRENT_TIMESTAMP = 57711
const DATABASE = 57712
const CURRENT_DATE = 57713
const CURRENT_TIME = 57714
const LOCALTIME = 57715
const LOCALTIMESTAMP = 57716
const CURRENT_USER = 57717
const UTC_DATE = 57718
const UTC_TIME = 57719
const UTC_TIMESTAMP = 57720
const DAY = 57721
const DAY_HOUR = 57722
const DAY_MICROSECOND = 57723
const DAY_MINUTE = 57724
const DAY_SECOND = 57725
const HOUR = 57726
const HOUR_MICROSECOND = 57727
const HOUR_MINUTE = 57728
const HOUR_SECOND = 57729
const MICROSECOND = 57730
const MINUTE = 57731
const MINUTE_MICROSECOND = 57732
const MINUTE_SECOND = 57733
const MONTH = 57734
const QUARTER = 57735
const SECOND = 57736
const SECOND_MICROSECOND = 57737
const YEAR_MONTH = 57738
const WEEK = 57739
const REPLACE = 57740
const CONVERT = 57741
const CAST = 57742
const SUBSTR = 57743
const SUBSTRING = 57744
const GROUP_CONCAT = 57745
const SEPARATOR = 57746
const TIMESTAMPADD = 57747
const TIMESTAMPDIFF = 57748
const WEIGHT_STRING = 57749
const MATCH = 57750
const AGAINST = 57751
const BOOLEAN = 57752
const LANGUAGE = 57753
const WITH = 57754
const QUERY = 57755
const EXPANSION = 57756
const WITHOUT = 57757
const VALIDATION = 57758
const UNUSED = 57759
const ARRAY = 57760
const CUME_DIST = 57761
const DESCRIPTION = 57762
const DENSE_RANK = 57763
const EMPTY = 57764
const EXCEPT = 57765
const FIRST_VALUE = 57766
const GROUPING = 57767
const GROUPS = 57768
const JSON_TABLE = 57769
const LAG = 57770
const LAST_VALUE = 57771
const LATERAL = 57772
const LEAD = 57773
const MEMBER = 57774
const NTH_VALUE = 57775
const NTILE = 57776
const OF = 57777
const OVER = 57778
const PERCENT_RANK = 57779
const RANK = 57780
const RECURSIVE = 57781
const ROW_NUMBER = 57782
const SYSTEM = 57783
const WINDOW = 57784
const ACTIVE = 57785
const ADMIN = 57786
const BUCKETS = 57787
const CLONE = 57788
const COMPONENT = 57789
const DEFINITION = 57790
const ENFORCED = 57791
const EXCLUDE = 57792
const FOLLOWING = 57793
const GEOMCOLLECTION = 57794
const GET_MASTER_PUBLIC_KEY = 57795
const HISTOGRAM = 57796
const HISTORY = 57797
const INACTIVE = 57798
const INVISIBLE = 57799
const LOCKED = 57800
const MASTER_COMPRESSION_ALGORITHMS = 57801
const MASTER_PUBLIC_KEY_PATH = 57802
const MASTER_TLS_CIPHERSUITES = 57803
const MASTER_ZSTD_COMPRESSION_LEVEL = 57804
const NESTED = 57805
const NETWORK_NAMESPACE = 57806
const NOWAIT = 57807
const NULLS = 57808
const OJ = 57809
const OLD = 57810
const OPTIONAL = 57811
const ORDINALITY = 57812
const ORGANIZATION = 57813
const OTHERS = 57814
const PATH = 57815
const PERSIST = 57816
const PERSIST_ONLY = 57817
const PRECEDING = 57818
const PRIVILEGE_CHECKS_USER = 57819
const PROCESS = 57820
const RANDOM = 57821
const REFERENCE = 57822
const REQUIRE_ROW_FORMAT = 57823
const RESOURCE = 57824
const RESPECT = 57825
const RESTART = 57826
const RETAIN = 57827
const REUSE = 57828
const ROLE = 57829
const SECONDARY = 57830
const SECONDARY_ENGINE = 57831
const SECONDARY_LOAD = 57832
const SECONDARY_UNLOAD = 57833
const SKIP = 57834
const SRID = 57835
const THREAD_PRIORITY = 57836
const TIES = 57837
const UNBOUNDED = 57838
const VCPU = 57839
const VISIBLE = 57840
const FORMAT = 57841
const TREE = 57842
const VITESS = 57843
const TRADITIONAL = 57844
const LOCAL = 57845
const LOW_PRIORITY = 57846
const NO_WRITE_TO_BINLOG = 57847
const LOGS = 57848
const ERROR = 57849
const GENERAL = 57850
const HOSTS = 57851
const OPTIMIZER_COSTS = 57852
const USER_RESOURCES = 57853
const SLOW = 57854
const CHANNEL = 57855
const RELAY = 57856
const EXPORT = 57857
const AVG_ROW_LENGTH = 57858
const CONNECTION = 57859
const CHECKSUM = 57860
const DELAY_KEY_WRITE = 57861
const ENCRYPTION = 57862
const ENGINE = 57863
const INSERT_METHOD = 57864
const MAX_ROWS = 57865
const MIN_ROWS = 57866
const PACK_KEYS = 57867
const PASSWORD = 57868
const FIXED = 57869
const DYNAMIC = 57870
const COMPRESSED = 57871
const REDUNDANT = 57872
const COMPACT = 57873
const ROW_FORMAT = 57874
const STATS_AUTO_RECALC = 57875
const STATS_PERSISTENT = 57876
const STATS_SAMPLE_PAGES = 57877
const STORAGE = 57878
const MEMORY = 57879
const DISK = 57880
const PARTITIONS = 57881
const LINEAR = 57882
const RANGE = 57883
const LIST = 57884
const SUBPARTITION = 57885
const SUBPARTITIONS = 57886
const HASH = 57887

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"WATERMARK",
	"DELAY",
	"COUNTING",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"RIGHTARROW",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"DESCRIPTOR",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	10, 47,
	11, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 140,
	563, 140,
	-2, 146,
	-1, 48,
	119, 146,
	160, 146,
	317, 146,
	-2, 447,
	-1, 55,
	36, 626,
	221, 626,
	232, 626,
	267, 640,
	268, 640,
	-2, 628,
	-1, 60,
	223, 651,
	-2, 649,
	-1, 114,
	219, 1138,
	-2, 119,
	-1, 116,
	1, 141,
	563, 141,
	-2, 146,
	-1, 126,
	120, 350,
	226, 350,
	-2, 441,
	-1, 145,
	119, 146,
	160, 146,
	317, 146,
	-2, 456,
	-1, 613,
	204, 1159,
	-2, 1155,
	-1, 614,
	204, 1160,
	-2, 1156,
	-1, 688,
	60, 719,
	-2, 734,
	-1, 725,
	135, 1522,
	-2, 112,
	-1, 726,
	135, 1398,
	-2, 113,
	-1, 732,
	135, 1452,
	-2, 1132,
	-1, 874,
	135, 1328,
	-2, 1129,
	-1, 912,
	231, 41,
	236, 41,
	-2, 361,
	-1, 989,
	1, 495,
	563, 495,
	-2, 146,
	-1, 1191,
	60, 720,
	-2, 739,
	-1, 1192,
	60, 721,
	-2, 740,
	-1, 1244,
	119, 146,
	160, 146,
	317, 146,
	-2, 391,
	-1, 1321,
	120, 350,
	226, 350,
	-2, 441,
	-1, 1330,
	231, 42,
	236, 42,
	-2, 362,
	-1, 1582,
	204, 1164,
	-2, 1158,
	-1, 1664,
	119, 146,
	160, 146,
	317, 146,
	-2, 392,
	-1, 1671,
	26, 165,
	-2, 167,
	-1, 1864,
	87, 39,
	-2, 783,
	-1, 1915,
	78, 94,
	87, 94,
	-2, 803,
	-1, 2085,
	50, 1092,
	-2, 1086,
	-1, 2256,
	87, 39,
	-2, 784,
	-1, 2294,
	5, 53,
	16, 53,
	18, 53,
	88, 53,
	-2, 768,
}

const yyPrivate = 57344

const yyLast = 37008

var yyAct = [...]int{
	613, 2586, 2580, 1617, 2356, 2547, 2508, 2210, 2140, 2526,
	2441, 2147, 3, 607, 37, 2181, 2096, 1170, 96, 608,
	1640, 2381, 681, 2193, 2099, 2455, 1053, 2149, 1852, 1724,
	1206, 2192, 2127, 564, 1908, 2100, 2097, 1596, 616, 2265,
	2259, 1636, 2094, 2386, 1621, 2285, 561, 1887, 590, 605,
	606, 182, 2195, 1879, 182, 2086, 528, 182, 703, 1910,
	1694, 568, 544, 1001, 182, 2251, 1947, 1976, 2017, 562,
	1699, 1948, 182, 560, 1949, 1714, 154, 36, 1650, 877,
	704, 1854, 1899, 1193, 38, 556, 942, 182, 1344, 1871,
	2033, 685, 1661, 689, 1713, 683, 730, 1641, 1576, 1733,
	140, 1701, 1766, 1526, 1485, 1941, 1236, 1917, 1533, 544,
	1328, 706, 544, 182, 544, 1301, 907, 902, 95, 1643,
	1215, 1173, 573, 1545, 91, 1436, 1598, 1503, 1432, 1072,
	1335, 1579, 884, 913, 1711, 727, 1418, 881, 885, 1628,
	1219, 910, 695, 1690, 908, 920, 909, 1235, 1046, 1441,
	1296, 1320, 123, 124, 157, 1051, 985, 690, 717, 1233,
	693, 1622, 98, 76, 691, 551, 1142, 97, 85, 1138,
	2491, 89, 2587, 2178, 117, 1726, 1967, 118, 1969, 1726,
	1727, 1728, 1764, 1589, 1996, 1995, 8, 1073, 692, 77,
	7, 2025, 6, 2026, 184, 185, 186, 1404, 1593, 1594,
	125, 1492, 119, 1491, 1490, 1489, 1488, 1487, 1474, 2561,
	554, 711, 555, 716, 1850, 697, 2082, 501, 1479, 888,
	90, 1881, 947, 893, 2164, 2321, 2566, 2437, 878, 944,
	2436, 552, 2349, 946, 945, 2350, 2596, 2536, 2590, 2502,
	78, 684, 958, 959, 682, 962, 963, 964, 965, 78,
	2578, 968, 969, 970, 971, 972, 973, 974, 975, 976,
	977, 978, 979, 980, 981, 982, 705, 1030, 724, 923,
	731, 119, 1804, 924, 102, 698, 1890, 2357, 2527, 1104,
	1752, 900, 78, 2535, 2501, 80, 2032, 2243, 948, 949,
	950, 899, 1073, 1083, 898, 1310, 178, 2137, 2138, 955,
	2446, 1891, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1113,
	1112, 1114, 1115, 1706, 1037, 104, 105, 1039, 108, 960,
	87, 114, 78, 120, 179, 1656, 1657, 496, 2004, 87,
	1574, 1237, 2003, 1238, 2136, 119, 162, 1704, 897, 1802,
	1595, 994, 995, 892, 1851, 2024, 894, 677, 678, 679,
	680, 1926, 1801, 688, 1925, 1036, 1038, 1927, 1655, 1020,
	675, 674, 87, 1049, 1008, 1025, 1026, 1970, 1021, 1009,
	1008, 2234, 178, 997, 2399, 1009, 1014, 1007, 1931, 1006,
	1938, 719, 720, 1674, 1673, 531, 1079, 2212, 531, 1071,
	2059, 531, 531, 159, 2232, 160, 1478, 895, 1083, 120,
	2262, 142, 87, 984, 542, 177, 546, 1480, 1481, 1482,
	540, 1424, 162, 1566, 1555, 1556, 1557, 1558, 1568, 1559,
	1560, 1561, 1573, 1569, 1562, 1563, 1570, 1571, 1572, 1564,
	1565, 1567, 961, 901, 1778, 1775, 1777, 1776, 2511, 1394,
	1177, 897, 1977, 152, 889, 1734, 1034, 1022, 141, 2205,
	1035, 891, 890, 1999, 1027, 1015, 1767, 2206, 2589, 2562,
	1040, 1772, 988, 1048, 1028, 1703, 2213, 596, 1780, 159,
	1781, 160, 1782, 1043, 1419, 1023, 1024, 129, 130, 151,
	150, 177, 1033, 1395, 1029, 1396, 990, 2012, 1783, 967,
	966, 1079, 2509, 1771, 2214, 1769, 182, 2466, 182, 2342,
	895, 182, 931, 929, 1737, 2189, 903, 896, 87, 1637,
	904, 904, 163, 940, 939, 938, 937, 1773, 936, 1041,
	935, 168, 1313, 934, 933, 1116, 928, 2153, 1180, 544,
	544, 544, 1018, 941, 882, 1802, 1770, 1116, 2591, 916,
	882, 2576, 2016, 2060, 880, 882, 1334, 544, 544, 1078,
	1075, 1076, 1077, 1082, 1084, 1081, 915, 1080, 1433, 1712,
	718, 1065, 37, 2163, 1074, 2013, 1004, 1758, 1010, 1011,
	1012, 1013, 1855, 1857, 1429, 146, 127, 153, 134, 126,
	1059, 147, 148, 532, 2447, 2171, 532, 951, 163, 532,
	532, 1050, 922, 1998, 2584, 1308, 1307, 168, 135, 897,
	983, 1306, 1988, 1425, 1623, 1624, 1430, 1117, 1118, 2028,
	896, 2490, 138, 136, 131, 132, 133, 137, 2188, 1968,
	1304, 1815, 500, 495, 128, 2478, 1754, 922, 1042, 1971,
	1116, 2001, 155, 139, 2302, 2281, 1922, 2500, 1168, 1119,
	1120, 1121, 1122, 2011, 932, 930, 2010, 1886, 1842, 1127,
	1588, 1130, 1333, 1223, 1078, 1075, 1076, 1077, 1082, 1084,
	1081, 1150, 1080, 86, 1705, 987, 999, 116, 2263, 1074,
	1662, 1115, 86, 2135, 2297, 182, 700, 2433, 1047, 544,
	544, 1803, 2019, 1003, 1163, 1055, 1056, 2018, 1423, 2019,
	111, 81, 921, 2143, 2018, 182, 1183, 2510, 1123, 2540,
	1187, 922, 1169, 683, 1186, 86, 685, 1184, 155, 1406,
	1405, 1407, 1408, 1409, 544, 2034, 993, 1017, 182, 2496,
	996, 1856, 2338, 544, 1031, 1005, 2275, 921, 1019, 544,
	1442, 943, 925, 915, 1768, 1068, 1426, 77, 2144, 1066,
	1181, 1067, 926, 1239, 1069, 86, 2052, 112, 609, 727,
	591, 593, 610, 611, 986, 589, 592, 612, 1546, 1140,
	1144, 1141, 927, 2146, 1169, 922, 1185, 2141, 896, 1960,
	95, 1086, 957, 1087, 1088, 1825, 1156, 1157, 1158, 1159,
	2054, 2151, 2152, 149, 594, 595, 2418, 1751, 2142, 1508,
	1044, 1087, 1088, 1088, 1174, 2582, 143, 2036, 2583, 144,
	2581, 921, 1753, 1509, 1510, 1507, 2395, 915, 918, 919,
	2313, 882, 2541, 1002, 98, 912, 916, 1546, 1420, 1829,
	1421, 2148, 2312, 1422, 156, 161, 158, 164, 165, 166,
	167, 169, 170, 171, 172, 1741, 911, 1343, 1342, 1171,
	173, 174, 175, 176, 1332, 1746, 1749, 2240, 989, 1746,
	1824, 1182, 682, 2512, 931, 1205, 684, 1032, 929, 2046,
	2045, 2044, 2038, 1443, 2042, 921, 2037, 922, 2035, 2592,
	925, 915, 1750, 2040, 1202, 2572, 1748, 182, 1229, 1230,
	926, 1297, 2039, 2303, 731, 2513, 1086, 2150, 1087, 1088,
	1305, 1110, 1111, 1113, 1112, 1114, 1115, 2041, 2043, 2153,
	156, 161, 158, 164, 165, 166, 167, 169, 170, 171,
	172, 544, 1224, 1330, 2594, 1200, 173, 174, 175, 176,
	1200, 1339, 184, 185, 186, 1341, 1528, 1550, 544, 544,
	2428, 544, 2209, 544, 544, 2372, 544, 544, 544, 544,
	544, 544, 1413, 2593, 1086, 2553, 1087, 1088, 2371, 2551,
	1086, 544, 1087, 1088, 2471, 182, 1377, 1411, 2555, 2556,
	922, 1401, 1188, 2151, 2152, 2238, 1200, 921, 2320, 956,
	2552, 182, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1112,
	1114, 1115, 544, 1234, 182, 1340, 2472, 1311, 1312, 2319,
	1326, 1498, 1500, 1501, 1529, 1431, 2179, 2169, 544, 87,
	182, 1086, 2145, 1087, 1088, 1412, 1945, 1319, 2573, 1944,
	1372, 1373, 1499, 1506, 2574, 1837, 182, 1346, 1709, 1347,
	1410, 1349, 1351, 182, 1400, 1355, 1357, 1359, 1361, 1363,
	1374, 1338, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 544, 544, 544, 1303, 1414, 1399, 1380, 1381, 1086,
	1337, 1087, 1088, 1386, 1387, 1398, 1397, 1316, 1317, 1315,
	921, 1388, 1382, 1329, 1336, 1336, 915, 918, 919, 2150,
	882, 1379, 182, 1820, 912, 916, 1629, 1630, 1446, 1378,
	2475, 2153, 1819, 1353, 2474, 1450, 2473, 1452, 1453, 1454,
	1455, 2487, 722, 2394, 1459, 2392, 1438, 1390, 1108, 1109,
	1110, 1111, 1113, 1112, 1114, 1115, 2368, 1213, 1473, 1104,
	2317, 2027, 1086, 1375, 1087, 1088, 2309, 1527, 1086, 1504,
	1087, 1088, 1807, 1808, 1809, 1434, 1086, 1954, 1087, 1088,
	1536, 544, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1113,
	1112, 1114, 1115, 1942, 119, 1762, 544, 544, 1511, 1761,
	1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522,
	1523, 1524, 1525, 1209, 899, 1502, 1448, 898, 1309, 1200,
	1620, 1086, 1512, 1087, 1088, 1212, 182, 1580, 627, 628,
	629, 544, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1090,
	1862, 1602, 1472, 1861, 1601, 1531, 1469, 1470, 1471, 1547,
	1530, 2426, 1475, 1439, 1086, 182, 1087, 1088, 544, 1402,
	1389, 1086, 1210, 1087, 1088, 184, 185, 186, 182, 2310,
	1385, 544, 1505, 184, 185, 186, 182, 1929, 182, 1384,
	182, 182, 544, 1383, 2339, 544, 1086, 1211, 1087, 1088,
	1045, 1058, 2246, 1607, 1200, 1608, 544, 1582, 2454, 95,
	1580, 1584, 1585, 1818, 2245, 2274, 1532, 2453, 727, 1877,
	2588, 727, 2422, 1538, 1539, 184, 185, 186, 95, 1086,
	2421, 1087, 1088, 1918, 1444, 1445, 1581, 1613, 1086, 1946,
	1087, 1088, 2355, 1583, 1877, 2533, 1586, 1587, 1449, 1639,
	1086, 1978, 1087, 1088, 1957, 1456, 1457, 1458, 184, 185,
	186, 544, 1722, 1680, 1681, 1682, 1683, 1715, 1716, 1717,
	92, 1670, 1719, 1721, 1086, 2539, 1087, 1088, 1877, 2520,
	1582, 1665, 1612, 2276, 93, 1666, 544, 697, 1877, 2516,
	2503, 1200, 544, 1339, 1085, 1648, 1339, 2495, 1339, 1919,
	1671, 184, 185, 186, 1745, 1720, 2559, 1615, 1921, 1634,
	1086, 1735, 1087, 1088, 1877, 92, 1696, 1877, 2492, 2347,
	2489, 1632, 1669, 1877, 2429, 94, 2347, 1200, 1675, 93,
	1676, 1677, 1678, 1679, 544, 1702, 1527, 2523, 1200, 2296,
	1653, 1527, 1527, 1104, 1896, 1814, 1686, 1687, 1688, 1689,
	1668, 1652, 1667, 731, 1877, 2345, 731, 1901, 1904, 1905,
	1906, 1902, 2159, 1903, 1907, 1732, 1105, 1106, 1107, 1108,
	1109, 1110, 1111, 1113, 1112, 1114, 1115, 182, 1200, 1746,
	1200, 2279, 1200, 1200, 182, 2161, 2160, 2157, 2158, 182,
	182, 100, 94, 182, 1697, 182, 1692, 1693, 1888, 1707,
	1710, 1708, 182, 1740, 1718, 1918, 1743, 1747, 1744, 182,
	2157, 2156, 2095, 1755, 1896, 1200, 1816, 1200, 1802, 1997,
	1300, 1982, 2274, 1738, 1739, 1742, 923, 1697, 1104, 1895,
	924, 1100, 2070, 1101, 1756, 1974, 1975, 182, 544, 1757,
	1336, 1877, 1876, 1654, 1759, 1760, 1888, 1102, 1103, 1099,
	1200, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1112,
	1114, 1115, 1816, 101, 1746, 1104, 1873, 1816, 1793, 1794,
	2130, 1919, 1896, 1796, 100, 2322, 99, 1085, 1200, 1802,
	1802, 1765, 1797, 1896, 94, 1300, 1299, 1504, 1105, 1106,
	1107, 1108, 1109, 1110, 1111, 1113, 1112, 1114, 1115, 1105,
	1106, 1107, 1108, 1109, 1110, 1111, 1113, 1112, 1114, 1115,
	101, 1245, 1244, 1834, 1833, 1811, 1746, 1813, 1729, 1786,
	2274, 100, 1627, 99, 1204, 2323, 2324, 2325, 1591, 1483,
	1368, 1428, 1231, 687, 906, 94, 905, 87, 2443, 1812,
	614, 1816, 1207, 2419, 2211, 2406, 1200, 2337, 2334, 2315,
	2249, 2248, 182, 1302, 1695, 2207, 2184, 2180, 1983, 1691,
	182, 1685, 1684, 1416, 1331, 1327, 544, 1298, 113, 1865,
	2326, 2182, 544, 1800, 1950, 1848, 1951, 988, 2286, 2287,
	1369, 1370, 1371, 544, 1365, 2444, 1706, 1605, 2569, 2548,
	1505, 183, 2289, 1200, 183, 1810, 2176, 183, 2175, 2174,
	2095, 1961, 545, 1787, 183, 1476, 182, 1208, 182, 1892,
	37, 2117, 183, 87, 2292, 2115, 2118, 2327, 2328, 1912,
	2116, 1951, 2376, 1928, 2375, 1878, 2291, 183, 1828, 2114,
	2113, 1366, 1367, 1826, 2564, 2534, 1901, 1904, 1905, 1906,
	1902, 1619, 1903, 1907, 1611, 1582, 2286, 2287, 2119, 545,
	1905, 1906, 545, 183, 545, 2280, 2075, 1874, 1901, 1904,
	1905, 1906, 1902, 2074, 1903, 1907, 2470, 544, 1980, 1839,
	1840, 1174, 182, 1849, 1581, 2374, 2385, 598, 2387, 182,
	2267, 1939, 1940, 1911, 2087, 2089, 1859, 701, 2266, 2270,
	2084, 544, 1427, 2090, 1973, 702, 673, 1870, 544, 1875,
	2155, 1932, 1339, 1339, 1936, 1955, 1542, 544, 1885, 953,
	952, 2221, 1916, 1198, 1194, 92, 1950, 1920, 2022, 1994,
	1543, 1923, 2272, 1057, 1990, 1198, 1194, 94, 1195, 93,
	182, 182, 182, 182, 182, 92, 1702, 1989, 120, 543,
	1195, 1930, 2488, 1933, 2172, 94, 1790, 182, 182, 93,
	1953, 1943, 2439, 1609, 1610, 1197, 1779, 1196, 1629, 1630,
	1909, 2154, 1952, 182, 1616, 1191, 1192, 1197, 2542, 1196,
	1962, 1963, 1964, 1958, 101, 709, 710, 2252, 1806, 99,
	2073, 1527, 101, 2460, 1992, 100, 729, 99, 2072, 879,
	1319, 886, 2459, 100, 100, 99, 2393, 2391, 2390, 94,
	2383, 2335, 2271, 544, 2269, 683, 2185, 1730, 1314, 2051,
	1993, 101, 1984, 1985, 708, 1991, 2382, 2260, 1888, 544,
	2571, 2570, 100, 1873, 1835, 1603, 1225, 1217, 2571, 2064,
	106, 107, 2476, 2308, 182, 699, 2579, 103, 544, 88,
	1, 622, 2550, 513, 1592, 2030, 1172, 544, 2029, 527,
	2546, 2014, 1403, 1393, 544, 544, 2358, 182, 182, 182,
	182, 182, 2440, 1979, 1736, 2333, 1700, 689, 914, 182,
	2047, 2101, 2107, 2064, 182, 544, 182, 2108, 182, 2077,
	2111, 182, 182, 182, 2048, 2031, 145, 1187, 1663, 1664,
	2529, 110, 875, 2078, 109, 2065, 917, 1016, 1731, 2348,
	2063, 1937, 1672, 1251, 1249, 1250, 2092, 2069, 1248, 1253,
	1252, 1247, 2098, 2129, 1836, 1477, 2170, 2098, 2079, 541,
	2076, 180, 182, 1240, 1218, 954, 503, 2162, 1763, 509,
	1128, 690, 2071, 1924, 728, 544, 721, 2131, 691, 1604,
	2132, 1863, 2103, 2106, 544, 2507, 2465, 2191, 2264, 182,
	2120, 2124, 2083, 95, 2085, 2109, 2110, 1880, 2112, 182,
	2133, 2066, 2067, 2068, 2088, 2081, 2469, 2384, 2139, 2521,
	1934, 1214, 1827, 1135, 182, 1544, 1644, 182, 1600, 1438,
	1497, 2166, 566, 2165, 565, 563, 1866, 2222, 1889, 1091,
	617, 1853, 1226, 1900, 1898, 1897, 1788, 2167, 2168, 2187,
	2199, 2198, 1649, 2288, 2284, 2410, 2125, 2126, 1642, 1872,
	574, 567, 559, 2190, 2186, 615, 2305, 2197, 1702, 2202,
	2020, 2000, 2208, 2021, 2002, 1935, 2204, 1070, 1190, 553,
	887, 544, 182, 1541, 2445, 2431, 183, 1805, 183, 2242,
	1189, 183, 2217, 2216, 2219, 2220, 1553, 1554, 2177, 1723,
	63, 41, 548, 2560, 1061, 715, 32, 31, 2224, 2230,
	30, 2223, 29, 28, 23, 22, 21, 20, 19, 545,
	545, 545, 25, 18, 17, 16, 115, 50, 47, 45,
	122, 121, 48, 44, 2258, 991, 42, 545, 545, 27,
	26, 182, 15, 2253, 2254, 2261, 14, 13, 12, 2273,
	11, 2268, 10, 9, 5, 4, 35, 34, 33, 2311,
	2227, 2228, 2293, 2229, 182, 2283, 2231, 2290, 2233, 1064,
	2235, 24, 2, 1966, 1725, 0, 0, 0, 0, 0,
	0, 2298, 182, 0, 0, 182, 182, 182, 0, 2300,
	2301, 0, 0, 0, 0, 544, 544, 0, 2340, 2341,
	2299, 0, 2306, 2199, 2198, 0, 2307, 0, 0, 0,
	0, 2316, 0, 2318, 0, 0, 0, 0, 0, 2343,
	0, 0, 544, 544, 544, 544, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2354, 0, 0, 0, 0, 2352,
	2353, 0, 0, 0, 0, 0, 729, 729, 729, 0,
	0, 0, 0, 0, 0, 183, 182, 0, 0, 545,
	545, 0, 0, 0, 1060, 1062, 0, 0, 0, 0,
	0, 0, 2363, 2364, 0, 183, 0, 0, 0, 0,
	544, 0, 544, 0, 0, 0, 0, 0, 0, 0,
	0, 2400, 37, 2379, 545, 0, 2101, 544, 183, 2380,
	2101, 2367, 683, 545, 2389, 2402, 2404, 2388, 0, 545,
	0, 2396, 2398, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2409,
	2408, 0, 0, 0, 0, 0, 2098, 0, 544, 0,
	1166, 2427, 2417, 0, 0, 0, 2414, 2415, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 544, 0,
	2423, 0, 2430, 0, 0, 2425, 2424, 0, 0, 0,
	0, 2435, 0, 2434, 544, 0, 0, 0, 544, 544,
	0, 0, 0, 0, 2442, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1178, 1179, 0, 0,
	0, 2468, 2464, 2461, 2462, 0, 0, 544, 2463, 182,
	2480, 0, 0, 0, 0, 0, 0, 0, 0, 2101,
	544, 0, 0, 2486, 2477, 0, 0, 0, 0, 0,
	0, 1221, 0, 683, 0, 0, 0, 2484, 0, 0,
	729, 0, 0, 0, 544, 182, 1241, 2497, 0, 0,
	0, 0, 2494, 37, 0, 0, 0, 183, 0, 0,
	0, 0, 0, 2479, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 544,
	0, 0, 0, 182, 0, 0, 0, 0, 0, 0,
	0, 545, 0, 2514, 0, 0, 544, 544, 0, 0,
	0, 2522, 37, 2517, 544, 0, 2528, 2524, 545, 545,
	0, 545, 0, 545, 545, 0, 545, 545, 545, 545,
	545, 545, 2442, 2530, 0, 0, 0, 0, 0, 0,
	2549, 545, 2557, 2554, 0, 183, 713, 0, 2098, 0,
	0, 2563, 0, 2519, 0, 2518, 2565, 0, 0, 0,
	0, 183, 2568, 0, 0, 0, 0, 0, 0, 0,
	544, 0, 545, 2575, 183, 0, 0, 0, 2577, 0,
	0, 0, 0, 0, 2585, 0, 0, 0, 545, 0,
	183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2595, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 183, 557, 0, 0, 0, 0, 0,
	0, 0, 183, 183, 183, 183, 183, 183, 183, 183,
	183, 545, 545, 545, 0, 0, 0, 0, 879, 0,
	0, 0, 0, 0, 0, 0, 707, 0, 0, 0,
	0, 1166, 0, 0, 0, 1345, 1345, 0, 1345, 0,
	1345, 1345, 183, 1354, 1345, 1345, 1345, 1345, 1345, 0,
	0, 0, 0, 0, 0, 0, 1166, 1166, 879, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1415,
	0, 0, 0, 0, 0, 120, 184, 185, 186, 0,
	0, 545, 0, 0, 0, 1435, 0, 0, 162, 0,
	0, 0, 0, 178, 0, 0, 545, 545, 0, 0,
	0, 0, 0, 0, 1972, 0, 531, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	120, 0, 142, 0, 0, 0, 183, 0, 729, 729,
	729, 545, 0, 162, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 159, 0, 160, 518, 0,
	0, 0, 0, 0, 0, 183, 0, 177, 545, 0,
	0, 0, 0, 0, 152, 0, 0, 0, 183, 141,
	0, 545, 0, 0, 0, 0, 183, 0, 183, 0,
	183, 183, 545, 0, 0, 545, 0, 0, 0, 0,
	159, 0, 160, 0, 517, 0, 545, 0, 1322, 1323,
	151, 150, 177, 0, 0, 0, 515, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1537, 0,
	0, 0, 0, 0, 0, 1166, 0, 0, 0, 0,
	0, 0, 0, 1551, 1552, 0, 0, 0, 729, 0,
	0, 0, 0, 0, 0, 0, 0, 512, 0, 0,
	0, 545, 0, 0, 0, 0, 526, 0, 0, 0,
	0, 0, 0, 0, 163, 0, 0, 0, 1606, 0,
	0, 523, 0, 168, 0, 0, 545, 0, 0, 0,
	0, 0, 545, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1618, 146, 1324, 153, 0,
	1321, 0, 147, 148, 532, 0, 0, 0, 1221, 163,
	0, 729, 0, 0, 0, 0, 0, 0, 168, 729,
	1199, 0, 729, 0, 545, 0, 0, 0, 0, 0,
	0, 0, 0, 879, 502, 0, 504, 519, 0, 534,
	0, 533, 508, 0, 506, 510, 520, 511, 0, 505,
	0, 516, 0, 0, 507, 521, 522, 524, 538, 537,
	525, 0, 514, 535, 0, 0, 0, 183, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 183,
	183, 0, 0, 183, 155, 183, 0, 0, 886, 0,
	0, 0, 183, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 599, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 879, 0, 0, 0, 0, 0, 886,
	0, 0, 0, 0, 0, 0, 0, 183, 545, 155,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 0, 0, 499, 0, 0,
	539, 879, 0, 0, 0, 1089, 0, 499, 0, 0,
	0, 0, 0, 0, 0, 499, 0, 0, 0, 0,
	0, 0, 1268, 0, 0, 0, 0, 0, 0, 0,
	696, 0, 0, 1136, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 149, 0, 714, 536, 714, 0,
	0, 0, 0, 0, 0, 0, 499, 143, 0, 0,
	144, 0, 0, 0, 0, 529, 0, 0, 0, 0,
	0, 557, 0, 0, 0, 0, 0, 0, 0, 0,
	530, 0, 183, 0, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 0, 0, 0, 545, 0, 0, 0,
	0, 0, 545, 0, 0, 1799, 0, 0, 0, 0,
	0, 0, 0, 545, 0, 0, 156, 161, 158, 164,
	165, 166, 167, 169, 170, 171, 172, 0, 0, 0,
	0, 0, 173, 174, 175, 176, 183, 0, 183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1256, 0, 0, 0, 0, 1216, 0, 0, 0, 0,
	0, 156, 161, 158, 164, 165, 166, 167, 169, 170,
	171, 172, 0, 0, 0, 0, 0, 173, 174, 175,
	176, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 545, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 729, 0, 0, 0,
	0, 545, 0, 0, 0, 0, 0, 0, 545, 0,
	0, 0, 1269, 1618, 0, 0, 0, 545, 0, 1867,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1882, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 183, 183, 183, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 183, 0,
	0, 0, 0, 0, 0, 0, 1282, 1285, 1286, 1287,
	1288, 1289, 1290, 183, 1291, 1292, 1293, 1294, 1295, 1270,
	1271, 1272, 1273, 1254, 1255, 1283, 0, 1257, 0, 1258,
	1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1274,
	1275, 1276, 1277, 1278, 1279, 1280, 1281, 0, 0, 0,
	0, 0, 0, 545, 1956, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 545,
	0, 0, 0, 0, 0, 0, 0, 0, 1618, 0,
	0, 0, 0, 0, 183, 1981, 0, 0, 545, 0,
	0, 0, 0, 0, 1986, 0, 0, 545, 0, 0,
	0, 0, 0, 0, 545, 545, 0, 183, 183, 183,
	183, 183, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 183, 545, 183, 0, 183, 0,
	0, 183, 183, 183, 0, 0, 1284, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 499,
	0, 499, 0, 0, 499, 0, 0, 0, 0, 0,
	1440, 0, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 545, 0, 0, 0, 0,
	729, 0, 0, 0, 545, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 1345, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 2080, 0, 183, 0, 0,
	0, 0, 0, 0, 729, 0, 0, 0, 1166, 0,
	0, 2105, 1345, 1166, 0, 0, 0, 0, 0, 0,
	0, 0, 1493, 1494, 1495, 1496, 0, 0, 0, 0,
	0, 0, 2128, 0, 0, 0, 0, 0, 0, 0,
	0, 1201, 1203, 0, 0, 0, 0, 0, 0, 0,
	0, 545, 183, 0, 0, 0, 1167, 0, 0, 0,
	0, 0, 1534, 1535, 0, 0, 0, 0, 0, 0,
	1540, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1575, 0, 0, 0, 0,
	0, 0, 879, 0, 0, 1166, 0, 0, 0, 0,
	0, 1618, 0, 0, 0, 624, 79, 0, 499, 0,
	0, 183, 0, 557, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 696, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1625,
	1626, 499, 183, 0, 0, 183, 183, 183, 0, 0,
	0, 0, 0, 0, 0, 545, 545, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1660, 0, 0, 0,
	0, 0, 0, 686, 0, 79, 0, 0, 2080, 0,
	0, 0, 545, 545, 545, 545, 0, 0, 0, 0,
	0, 0, 0, 686, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1698, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	545, 0, 545, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 545, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1618, 1618, 0, 0, 0, 0, 0, 0,
	499, 0, 0, 0, 0, 0, 0, 0, 545, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2359,
	2360, 2361, 2362, 0, 0, 0, 0, 0, 545, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 545, 0, 0, 1167, 545, 545,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1167, 1167, 0, 0, 0, 545, 499, 183,
	0, 0, 1166, 0, 0, 0, 0, 2401, 0, 2403,
	545, 0, 0, 0, 1391, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2128, 0, 0, 499, 0, 0,
	0, 0, 0, 0, 545, 183, 0, 0, 0, 0,
	0, 0, 0, 1437, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 499,
	0, 0, 0, 0, 0, 1618, 499, 0, 0, 545,
	0, 0, 0, 183, 0, 1460, 1461, 499, 499, 499,
	499, 499, 499, 499, 0, 729, 545, 545, 0, 0,
	0, 0, 0, 1830, 545, 0, 0, 0, 0, 0,
	1548, 2457, 0, 0, 1549, 2457, 2457, 0, 0, 0,
	0, 0, 0, 0, 0, 499, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1201, 1590, 0, 0, 1618, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1618, 0, 0,
	545, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1614, 0, 0, 0, 0, 714, 0,
	0, 1618, 0, 0, 1216, 714, 714, 0, 0, 0,
	0, 1167, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 714, 1437, 714, 714, 714, 714, 714,
	0, 0, 0, 0, 1166, 0, 2515, 0, 0, 0,
	0, 1166, 0, 0, 0, 0, 0, 0, 0, 1391,
	0, 0, 0, 729, 729, 0, 0, 0, 0, 0,
	0, 2537, 0, 0, 714, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1052, 1052, 1052, 0, 696, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 499, 0, 0, 79, 0, 0, 1437, 0, 499,
	0, 499, 0, 499, 1651, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1618, 0, 0,
	0, 686, 1124, 1125, 1126, 0, 1129, 0, 1131, 1132,
	1133, 1134, 0, 1137, 1139, 1139, 0, 1139, 1143, 1143,
	1145, 1146, 1147, 1148, 1149, 0, 1151, 1152, 1153, 1154,
	1155, 0, 0, 0, 0, 1143, 1143, 1143, 1143, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2049, 2050, 0, 0, 0, 2053, 0, 0, 0,
	2055, 2056, 2057, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1176, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 686, 0, 0, 0, 0, 0, 686, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2093, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	499, 0, 0, 0, 0, 0, 0, 499, 0, 0,
	0, 1175, 499, 499, 0, 0, 499, 0, 1791, 0,
	0, 0, 0, 0, 0, 499, 0, 0, 0, 0,
	0, 0, 499, 1817, 0, 0, 0, 1821, 0, 1822,
	1823, 0, 0, 0, 0, 0, 0, 0, 1831, 0,
	0, 1832, 0, 0, 0, 0, 0, 2183, 0, 0,
	499, 0, 0, 0, 0, 498, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 547, 0, 1838, 0, 0,
	0, 0, 0, 676, 1843, 1844, 1845, 1846, 1847, 0,
	1614, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1860, 0, 178, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1318, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 883, 714, 0, 0, 0, 0,
	120, 0, 142, 0, 0, 0, 0, 0, 0, 0,
	0, 2244, 0, 162, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 714, 714, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1437, 0, 152, 499, 0, 0, 0, 141,
	0, 0, 0, 1391, 0, 0, 0, 0, 0, 557,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	159, 0, 160, 0, 0, 0, 0, 0, 1322, 1323,
	151, 150, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 499,
	0, 499, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2336, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2351, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 499, 1052, 1052, 1052, 0,
	0, 0, 1965, 0, 0, 0, 146, 1324, 153, 0,
	1321, 0, 147, 148, 0, 0, 0, 0, 0, 163,
	0, 0, 0, 0, 0, 2365, 0, 2366, 168, 0,
	0, 0, 2369, 2370, 0, 0, 0, 2058, 0, 0,
	2061, 2062, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 499, 499, 499, 499, 499, 0, 0,
	0, 0, 2397, 0, 0, 0, 0, 0, 0, 0,
	499, 499, 0, 2405, 0, 0, 2407, 0, 0, 0,
	0, 0, 0, 0, 2411, 0, 499, 0, 0, 0,
	0, 2416, 0, 0, 2104, 0, 0, 0, 0, 0,
	714, 0, 2420, 0, 0, 0, 0, 0, 0, 0,
	0, 2122, 2123, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 714, 0, 0, 0, 0,
	0, 557, 0, 0, 0, 0, 0, 0, 0, 155,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 499, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2467,
	557, 0, 0, 0, 1167, 0, 0, 0, 0, 1167,
	499, 499, 499, 499, 499, 1645, 0, 0, 0, 0,
	0, 0, 2121, 0, 0, 0, 0, 499, 0, 1391,
	0, 499, 0, 0, 499, 2134, 1437, 992, 0, 998,
	0, 0, 1000, 0, 149, 0, 0, 0, 0, 557,
	0, 0, 0, 0, 0, 0, 0, 143, 0, 0,
	144, 0, 0, 0, 2226, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 499, 0, 0, 2236, 2237,
	2239, 2241, 0, 0, 0, 0, 0, 0, 2247, 0,
	0, 1167, 0, 0, 2250, 0, 0, 0, 0, 0,
	2255, 0, 499, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 499, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 499, 2543, 0,
	499, 0, 0, 2277, 2278, 0, 0, 2282, 0, 0,
	2558, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2294, 2295, 0, 0, 2567,
	0, 156, 161, 158, 164, 165, 166, 167, 169, 170,
	171, 172, 0, 0, 0, 0, 0, 173, 174, 175,
	176, 0, 0, 0, 0, 499, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 499, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1228,
	0, 0, 0, 0, 0, 0, 0, 499, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 499, 0, 0, 499, 499,
	499, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 78, 39, 40, 80, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 84, 0,
	0, 0, 43, 69, 70, 0, 67, 71, 0, 0,
	0, 0, 0, 0, 0, 68, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1841, 0, 0, 1391,
	0, 0, 0, 0, 56, 0, 0, 0, 0, 0,
	0, 0, 2438, 1858, 0, 87, 0, 0, 1167, 0,
	0, 0, 0, 0, 0, 0, 2448, 2449, 2450, 0,
	2451, 2452, 686, 0, 2456, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1246, 0,
	0, 0, 1893, 1894, 0, 0, 0, 0, 0, 0,
	0, 1913, 1914, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2485, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2499, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2504, 0, 0, 0,
	0, 0, 2505, 2506, 0, 0, 1376, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 46, 49, 52, 51,
	54, 0, 66, 0, 0, 75, 72, 0, 0, 0,
	0, 0, 2481, 0, 2525, 1417, 0, 0, 0, 0,
	0, 0, 0, 1987, 0, 0, 0, 0, 0, 55,
	83, 82, 0, 0, 64, 65, 53, 0, 2544, 2545,
	0, 0, 73, 74, 0, 0, 0, 1447, 499, 0,
	0, 0, 0, 0, 1451, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1462, 1463, 1464, 1465, 1466,
	1467, 1468, 0, 0, 0, 0, 0, 0, 57, 58,
	1167, 59, 60, 61, 62, 0, 499, 1167, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1486, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1645,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2102, 0, 79,
	0, 0, 1645, 1645, 1645, 1645, 1645, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1913,
	0, 0, 0, 1645, 0, 0, 1645, 0, 0, 0,
	0, 0, 0, 0, 81, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 86, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 87, 0, 0, 0, 0, 0, 618,
	625, 626, 627, 628, 629, 619, 621, 0, 0, 1631,
	620, 0, 0, 623, 630, 631, 0, 1635, 0, 1638,
	0, 0, 1486, 0, 0, 0, 2196, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2200, 2201, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2225, 632,
	633, 634, 635, 636, 637, 638, 639, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 668, 669, 670, 671, 672,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1645, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2304,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1486, 0,
	0, 0, 0, 0, 0, 1774, 0, 0, 0, 0,
	1784, 1785, 0, 0, 1789, 2344, 0, 0, 0, 0,
	0, 0, 0, 1792, 0, 0, 0, 0, 0, 0,
	1795, 87, 0, 0, 0, 0, 0, 618, 625, 626,
	627, 628, 629, 619, 621, 0, 0, 0, 620, 0,
	0, 623, 630, 631, 0, 0, 0, 0, 1798, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2373, 0, 2377,
	2378, 0, 0, 609, 0, 0, 0, 610, 611, 0,
	0, 0, 612, 0, 0, 2200, 2201, 0, 0, 0,
	0, 0, 2102, 0, 79, 0, 2102, 632, 633, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 668, 669, 670, 671, 672, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2432, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2102, 0, 0, 0, 1915,
	0, 0, 0, 0, 0, 0, 0, 0, 2482, 2483,
	0, 0, 0, 0, 1148, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 79, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1959, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1645, 0,
	0, 0, 0, 0, 79, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2005, 2006, 2007, 2008, 2009, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1486, 2015,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2023, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2173, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2203, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2215, 0, 0, 2218, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2257, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2329, 0, 0, 2330, 2331, 2332, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 857, 843, 420, 0,
	791, 860, 761, 779, 870, 782, 785, 825, 740, 804,
	342, 776, 471, 234, 0, 0, 765, 736, 771, 737,
	763, 793, 245, 760, 845, 808, 859, 298, 242, 742,
	766, 356, 781, 193, 827, 396, 228, 308, 305, 427,
	256, 248, 244, 227, 282, 314, 354, 414, 348, 866,
	302, 814, 0, 405, 327, 0, 0, 0, 795, 849,
	802, 839, 790, 826, 750, 813, 861, 777, 822, 862,
	288, 226, 192, 339, 406, 260, 0, 0, 0, 0,
	184, 185, 186, 0, 2531, 0, 2532, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 773, 819, 856, 774,
	821, 240, 286, 247, 239, 424, 867, 848, 0, 0,
	209, 858, 797, 0, 824, 0, 873, 735, 816, 0,
	738, 741, 869, 852, 769, 250, 0, 0, 0, 0,
	0, 0, 0, 794, 803, 836, 788, 0, 0, 0,
	0, 0, 0, 0, 0, 767, 0, 812, 0, 0,
	0, 746, 739, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 792, 0, 0, 0, 749, 0,
	768, 837, 0, 733, 269, 743, 328, 231, 0, 841,
	851, 0, 789, 457, 855, 787, 786, 831, 747, 847,
	780, 297, 745, 294, 188, 205, 2498, 778, 338, 379,
	385, 846, 764, 772, 229, 770, 383, 352, 441, 213,
	258, 376, 357, 381, 364, 261, 811, 829, 382, 303,
	429, 371, 439, 458, 459, 238, 332, 448, 418, 454,
	470, 206, 235, 346, 411, 444, 402, 325, 425, 426,
	293, 401, 267, 191, 301, 464, 204, 391, 221, 211,
	197, 413, 437, 218, 394, 0, 0, 473, 199, 435,
	410, 321, 290, 291, 198, 0, 375, 243, 265, 232,
	341, 432, 433, 230, 474, 208, 453, 201, 1054, 452,
	334, 428, 436, 322, 313, 200, 434, 320, 312, 296,
	254, 276, 369, 306, 370, 277, 330, 329, 331, 194,
	445, 0, 195, 0, 407, 446, 475, 214, 215, 216,
	759, 253, 257, 264, 266, 272, 273, 280, 299, 345,
	368, 366, 372, 842, 423, 440, 449, 456, 462, 463,
	465, 466, 467, 468, 469, 333, 279, 403, 295, 304,
	834, 872, 351, 384, 219, 443, 404, 754, 758, 752,
	753, 806, 807, 755, 863, 864, 865, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 493, 0, 838, 748, 0, 756,
	757, 0, 844, 853, 854, 494, 810, 187, 202, 300,
	868, 373, 262, 472, 451, 447, 734, 751, 237, 762,
	0, 0, 775, 783, 784, 796, 798, 799, 800, 801,
	324, 817, 818, 820, 828, 830, 833, 835, 840, 850,
	871, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 310, 315, 316, 317,
	318, 335, 336, 337, 340, 343, 344, 347, 349, 350,
	353, 360, 361, 362, 363, 365, 367, 374, 378, 386,
	387, 388, 389, 390, 392, 393, 397, 398, 399, 400,
	408, 412, 430, 431, 442, 455, 460, 271, 438, 461,
	0, 309, 809, 815, 311, 255, 274, 285, 823, 450,
	409, 207, 380, 263, 196, 225, 210, 233, 249, 252,
	289, 319, 326, 355, 359, 268, 246, 223, 377, 220,
	395, 415, 416, 417, 419, 323, 241, 358, 805, 832,
	307, 421, 422, 281, 857, 843, 420, 0, 791, 860,
	761, 779, 870, 782, 785, 825, 740, 804, 342, 776,
	471, 234, 0, 0, 765, 736, 771, 737, 763, 793,
	245, 760, 845, 808, 859, 298, 242, 742, 766, 356,
	781, 193, 827, 396, 228, 308, 305, 427, 256, 248,
	244, 227, 282, 314, 354, 414, 348, 866, 302, 814,
	0, 405, 327, 0, 0, 0, 795, 849, 802, 839,
	790, 826, 750, 813, 861, 777, 822, 862, 288, 226,
	192, 339, 406, 260, 0, 0, 0, 0, 184, 185,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 773, 819, 856, 774, 821, 240,
	286, 247, 239, 424, 867, 848, 0, 0, 209, 858,
	797, 0, 824, 0, 873, 735, 816, 0, 738, 741,
	869, 852, 769, 250, 0, 0, 0, 0, 0, 0,
	0, 794, 803, 836, 788, 0, 0, 0, 0, 0,
	0, 2135, 0, 767, 0, 812, 0, 0, 0, 746,
	739, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 792, 0, 0, 0, 749, 0, 768, 837,
	0, 733, 269, 743, 328, 231, 0, 841, 851, 0,
	789, 457, 855, 787, 786, 831, 747, 847, 780, 297,
	745, 294, 188, 205, 0, 778, 338, 379, 385, 846,
	764, 772, 229, 770, 383, 352, 441, 213, 258, 376,
	357, 381, 364, 261, 811, 829, 382, 303, 429, 371,
	439, 458, 459, 238, 332, 448, 418, 454, 470, 206,
	235, 346, 411, 444, 402, 325, 425, 426, 293, 401,
	267, 191, 301, 464, 204, 391, 221, 211, 197, 413,
	437, 218, 394, 0, 0, 473, 199, 435, 410, 321,
	290, 291, 198, 0, 375, 243, 265, 232, 341, 432,
	433, 230, 474, 208, 453, 201, 1054, 452, 334, 428,
	436, 322, 313, 200, 434, 320, 312, 296, 254, 276,
	369, 306, 370, 277, 330, 329, 331, 194, 445, 0,
	195, 0, 407, 446, 475, 214, 215, 216, 759, 253,
	257, 264, 266, 272, 273, 280, 299, 345, 368, 366,
	372, 842, 423, 440, 449, 456, 462, 463, 465, 466,
	467, 468, 469, 333, 279, 403, 295, 304, 834, 872,
	351, 384, 219, 443, 404, 754, 758, 752, 753, 806,
	807, 755, 863, 864, 865, 476, 477, 478, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 493, 0, 838, 748, 0, 756, 757, 0,
	844, 853, 854, 494, 810, 187, 202, 300, 868, 373,
	262, 472, 451, 447, 734, 751, 237, 762, 0, 0,
	775, 783, 784, 796, 798, 799, 800, 801, 324, 817,
	818, 820, 828, 830, 833, 835, 840, 850, 871, 189,
	190, 203, 212, 222, 236, 251, 259, 270, 275, 278,
	283, 284, 287, 292, 310, 315, 316, 317, 318, 335,
	336, 337, 340, 343, 344, 347, 349, 350, 353, 360,
	361, 362, 363, 365, 367, 374, 378, 386, 387, 388,
	389, 390, 392, 393, 397, 398, 399, 400, 408, 412,
	430, 431, 442, 455, 460, 271, 438, 461, 0, 309,
	809, 815, 311, 255, 274, 285, 823, 450, 409, 207,
	380, 263, 196, 225, 210, 233, 249, 252, 289, 319,
	326, 355, 359, 268, 246, 223, 377, 220, 395, 415,
	416, 417, 419, 323, 241, 358, 805, 832, 307, 421,
	422, 281, 857, 843, 420, 0, 791, 860, 761, 779,
	870, 782, 785, 825, 740, 804, 342, 776, 471, 234,
	0, 0, 765, 736, 771, 737, 763, 793, 245, 760,
	845, 808, 859, 298, 242, 742, 766, 356, 781, 193,
	827, 396, 228, 308, 305, 427, 256, 248, 244, 227,
	282, 314, 354, 414, 348, 866, 302, 814, 0, 405,
	327, 0, 0, 0, 795, 849, 802, 839, 790, 826,
	750, 813, 861, 777, 822, 862, 288, 226, 192, 339,
	406, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 773, 819, 856, 774, 821, 240, 286, 247,
	239, 424, 867, 848, 0, 0, 209, 858, 797, 0,
	824, 0, 873, 735, 816, 0, 738, 741, 869, 852,
	769, 250, 0, 0, 0, 0, 0, 0, 0, 794,
	803, 836, 788, 0, 0, 0, 0, 0, 0, 2091,
	0, 767, 0, 812, 0, 0, 0, 746, 739, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	792, 0, 0, 0, 749, 0, 768, 837, 0, 733,
	269, 743, 328, 231, 0, 841, 851, 0, 789, 457,
	855, 787, 786, 831, 747, 847, 780, 297, 745, 294,
	188, 205, 0, 778, 338, 379, 385, 846, 764, 772,
	229, 770, 383, 352, 441, 213, 258, 376, 357, 381,
	364, 261, 811, 829, 382, 303, 429, 371, 439, 458,
	459, 238, 332, 448, 418, 454, 470, 206, 235, 346,
	411, 444, 402, 325, 425, 426, 293, 401, 267, 191,
	301, 464, 204, 391, 221, 211, 197, 413, 437, 218,
	394, 0, 0, 473, 199, 435, 410, 321, 290, 291,
	198, 0, 375, 243, 265, 232, 341, 432, 433, 230,
	474, 208, 453, 201, 1054, 452, 334, 428, 436, 322,
	313, 200, 434, 320, 312, 296, 254, 276, 369, 306,
	370, 277, 330, 329, 331, 194, 445, 0, 195, 0,
	407, 446, 475, 214, 215, 216, 759, 253, 257, 264,
	266, 272, 273, 280, 299, 345, 368, 366, 372, 842,
	423, 440, 449, 456, 462, 463, 465, 466, 467, 468,
	469, 333, 279, 403, 295, 304, 834, 872, 351, 384,
	219, 443, 404, 754, 758, 752, 753, 806, 807, 755,
	863, 864, 865, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	493, 0, 838, 748, 0, 756, 757, 0, 844, 853,
	854, 494, 810, 187, 202, 300, 868, 373, 262, 472,
	451, 447, 734, 751, 237, 762, 0, 0, 775, 783,
	784, 796, 798, 799, 800, 801, 324, 817, 818, 820,
	828, 830, 833, 835, 840, 850, 871, 189, 190, 203,
	212, 222, 236, 251, 259, 270, 275, 278, 283, 284,
	287, 292, 310, 315, 316, 317, 318, 335, 336, 337,
	340, 343, 344, 347, 349, 350, 353, 360, 361, 362,
	363, 365, 367, 374, 378, 386, 387, 388, 389, 390,
	392, 393, 397, 398, 399, 400, 408, 412, 430, 431,
	442, 455, 460, 271, 438, 461, 0, 309, 809, 815,
	311, 255, 274, 285, 823, 450, 409, 207, 380, 263,
	196, 225, 210, 233, 249, 252, 289, 319, 326, 355,
	359, 268, 246, 223, 377, 220, 395, 415, 416, 417,
	419, 323, 241, 358, 805, 832, 307, 421, 422, 281,
	857, 843, 420, 0, 791, 860, 761, 779, 870, 782,
	785, 825, 740, 804, 342, 776, 471, 234, 0, 0,
	765, 736, 771, 737, 763, 793, 245, 760, 845, 808,
	859, 298, 242, 742, 766, 356, 781, 193, 827, 396,
	228, 308, 305, 427, 256, 248, 244, 227, 282, 314,
	354, 414, 348, 866, 302, 814, 0, 405, 327, 0,
	0, 0, 795, 849, 802, 839, 790, 826, 750, 813,
	861, 777, 822, 862, 288, 226, 192, 339, 406, 260,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	773, 819, 856, 774, 821, 240, 286, 247, 239, 424,
	867, 848, 0, 0, 209, 858, 797, 0, 824, 0,
	873, 735, 816, 0, 738, 741, 869, 852, 769, 250,
	0, 0, 0, 0, 0, 0, 0, 794, 803, 836,
	788, 0, 0, 0, 0, 0, 0, 1633, 0, 767,
	0, 812, 0, 0, 0, 746, 739, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 792, 0,
	0, 0, 749, 0, 768, 837, 0, 733, 269, 743,
	328, 231, 0, 841, 851, 0, 789, 457, 855, 787,
	786, 831, 747, 847, 780, 297, 745, 294, 188, 205,
	0, 778, 338, 379, 385, 846, 764, 772, 229, 770,
	383, 352, 441, 213, 258, 376, 357, 381, 364, 261,
	811, 829, 382, 303, 429, 371, 439, 458, 459, 238,
	332, 448, 418, 454, 470, 206, 235, 346, 411, 444,
	402, 325, 425, 426, 293, 401, 267, 191, 301, 464,
	204, 391, 221, 211, 197, 413, 437, 218, 394, 0,
	0, 473, 199, 435, 410, 321, 290, 291, 198, 0,
	375, 243, 265, 232, 341, 432, 433, 230, 474, 208,
	453, 201, 1054, 452, 334, 428, 436, 322, 313, 200,
	434, 320, 312, 296, 254, 276, 369, 306, 370, 277,
	330, 329, 331, 194, 445, 0, 195, 0, 407, 446,
	475, 214, 215, 216, 759, 253, 257, 264, 266, 272,
	273, 280, 299, 345, 368, 366, 372, 842, 423, 440,
	449, 456, 462, 463, 465, 466, 467, 468, 469, 333,
	279, 403, 295, 304, 834, 872, 351, 384, 219, 443,
	404, 754, 758, 752, 753, 806, 807, 755, 863, 864,
	865, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 0,
	838, 748, 0, 756, 757, 0, 844, 853, 854, 494,
	810, 187, 202, 300, 868, 373, 262, 472, 451, 447,
	734, 751, 237, 762, 0, 0, 775, 783, 784, 796,
	798, 799, 800, 801, 324, 817, 818, 820, 828, 830,
	833, 835, 840, 850, 871, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	310, 315, 316, 317, 318, 335, 336, 337, 340, 343,
	344, 347, 349, 350, 353, 360, 361, 362, 363, 365,
	367, 374, 378, 386, 387, 388, 389, 390, 392, 393,
	397, 398, 399, 400, 408, 412, 430, 431, 442, 455,
	460, 271, 438, 461, 0, 309, 809, 815, 311, 255,
	274, 285, 823, 450, 409, 207, 380, 263, 196, 225,
	210, 233, 249, 252, 289, 319, 326, 355, 359, 268,
	246, 223, 377, 220, 395, 415, 416, 417, 419, 323,
	241, 358, 805, 832, 307, 421, 422, 281, 857, 843,
	420, 0, 791, 860, 761, 779, 870, 782, 785, 825,
	740, 804, 342, 776, 471, 234, 0, 0, 765, 736,
	771, 737, 763, 793, 245, 760, 845, 808, 859, 298,
	242, 742, 766, 356, 781, 193, 827, 396, 228, 308,
	305, 427, 256, 248, 244, 227, 282, 314, 354, 414,
	348, 866, 302, 814, 0, 405, 327, 0, 0, 0,
	795, 849, 802, 839, 790, 826, 750, 813, 861, 777,
	822, 862, 288, 226, 192, 339, 406, 260, 0, 87,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 773, 819,
	856, 774, 821, 240, 286, 247, 239, 424, 867, 848,
	0, 0, 209, 858, 797, 0, 824, 0, 873, 735,
	816, 0, 738, 741, 869, 852, 769, 250, 0, 0,
	0, 0, 0, 0, 0, 794, 803, 836, 788, 0,
	0, 0, 0, 0, 0, 0, 0, 767, 0, 812,
	0, 0, 0, 746, 739, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 792, 0, 0, 0,
	749, 0, 768, 837, 0, 733, 269, 743, 328, 231,
	0, 841, 851, 0, 789, 457, 855, 787, 786, 831,
	747, 847, 780, 297, 745, 294, 188, 205, 0, 778,
	338, 379, 385, 846, 764, 772, 229, 770, 383, 352,
	441, 213, 258, 376, 357, 381, 364, 261, 811, 829,
	382, 303, 429, 371, 439, 458, 459, 238, 332, 448,
	418, 454, 470, 206, 235, 346, 411, 444, 402, 325,
	425, 426, 293, 401, 267, 191, 301, 464, 204, 391,
	221, 211, 197, 413, 437, 218, 394, 0, 0, 473,
	199, 435, 410, 321, 290, 291, 198, 0, 375, 243,
	265, 232, 341, 432, 433, 230, 474, 208, 453, 201,
	1054, 452, 334, 428, 436, 322, 313, 200, 434, 320,
	312, 296, 254, 276, 369, 306, 370, 277, 330, 329,
	331, 194, 445, 0, 195, 0, 407, 446, 475, 214,
	215, 216, 759, 253, 257, 264, 266, 272, 273, 280,
	299, 345, 368, 366, 372, 842, 423, 440, 449, 456,
	462, 463, 465, 466, 467, 468, 469, 333, 279, 403,
	295, 304, 834, 872, 351, 384, 219, 443, 404, 754,
	758, 752, 753, 806, 807, 755, 863, 864, 865, 476,
	477, 478, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 493, 0, 838, 748,
	0, 756, 757, 0, 844, 853, 854, 494, 810, 187,
	202, 300, 868, 373, 262, 472, 451, 447, 734, 751,
	237, 762, 0, 0, 775, 783, 784, 796, 798, 799,
	800, 801, 324, 817, 818, 820, 828, 830, 833, 835,
	840, 850, 871, 189, 190, 203, 212, 222, 236, 251,
	259, 270, 275, 278, 283, 284, 287, 292, 310, 315,
	316, 317, 318, 335, 336, 337, 340, 343, 344, 347,
	349, 350, 353, 360, 361, 362, 363, 365, 367, 374,
	378, 386, 387, 388, 389, 390, 392, 393, 397, 398,
	399, 400, 408, 412, 430, 431, 442, 455, 460, 271,
	438, 461, 0, 309, 809, 815, 311, 255, 274, 285,
	823, 450, 409, 207, 380, 263, 196, 225, 210, 233,
	249, 252, 289, 319, 326, 355, 359, 268, 246, 223,
	377, 220, 395, 415, 416, 417, 419, 323, 241, 358,
	805, 832, 307, 421, 422, 281, 857, 843, 420, 0,
	791, 860, 761, 779, 870, 782, 785, 825, 740, 804,
	342, 776, 471, 234, 0, 0, 765, 736, 771, 737,
	763, 793, 245, 760, 845, 808, 859, 298, 242, 742,
	766, 356, 781, 193, 827, 396, 228, 308, 305, 427,
	256, 248, 244, 227, 282, 314, 354, 414, 348, 866,
	302, 814, 0, 405, 327, 0, 0, 0, 795, 849,
	802, 839, 790, 826, 750, 813, 861, 777, 822, 862,
	288, 226, 192, 339, 406, 260, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 773, 819, 856, 774,
	821, 240, 286, 247, 239, 424, 867, 848, 0, 0,
	209, 858, 797, 0, 824, 0, 873, 735, 816, 0,
	738, 741, 869, 852, 769, 250, 0, 0, 0, 0,
	0, 0, 0, 794, 803, 836, 788, 0, 0, 0,
	0, 0, 0, 0, 0, 767, 0, 812, 0, 0,
	0, 746, 739, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 792, 0, 0, 0, 749, 0,
	768, 837, 0, 733, 269, 743, 328, 231, 0, 841,
	851, 0, 789, 457, 855, 787, 786, 831, 747, 847,
	780, 297, 745, 294, 188, 205, 0, 778, 338, 379,
	385, 846, 764, 772, 229, 770, 383, 352, 441, 213,
	258, 376, 357, 381, 364, 261, 811, 829, 382, 303,
	429, 371, 439, 458, 459, 238, 332, 448, 418, 454,
	470, 206, 235, 346, 411, 444, 402, 325, 425, 426,
	293, 401, 267, 191, 301, 464, 204, 391, 221, 211,
	197, 413, 437, 218, 394, 0, 0, 473, 199, 435,
	410, 321, 290, 291, 198, 0, 375, 243, 265, 232,
	341, 432, 433, 230, 474, 208, 453, 201, 1054, 452,
	334, 428, 436, 322, 313, 200, 434, 320, 312, 296,
	254, 276, 369, 306, 370, 277, 330, 329, 331, 194,
	445, 0, 195, 0, 407, 446, 475, 214, 215, 216,
	759, 253, 257, 264, 266, 272, 273, 280, 299, 345,
	368, 366, 372, 842, 423, 440, 449, 456, 462, 463,
	465, 466, 467, 468, 469, 333, 279, 403, 295, 304,
	834, 872, 351, 384, 219, 443, 404, 754, 758, 752,
	753, 806, 807, 755, 863, 864, 865, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 493, 0, 838, 748, 0, 756,
	757, 0, 844, 853, 854, 494, 810, 187, 202, 300,
	868, 373, 262, 472, 451, 447, 734, 751, 237, 762,
	0, 0, 775, 783, 784, 796, 798, 799, 800, 801,
	324, 817, 818, 820, 828, 830, 833, 835, 840, 850,
	871, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 310, 315, 316, 317,
	318, 335, 336, 337, 340, 343, 344, 347, 349, 350,
	353, 360, 361, 362, 363, 365, 367, 374, 378, 386,
	387, 388, 389, 390, 392, 393, 397, 398, 399, 400,
	408, 412, 430, 431, 442, 455, 460, 271, 438, 461,
	0, 309, 809, 815, 311, 255, 274, 285, 823, 450,
	409, 207, 380, 263, 196, 225, 210, 233, 249, 252,
	289, 319, 326, 355, 359, 268, 246, 223, 377, 220,
	395, 415, 416, 417, 419, 323, 241, 358, 805, 832,
	307, 421, 422, 281, 857, 843, 420, 0, 791, 860,
	761, 779, 870, 782, 785, 825, 740, 804, 342, 776,
	471, 234, 0, 0, 765, 736, 771, 737, 763, 793,
	245, 760, 845, 808, 859, 298, 242, 742, 766, 356,
	781, 193, 827, 396, 228, 308, 305, 427, 256, 248,
	244, 227, 282, 314, 354, 414, 348, 866, 302, 814,
	0, 405, 327, 0, 0, 0, 795, 849, 802, 839,
	790, 826, 750, 813, 861, 777, 822, 862, 288, 226,
	192, 339, 406, 260, 0, 0, 0, 0, 184, 185,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 773, 819, 856, 774, 821, 240,
	286, 247, 239, 424, 867, 848, 0, 0, 874, 858,
	797, 0, 824, 0, 873, 735, 816, 0, 738, 741,
	869, 852, 769, 250, 0, 0, 0, 0, 0, 0,
	0, 794, 803, 836, 788, 0, 0, 0, 0, 0,
	0, 0, 0, 767, 0, 812, 0, 0, 0, 746,
	739, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 792, 0, 0, 0, 749, 0, 768, 837,
	0, 733, 269, 743, 328, 231, 0, 841, 851, 0,
	789, 457, 855, 787, 786, 831, 747, 847, 780, 297,
	745, 294, 188, 205, 0, 778, 338, 379, 385, 846,
	764, 772, 229, 770, 383, 352, 441, 213, 258, 376,
	357, 381, 364, 261, 811, 829, 382, 303, 429, 371,
	439, 458, 459, 238, 332, 448, 418, 454, 470, 206,
	235, 346, 411, 444, 402, 325, 425, 426, 293, 401,
	267, 191, 301, 464, 204, 391, 221, 211, 197, 413,
	437, 218, 394, 0, 0, 473, 199, 435, 410, 321,
	290, 291, 198, 0, 375, 243, 265, 232, 341, 432,
	433, 230, 474, 208, 453, 201, 744, 452, 334, 428,
	436, 322, 313, 200, 434, 320, 312, 296, 254, 276,
	369, 306, 370, 277, 330, 329, 331, 194, 445, 0,
	195, 0, 407, 446, 475, 214, 215, 216, 759, 253,
	257, 264, 266, 272, 273, 280, 299, 345, 368, 366,
	372, 842, 423, 440, 449, 456, 462, 463, 465, 466,
	467, 468, 469, 732, 726, 725, 295, 304, 834, 872,
	351, 384, 219, 443, 404, 754, 758, 752, 753, 806,
	807, 755, 863, 864, 865, 476, 477, 478, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 493, 0, 838, 748, 0, 756, 757, 0,
	844, 853, 854, 494, 810, 187, 202, 300, 868, 373,
	262, 472, 451, 447, 734, 751, 237, 762, 0, 0,
	775, 783, 784, 796, 798, 799, 800, 801, 324, 817,
	818, 820, 828, 830, 833, 835, 840, 850, 871, 189,
	190, 203, 212, 222, 236, 251, 259, 270, 275, 278,
	283, 284, 287, 292, 310, 315, 316, 317, 318, 335,
	336, 337, 340, 343, 344, 347, 349, 350, 353, 360,
	361, 362, 363, 365, 367, 374, 378, 386, 387, 388,
	389, 390, 392, 393, 397, 398, 399, 400, 408, 412,
	430, 431, 442, 455, 460, 271, 438, 461, 0, 309,
	809, 815, 311, 255, 274, 285, 823, 450, 409, 207,
	380, 263, 196, 225, 210, 233, 249, 252, 289, 319,
	326, 355, 359, 268, 246, 223, 377, 220, 395, 415,
	416, 417, 419, 323, 241, 358, 805, 832, 307, 421,
	422, 281, 857, 843, 420, 0, 791, 860, 761, 779,
	870, 782, 785, 825, 740, 804, 342, 776, 471, 234,
	0, 0, 765, 736, 771, 737, 763, 793, 245, 760,
	845, 808, 859, 298, 242, 742, 766, 356, 781, 193,
	827, 396, 228, 308, 305, 427, 256, 248, 244, 227,
	282, 314, 354, 414, 348, 866, 302, 814, 0, 405,
	327, 0, 0, 0, 795, 849, 802, 839, 790, 826,
	750, 813, 861, 777, 822, 862, 288, 226, 192, 339,
	406, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 773, 819, 856, 774, 821, 240, 286, 247,
	239, 424, 867, 848, 0, 0, 874, 858, 797, 0,
	824, 0, 873, 735, 816, 0, 738, 741, 869, 852,
	769, 250, 0, 0, 0, 0, 0, 0, 0, 794,
	803, 836, 788, 0, 0, 0, 0, 0, 0, 0,
	0, 767, 0, 812, 0, 0, 0, 746, 739, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	792, 0, 0, 0, 749, 0, 768, 837, 0, 733,
	269, 743, 328, 231, 0, 841, 851, 0, 789, 457,
	855, 787, 786, 831, 747, 847, 780, 297, 745, 294,
	188, 205, 0, 778, 338, 379, 385, 846, 764, 772,
	229, 770, 383, 352, 441, 213, 258, 376, 357, 381,
	364, 261, 811, 829, 382, 303, 429, 371, 439, 458,
	459, 238, 332, 448, 418, 454, 470, 206, 235, 346,
	411, 444, 402, 325, 425, 426, 293, 401, 267, 191,
	301, 464, 204, 391, 221, 211, 197, 413, 1232, 218,
	394, 0, 0, 473, 199, 435, 410, 321, 290, 291,
	198, 0, 375, 243, 265, 232, 341, 432, 433, 230,
	474, 208, 453, 201, 744, 452, 334, 428, 436, 322,
	313, 200, 434, 320, 312, 296, 254, 276, 369, 306,
	370, 277, 330, 329, 331, 194, 445, 0, 195, 0,
	407, 446, 475, 214, 215, 216, 759, 253, 257, 264,
	266, 272, 273, 280, 299, 345, 368, 366, 372, 842,
	423, 440, 449, 456, 462, 463, 465, 466, 467, 468,
	469, 732, 726, 725, 295, 304, 834, 872, 351, 384,
	219, 443, 404, 754, 758, 752, 753, 806, 807, 755,
	863, 864, 865, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	493, 0, 838, 748, 0, 756, 757, 0, 844, 853,
	854, 494, 810, 187, 202, 300, 868, 373, 262, 472,
	451, 447, 734, 751, 237, 762, 0, 0, 775, 783,
	784, 796, 798, 799, 800, 801, 324, 817, 818, 820,
	828, 830, 833, 835, 840, 850, 871, 189, 190, 203,
	212, 222, 236, 251, 259, 270, 275, 278, 283, 284,
	287, 292, 310, 315, 316, 317, 318, 335, 336, 337,
	340, 343, 344, 347, 349, 350, 353, 360, 361, 362,
	363, 365, 367, 374, 378, 386, 387, 388, 389, 390,
	392, 393, 397, 398, 399, 400, 408, 412, 430, 431,
	442, 455, 460, 271, 438, 461, 0, 309, 809, 815,
	311, 255, 274, 285, 823, 450, 409, 207, 380, 263,
	196, 225, 210, 233, 249, 252, 289, 319, 326, 355,
	359, 268, 246, 223, 377, 220, 395, 415, 416, 417,
	419, 323, 241, 358, 805, 832, 307, 421, 422, 281,
	857, 843, 420, 0, 791, 860, 761, 779, 870, 782,
	785, 825, 740, 804, 342, 776, 471, 234, 0, 0,
	765, 736, 771, 737, 763, 793, 245, 760, 845, 808,
	859, 298, 242, 742, 766, 356, 781, 193, 827, 396,
	228, 308, 305, 427, 256, 248, 244, 227, 282, 314,
	354, 414, 348, 866, 302, 814, 0, 405, 327, 0,
	0, 0, 795, 849, 802, 839, 790, 826, 750, 813,
	861, 777, 822, 862, 288, 226, 192, 339, 406, 260,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	773, 819, 856, 774, 821, 240, 286, 247, 239, 424,
	867, 848, 0, 0, 874, 858, 797, 0, 824, 0,
	873, 735, 816, 0, 738, 741, 869, 852, 769, 250,
	0, 0, 0, 0, 0, 0, 0, 794, 803, 836,
	788, 0, 0, 0, 0, 0, 0, 0, 0, 767,
	0, 812, 0, 0, 0, 746, 739, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 792, 0,
	0, 0, 749, 0, 768, 837, 0, 733, 269, 743,
	328, 231, 0, 841, 851, 0, 789, 457, 855, 787,
	786, 831, 747, 847, 780, 297, 745, 294, 188, 205,
	0, 778, 338, 379, 385, 846, 764, 772, 229, 770,
	383, 352, 441, 213, 258, 376, 357, 381, 364, 261,
	811, 829, 382, 303, 429, 371, 439, 458, 459, 238,
	332, 448, 418, 454, 470, 206, 235, 346, 411, 444,
	402, 325, 425, 426, 293, 401, 267, 191, 301, 464,
	204, 391, 221, 211, 197, 413, 723, 218, 394, 0,
	0, 473, 199, 435, 410, 321, 290, 291, 198, 0,
	375, 243, 265, 232, 341, 432, 433, 230, 474, 208,
	453, 201, 744, 452, 334, 428, 436, 322, 313, 200,
	434, 320, 312, 296, 254, 276, 369, 306, 370, 277,
	330, 329, 331, 194, 445, 0, 195, 0, 407, 446,
	475, 214, 215, 216, 759, 253, 257, 264, 266, 272,
	273, 280, 299, 345, 368, 366, 372, 842, 423, 440,
	449, 456, 462, 463, 465, 466, 467, 468, 469, 732,
	726, 725, 295, 304, 834, 872, 351, 384, 219, 443,
	404, 754, 758, 752, 753, 806, 807, 755, 863, 864,
	865, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 0,
	838, 748, 0, 756, 757, 0, 844, 853, 854, 494,
	810, 187, 202, 300, 868, 373, 262, 472, 451, 447,
	734, 751, 237, 762, 0, 0, 775, 783, 784, 796,
	798, 799, 800, 801, 324, 817, 818, 820, 828, 830,
	833, 835, 840, 850, 871, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	310, 315, 316, 317, 318, 335, 336, 337, 340, 343,
	344, 347, 349, 350, 353, 360, 361, 362, 363, 365,
	367, 374, 378, 386, 387, 388, 389, 390, 392, 393,
	397, 398, 399, 400, 408, 412, 430, 431, 442, 455,
	460, 271, 438, 461, 0, 309, 809, 815, 311, 255,
	274, 285, 823, 450, 409, 207, 380, 263, 196, 225,
	210, 233, 249, 252, 289, 319, 326, 355, 359, 268,
	246, 223, 377, 220, 395, 415, 416, 417, 419, 323,
	241, 358, 805, 832, 307, 421, 422, 281, 420, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 0, 471, 234, 0, 0, 1577, 0, 575, 0,
	0, 0, 245, 580, 0, 0, 0, 298, 242, 0,
	1578, 356, 0, 193, 0, 396, 228, 308, 305, 427,
	256, 248, 244, 227, 282, 314, 354, 414, 348, 587,
	302, 0, 0, 405, 327, 0, 0, 0, 0, 0,
	582, 583, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 226, 192, 339, 406, 260, 0, 87, 0, 0,
	184, 185, 186, 618, 625, 626, 627, 628, 629, 619,
	621, 0, 0, 217, 620, 224, 596, 623, 630, 631,
	0, 240, 286, 247, 239, 424, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 558, 572,
	0, 586, 0, 0, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 569, 570, 712, 0, 0, 0, 603, 0, 571,
	0, 0, 579, 632, 633, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 668,
	669, 670, 671, 672, 581, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 328, 231, 0, 602,
	0, 0, 0, 457, 0, 0, 600, 0, 0, 0,
	0, 297, 0, 294, 188, 205, 0, 0, 338, 379,
	385, 0, 0, 0, 229, 0, 383, 352, 441, 213,
	258, 376, 357, 381, 364, 261, 0, 0, 382, 303,
	429, 371, 439, 458, 459, 238, 332, 448, 418, 454,
	470, 206, 235, 346, 411, 444, 402, 325, 425, 426,
	293, 401, 267, 191, 301, 464, 204, 391, 221, 211,
	197, 413, 437, 218, 394, 0, 0, 473, 199, 435,
	410, 321, 290, 291, 198, 0, 375, 243, 265, 232,
	341, 432, 433, 230, 474, 208, 453, 201, 0, 452,
	334, 428, 436, 322, 313, 200, 434, 320, 312, 296,
	254, 276, 369, 306, 370, 277, 330, 329, 331, 194,
	445, 0, 195, 0, 407, 446, 475, 214, 215, 216,
	0, 253, 257, 264, 266, 272, 273, 280, 299, 345,
	368, 366, 372, 0, 423, 440, 449, 456, 462, 463,
	465, 466, 467, 468, 469, 333, 279, 403, 295, 304,
	0, 0, 351, 384, 219, 443, 404, 609, 601, 591,
	593, 610, 611, 588, 589, 592, 612, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 493, 0, 604, 578, 577, 0,
	584, 585, 0, 594, 595, 597, 576, 187, 202, 300,
	0, 373, 262, 472, 451, 447, 0, 0, 237, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	324, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 310, 315, 316, 317,
	318, 335, 336, 337, 340, 343, 344, 347, 349, 350,
	353, 360, 361, 362, 363, 365, 367, 374, 378, 386,
	387, 388, 389, 390, 392, 393, 397, 398, 399, 400,
	408, 412, 430, 431, 442, 455, 460, 271, 438, 461,
	0, 309, 0, 0, 311, 255, 274, 285, 0, 450,
	409, 207, 380, 263, 196, 225, 210, 233, 249, 252,
	289, 319, 326, 355, 359, 268, 246, 223, 377, 220,
	395, 415, 416, 417, 419, 323, 241, 358, 420, 0,
	307, 421, 422, 281, 0, 0, 0, 0, 0, 0,
	342, 0, 471, 234, 0, 0, 0, 0, 575, 0,
	0, 0, 245, 580, 0, 0, 0, 298, 242, 0,
	0, 356, 0, 193, 0, 396, 228, 308, 305, 427,
	256, 248, 244, 227, 282, 314, 354, 414, 348, 587,
	302, 0, 0, 405, 327, 0, 0, 0, 0, 0,
	582, 583, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 226, 192, 339, 406, 260, 0, 87, 0, 0,
	184, 185, 186, 618, 625, 626, 627, 628, 629, 619,
	621, 0, 0, 217, 620, 224, 596, 623, 630, 631,
	0, 240, 286, 247, 239, 424, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 558, 572,
	0, 586, 0, 0, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 569, 570, 0, 0, 0, 0, 603, 0, 571,
	0, 0, 579, 632, 633, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 668,
	669, 670, 671, 672, 581, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 328, 231, 0, 602,
	2412, 2413, 0, 457, 0, 0, 600, 0, 0, 0,
	0, 297, 0, 294, 188, 205, 0, 0, 338, 379,
	385, 0, 0, 0, 229, 0, 383, 352, 441, 213,
	258, 376, 357, 381, 364, 261, 0, 0, 382, 303,
	429, 371, 439, 458, 459, 238, 332, 448, 418, 454,
	470, 206, 235, 346, 411, 444, 402, 325, 425, 426,
	293, 401, 267, 191, 301, 464, 204, 391, 221, 211,
	197, 413, 437, 218, 394, 0, 0, 473, 199, 435,
	410, 321, 290, 291, 198, 0, 375, 243, 265, 232,
	341, 432, 433, 230, 474, 208, 453, 201, 0, 452,
	334, 428, 436, 322, 313, 200, 434, 320, 312, 296,
	254, 276, 369, 306, 370, 277, 330, 329, 331, 194,
	445, 0, 195, 0, 407, 446, 475, 214, 215, 216,
	0, 253, 257, 264, 266, 272, 273, 280, 299, 345,
	368, 366, 372, 0, 423, 440, 449, 456, 462, 463,
	465, 466, 467, 468, 469, 333, 279, 403, 295, 304,
	0, 0, 351, 384, 219, 443, 404, 609, 601, 591,
	593, 610, 611, 588, 589, 592, 612, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 493, 0, 604, 578, 577, 0,
	584, 585, 0, 594, 595, 597, 576, 187, 202, 300,
	0, 373, 262, 472, 451, 447, 0, 0, 237, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	324, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 310, 315, 316, 317,
	318, 335, 336, 337, 340, 343, 344, 347, 349, 350,
	353, 360, 361, 362, 363, 365, 367, 374, 378, 386,
	387, 388, 389, 390, 392, 393, 397, 398, 399, 400,
	408, 412, 430, 431, 442, 455, 460, 271, 438, 461,
	0, 309, 0, 0, 311, 255, 274, 285, 0, 450,
	409, 207, 380, 263, 196, 225, 210, 233, 249, 252,
	289, 319, 326, 355, 359, 268, 246, 223, 377, 220,
	395, 415, 416, 417, 419, 323, 241, 358, 420, 0,
	307, 421, 422, 281, 0, 0, 0, 0, 0, 0,
	342, 0, 471, 234, 0, 0, 0, 0, 575, 0,
	0, 0, 245, 580, 0, 0, 0, 298, 242, 0,
	0, 356, 0, 193, 0, 396, 228, 308, 305, 427,
	256, 248, 244, 227, 282, 314, 354, 414, 348, 587,
	302, 0, 0, 405, 327, 0, 0, 0, 0, 0,
	582, 583, 0, 0, 0, 0, 0, 0, 1658, 0,
	288, 226, 192, 339, 406, 260, 0, 87, 0, 0,
	184, 185, 186, 618, 625, 626, 627, 628, 629, 619,
	621, 0, 0, 217, 620, 224, 596, 623, 630, 631,
	1659, 240, 286, 247, 239, 424, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 558, 572,
	0, 586, 0, 0, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 569, 570, 0, 0, 0, 0, 603, 0, 571,
	0, 0, 579, 632, 633, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 668,
	669, 670, 671, 672, 581, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 328, 231, 0, 602,
	0, 0, 0, 457, 0, 0, 600, 0, 0, 0,
	0, 297, 0, 294, 188, 205, 0, 0, 338, 379,
	385, 0, 0, 0, 229, 0, 383, 352, 441, 213,
	258, 376, 357, 381, 364, 261, 0, 0, 382, 303,
	429, 371, 439, 458, 459, 238, 332, 448, 418, 454,
	470, 206, 235, 346, 411, 444, 402, 325, 425, 426,
	293, 401, 267, 191, 301, 464, 204, 391, 221, 211,
	197, 413, 437, 218, 394, 0, 0, 473, 199, 435,
	410, 321, 290, 291, 198, 0, 375, 243, 265, 232,
	341, 432, 433, 230, 474, 208, 453, 201, 0, 452,
	334, 428, 436, 322, 313, 200, 434, 320, 312, 296,
	254, 276, 369, 306, 370, 277, 330, 329, 331, 194,
	445, 0, 195, 0, 407, 446, 475, 214, 215, 216,
	0, 253, 257, 264, 266, 272, 273, 280, 299, 345,
	368, 366, 372, 0, 423, 440, 449, 456, 462, 463,
	465, 466, 467, 468, 469, 333, 279, 403, 295, 304,
	0, 0, 351, 384, 219, 443, 404, 609, 601, 591,
	593, 610, 611, 588, 589, 592, 612, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 493, 0, 604, 578, 577, 0,
	584, 585, 0, 594, 595, 597, 576, 187, 202, 300,
	0, 373, 262, 472, 451, 447, 0, 0, 237, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	324, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 310, 315, 316, 317,
	318, 335, 336, 337, 340, 343, 344, 347, 349, 350,
	353, 360, 361, 362, 363, 365, 367, 374, 378, 386,
	387, 388, 389, 390, 392, 393, 397, 398, 399, 400,
	408, 412, 430, 431, 442, 455, 460, 271, 438, 461,
	0, 309, 0, 0, 311, 255, 274, 285, 0, 450,
	409, 207, 380, 263, 196, 225, 210, 233, 249, 252,
	289, 319, 326, 355, 359, 268, 246, 223, 377, 220,
	395, 415, 416, 417, 419, 323, 241, 358, 78, 420,
	307, 421, 422, 281, 0, 0, 0, 0, 0, 0,
	0, 342, 0, 471, 234, 0, 0, 0, 0, 575,
	0, 0, 0, 245, 580, 0, 0, 0, 298, 242,
	0, 0, 356, 0, 193, 0, 396, 228, 308, 305,
	427, 256, 248, 244, 227, 282, 314, 354, 414, 348,
	587, 302, 0, 0, 405, 327, 0, 0, 0, 0,
	0, 582, 583, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 226, 192, 339, 406, 260, 0, 87, 0,
	0, 184, 185, 186, 618, 625, 626, 627, 628, 629,
	619, 621, 0, 0, 217, 620, 224, 596, 623, 630,
	631, 0, 240, 286, 247, 239, 424, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 558,
	572, 0, 586, 0, 0, 0, 250, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 569, 570, 0, 0, 0, 0, 603, 0,
	571, 0, 0, 579, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 581, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 328, 231, 0,
	602, 0, 0, 0, 457, 0, 0, 600, 0, 0,
	0, 0, 297, 0, 294, 188, 205, 0, 0, 338,
	379, 385, 0, 0, 0, 229, 0, 383, 352, 441,
	213, 258, 376, 357, 381, 364, 261, 0, 0, 382,
	303, 429, 371, 439, 458, 459, 238, 332, 448, 418,
	454, 470, 206, 235, 346, 411, 444, 402, 325, 425,
	426, 293, 401, 267, 191, 301, 464, 204, 391, 221,
	211, 197, 413, 437, 218, 394, 0, 0, 473, 199,
	435, 410, 321, 290, 291, 198, 0, 375, 243, 265,
	232, 341, 432, 433, 230, 474, 208, 453, 201, 0,
	452, 334, 428, 436, 322, 313, 200, 434, 320, 312,
	296, 254, 276, 369, 306, 370, 277, 330, 329, 331,
	194, 445, 0, 195, 0, 407, 446, 475, 214, 215,
	216, 0, 253, 257, 264, 266, 272, 273, 280, 299,
	345, 368, 366, 372, 0, 423, 440, 449, 456, 462,
	463, 465, 466, 467, 468, 469, 333, 279, 403, 295,
	304, 0, 0, 351, 384, 219, 443, 404, 609, 601,
	591, 593, 610, 611, 588, 589, 592, 612, 476, 477,
	478, 479, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 493, 0, 604, 578, 577,
	0, 584, 585, 0, 594, 595, 597, 576, 187, 202,
	300, 86, 373, 262, 472, 451, 447, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 324, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 236, 251, 259,
	270, 275, 278, 283, 284, 287, 292, 310, 315, 316,
	317, 318, 335, 336, 337, 340, 343, 344, 347, 349,
	350, 353, 360, 361, 362, 363, 365, 367, 374, 378,
	386, 387, 388, 389, 390, 392, 393, 397, 398, 399,
	400, 408, 412, 430, 431, 442, 455, 460, 271, 438,
	461, 0, 309, 0, 0, 311, 255, 274, 285, 0,
	450, 409, 207, 380, 263, 196, 225, 210, 233, 249,
	252, 289, 319, 326, 355, 359, 268, 246, 223, 377,
	220, 395, 415, 416, 417, 419, 323, 241, 358, 420,
	0, 307, 421, 422, 281, 0, 0, 0, 0, 0,
	0, 342, 0, 471, 234, 0, 0, 0, 0, 575,
	0, 0, 0, 245, 580, 0, 0, 0, 298, 242,
	0, 0, 356, 0, 193, 0, 396, 228, 308, 305,
	427, 256, 248, 244, 227, 282, 314, 354, 414, 348,
	587, 302, 0, 0, 405, 327, 0, 0, 0, 0,
	0, 582, 583, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 226, 192, 339, 406, 260, 0, 87, 0,
	0, 184, 185, 186, 618, 625, 626, 627, 628, 629,
	619, 621, 0, 0, 217, 620, 224, 596, 623, 630,
	631, 0, 240, 286, 247, 239, 424, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 558,
	572, 0, 586, 0, 0, 0, 250, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 569, 570, 0, 0, 0, 0, 603, 0,
	571, 0, 0, 579, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 581, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 328, 231, 0,
	602, 0, 0, 0, 457, 0, 0, 600, 0, 0,
	0, 0, 297, 0, 294, 188, 205, 0, 0, 338,
	379, 385, 0, 0, 0, 229, 0, 383, 352, 441,
	213, 258, 376, 357, 381, 364, 261, 2493, 0, 382,
	303, 429, 371, 439, 458, 459, 238, 332, 448, 418,
	454, 470, 206, 235, 346, 411, 444, 402, 325, 425,
	426, 293, 401, 267, 191, 301, 464, 204, 391, 221,
	211, 197, 413, 437, 218, 394, 0, 0, 473, 199,
	435, 410, 321, 290, 291, 198, 0, 375, 243, 265,
	232, 341, 432, 433, 230, 474, 208, 453, 201, 0,
	452, 334, 428, 436, 322, 313, 200, 434, 320, 312,
	296, 254, 276, 369, 306, 370, 277, 330, 329, 331,
	194, 445, 0, 195, 0, 407, 446, 475, 214, 215,
	216, 0, 253, 257, 264, 266, 272, 273, 280, 299,
	345, 368, 366, 372, 0, 423, 440, 449, 456, 462,
	463, 465, 466, 467, 468, 469, 333, 279, 403, 295,
	304, 0, 0, 351, 384, 219, 443, 404, 609, 601,
	591, 593, 610, 611, 588, 589, 592, 612, 476, 477,
	478, 479, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 493, 0, 604, 578, 577,
	0, 584, 585, 0, 594, 595, 597, 576, 187, 202,
	300, 0, 373, 262, 472, 451, 447, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 324, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 236, 251, 259,
	270, 275, 278, 283, 284, 287, 292, 310, 315, 316,
	317, 318, 335, 336, 337, 340, 343, 344, 347, 349,
	350, 353, 360, 361, 362, 363, 365, 367, 374, 378,
	386, 387, 388, 389, 390, 392, 393, 397, 398, 399,
	400, 408, 412, 430, 431, 442, 455, 460, 271, 438,
	461, 0, 309, 0, 0, 311, 255, 274, 285, 0,
	450, 409, 207, 380, 263, 196, 225, 210, 233, 249,
	252, 289, 319, 326, 355, 359, 268, 246, 223, 377,
	220, 395, 415, 416, 417, 419, 323, 241, 358, 420,
	0, 307, 421, 422, 281, 0, 0, 0, 0, 0,
	0, 342, 0, 471, 234, 0, 0, 0, 0, 575,
	0, 0, 0, 245, 580, 0, 0, 0, 298, 242,
	0, 0, 356, 0, 193, 0, 396, 228, 308, 305,
	427, 256, 248, 244, 227, 282, 314, 354, 414, 348,
	587, 302, 0, 0, 405, 327, 0, 0, 0, 0,
	0, 582, 583, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 226, 192, 339, 406, 260, 0, 87, 0,
	1200, 184, 185, 186, 618, 625, 626, 627, 628, 629,
	619, 621, 0, 0, 217, 620, 224, 596, 623, 630,
	631, 0, 240, 286, 247, 239, 424, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 558,
	572, 0, 586, 0, 0, 0, 250, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 569, 570, 0, 0, 0, 0, 603, 0,
	571, 0, 0, 579, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 581, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 328, 231, 0,
	602, 0, 0, 0, 457, 0, 0, 600, 0, 0,
	0, 0, 297, 0, 294, 188, 205, 0, 0, 338,
	379, 385, 0, 0, 0, 229, 0, 383, 352, 441,
	213, 258, 376, 357, 381, 364, 261, 0, 0, 382,
	303, 429, 371, 439, 458, 459, 238, 332, 448, 418,
	454, 470, 206, 235, 346, 411, 444, 402, 325, 425,
	426, 293, 401, 267, 191, 301, 464, 204, 391, 221,
	211, 197, 413, 437, 218, 394, 0, 0, 473, 199,
	435, 410, 321, 290, 291, 198, 0, 375, 243, 265,
	232, 341, 432, 433, 230, 474, 208, 453, 201, 0,
	452, 334, 428, 436, 322, 313, 200, 434, 320, 312,
	296, 254, 276, 369, 306, 370, 277, 330, 329, 331,
	194, 445, 0, 195, 0, 407, 446, 475, 214, 215,
	216, 0, 253, 257, 264, 266, 272, 273, 280, 299,
	345, 368, 366, 372, 0, 423, 440, 449, 456, 462,
	463, 465, 466, 467, 468, 469, 333, 279, 403, 295,
	304, 0, 0, 351, 384, 219, 443, 404, 609, 601,
	591, 593, 610, 611, 588, 589, 592, 612, 476, 477,
	478, 479, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 493, 0, 604, 578, 577,
	0, 584, 585, 0, 594, 595, 597, 576, 187, 202,
	300, 0, 373, 262, 472, 451, 447, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 324, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 236, 251, 259,
	270, 275, 278, 283, 284, 287, 292, 310, 315, 316,
	317, 318, 335, 336, 337, 340, 343, 344, 347, 349,
	350, 353, 360, 361, 362, 363, 365, 367, 374, 378,
	386, 387, 388, 389, 390, 392, 393, 397, 398, 399,
	400, 408, 412, 430, 431, 442, 455, 460, 271, 438,
	461, 0, 309, 0, 0, 311, 255, 274, 285, 0,
	450, 409, 207, 380, 263, 196, 225, 210, 233, 249,
	252, 289, 319, 326, 355, 359, 268, 246, 223, 377,
	220, 395, 415, 416, 417, 419, 323, 241, 358, 420,
	0, 307, 421, 422, 281, 0, 0, 0, 0, 0,
	0, 342, 0, 471, 234, 0, 0, 0, 0, 575,
	0, 0, 0, 245, 580, 0, 0, 0, 298, 242,
	0, 0, 356, 0, 193, 0, 396, 228, 308, 305,
	427, 256, 248, 244, 227, 282, 314, 354, 414, 348,
	587, 302, 0, 0, 405, 327, 0, 0, 0, 0,
	0, 582, 583, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 226, 192, 339, 406, 260, 0, 87, 0,
	0, 184, 185, 186, 618, 625, 626, 627, 628, 629,
	619, 621, 0, 0, 217, 620, 224, 596, 623, 630,
	631, 0, 240, 286, 247, 239, 424, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 558,
	572, 0, 586, 0, 0, 0, 250, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 569, 570, 712, 0, 0, 0, 603, 0,
	571, 0, 0, 579, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 581, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 328, 231, 0,
	602, 0, 0, 0, 457, 0, 0, 600, 0, 0,
	0, 0, 297, 0, 294, 188, 205, 0, 0, 338,
	379, 385, 0, 0, 0, 229, 0, 383, 352, 441,
	213, 258, 376, 357, 381, 364, 261, 0, 0, 382,
	303, 429, 371, 439, 458, 459, 238, 332, 448, 418,
	454, 470, 206, 235, 346, 411, 444, 402, 325, 425,
	426, 293, 401, 267, 191, 301, 464, 204, 391, 221,
	211, 197, 413, 437, 218, 394, 0, 0, 473, 199,
	435, 410, 321, 290, 291, 198, 0, 375, 243, 265,
	232, 341, 432, 433, 230, 474, 208, 453, 201, 0,
	452, 334, 428, 436, 322, 313, 200, 434, 320, 312,
	296, 254, 276, 369, 306, 370, 277, 330, 329, 331,
	194, 445, 0, 195, 0, 407, 446, 475, 214, 215,
	216, 0, 253, 257, 264, 266, 272, 273, 280, 299,
	345, 368, 366, 372, 0, 423, 440, 449, 456, 462,
	463, 465, 466, 467, 468, 469, 333, 279, 403, 295,
	304, 0, 0, 351, 384, 219, 443, 404, 609, 601,
	591, 593, 610, 611, 588, 589, 592, 612, 476, 477,
	478, 479, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 493, 0, 604, 578, 577,
	0, 584, 585, 0, 594, 595, 597, 576, 187, 202,
	300, 0, 373, 262, 472, 451, 447, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 324, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 236, 251, 259,
	270, 275, 278, 283, 284, 287, 292, 310, 315, 316,
	317, 318, 335, 336, 337, 340, 343, 344, 347, 349,
	350, 353, 360, 361, 362, 363, 365, 367, 374, 378,
	386, 387, 388, 389, 390, 392, 393, 397, 398, 399,
	400, 408, 412, 430, 431, 442, 455, 460, 271, 438,
	461, 0, 309, 0, 0, 311, 255, 274, 285, 0,
	450, 409, 207, 380, 263, 196, 225, 210, 233, 249,
	252, 289, 319, 326, 355, 359, 268, 246, 223, 377,
	220, 395, 415, 416, 417, 419, 323, 241, 358, 420,
	0, 307, 421, 422, 281, 0, 0, 0, 0, 0,
	0, 342, 0, 471, 234, 0, 0, 0, 0, 575,
	0, 0, 0, 245, 580, 0, 0, 0, 298, 242,
	0, 0, 356, 0, 193, 0, 396, 228, 308, 305,
	427, 256, 248, 244, 227, 282, 314, 354, 414, 348,
	587, 302, 0, 0, 405, 327, 0, 0, 0, 0,
	0, 582, 583, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 226, 192, 339, 406, 260, 0, 87, 0,
	0, 184, 185, 186, 618, 625, 626, 627, 628, 629,
	619, 621, 0, 0, 217, 620, 224, 596, 623, 630,
	631, 0, 240, 286, 247, 239, 424, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 558,
	572, 0, 586, 0, 0, 0, 250, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 569, 570, 0, 0, 0, 0, 603, 0,
	571, 0, 0, 579, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 581, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 328, 231, 0,
	602, 0, 0, 0, 457, 0, 0, 600, 0, 0,
	0, 0, 297, 0, 294, 188, 205, 0, 0, 338,
	379, 385, 0, 0, 0, 229, 0, 383, 352, 441,
	213, 258, 376, 357, 381, 364, 261, 0, 0, 382,
	303, 429, 371, 439, 458, 459, 238, 332, 448, 418,
	454, 470, 206, 235, 346, 411, 444, 402, 325, 425,
	426, 293, 401, 267, 191, 301, 464, 204, 391, 221,
	211, 197, 413, 437, 218, 394, 0, 0, 473, 199,
	435, 410, 321, 290, 291, 198, 0, 375, 243, 265,
	232, 341, 432, 433, 230, 474, 208, 453, 201, 0,
	452, 334, 428, 436, 322, 313, 200, 434, 320, 312,
	296, 254, 276, 369, 306, 370, 277, 330, 329, 331,
	194, 445, 0, 195, 0, 407, 446, 475, 214, 215,
	216, 0, 253, 257, 264, 266, 272, 273, 280, 299,
	345, 368, 366, 372, 0, 423, 440, 449, 456, 462,
	463, 465, 466, 467, 468, 469, 333, 279, 403, 295,
	304, 0, 0, 351, 384, 219, 443, 404, 609, 601,
	591, 593, 610, 611, 588, 589, 592, 612, 476, 477,
	478, 479, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 493, 0, 604, 578, 577,
	0, 584, 585, 0, 594, 595, 597, 576, 187, 202,
	300, 0, 373, 262, 472, 451, 447, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 324, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 236, 251, 259,
	270, 275, 278, 283, 284, 287, 292, 310, 315, 316,
	317, 318, 335, 336, 337, 340, 343, 344, 347, 349,
	350, 353, 360, 361, 362, 363, 365, 367, 374, 378,
	386, 387, 388, 389, 390, 392, 393, 397, 398, 399,
	400, 408, 412, 430, 431, 442, 455, 460, 271, 438,
	461, 0, 309, 0, 0, 311, 255, 274, 285, 0,
	450, 409, 207, 380, 263, 196, 225, 210, 233, 249,
	252, 289, 319, 326, 355, 359, 268, 246, 223, 377,
	220, 395, 415, 416, 417, 419, 323, 241, 358, 420,
	0, 307, 421, 422, 281, 0, 0, 0, 0, 0,
	0, 342, 0, 471, 234, 0, 0, 0, 0, 575,
	0, 0, 0, 245, 580, 0, 0, 0, 298, 242,
	0, 0, 356, 0, 193, 0, 396, 228, 308, 305,
	427, 256, 248, 244, 227, 282, 314, 354, 414, 348,
	587, 302, 0, 0, 405, 327, 0, 0, 0, 0,
	0, 582, 583, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 226, 192, 339, 406, 260, 0, 87, 0,
	0, 184, 185, 186, 618, 625, 626, 627, 628, 629,
	619, 621, 0, 0, 217, 620, 224, 596, 623, 630,
	631, 0, 240, 286, 247, 239, 424, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	572, 0, 586, 0, 0, 0, 250, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 569, 570, 0, 0, 0, 0, 603, 0,
	571, 0, 0, 579, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 581, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 328, 231, 0,
	602, 0, 0, 0, 457, 0, 0, 600, 0, 0,
	0, 0, 297, 0, 294, 188, 205, 0, 0, 338,
	379, 385, 0, 0, 0, 229, 0, 383, 352, 441,
	213, 258, 376, 357, 381, 364, 261, 0, 0, 382,
	303, 429, 371, 439, 458, 459, 238, 332, 448, 418,
	454, 470, 206, 235, 346, 411, 444, 402, 325, 425,
	426, 293, 401, 267, 191, 301, 464, 204, 391, 221,
	211, 197, 413, 437, 218, 394, 0, 0, 473, 199,
	435, 410, 321, 290, 291, 198, 0, 375, 243, 265,
	232, 341, 432, 433, 230, 474, 208, 453, 201, 0,
	452, 334, 428, 436, 322, 313, 200, 434, 320, 312,
	296, 254, 276, 369, 306, 370, 277, 330, 329, 331,
	194, 445, 0, 195, 0, 407, 446, 475, 214, 215,
	216, 0, 253, 257, 264, 266, 272, 273, 280, 299,
	345, 368, 366, 372, 0, 423, 440, 449, 456, 462,
	463, 465, 466, 467, 468, 469, 333, 279, 403, 295,
	304, 0, 0, 351, 384, 219, 443, 404, 609, 601,
	591, 593, 610, 611, 588, 589, 592, 612, 476, 477,
	478, 479, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 493, 0, 604, 578, 577,
	0, 584, 585, 0, 594, 595, 597, 576, 187, 202,
	300, 0, 373, 262, 472, 451, 447, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 324, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 236, 251, 259,
	270, 275, 278, 283, 284, 287, 292, 310, 315, 316,
	317, 318, 335, 336, 337, 340, 343, 344, 347, 349,
	350, 353, 360, 361, 362, 363, 365, 367, 374, 378,
	386, 387, 388, 389, 390, 392, 393, 397, 398, 399,
	400, 408, 412, 430, 431, 442, 455, 460, 271, 438,
	461, 0, 309, 0, 0, 311, 255, 274, 285, 0,
	450, 409, 207, 380, 263, 196, 225, 210, 233, 249,
	252, 289, 319, 326, 355, 359, 268, 246, 223, 377,
	220, 395, 415, 416, 417, 419, 323, 241, 358, 420,
	0, 307, 421, 422, 281, 0, 0, 0, 0, 0,
	0, 342, 0, 471, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 0, 0, 0, 0, 298, 242,
	0, 0, 356, 0, 193, 0, 396, 228, 308, 305,
	427, 256, 248, 244, 227, 282, 314, 354, 414, 348,
	0, 302, 0, 0, 405, 327, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 226, 192, 339, 406, 260, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 0, 0, 0,
	0, 0, 240, 286, 247, 239, 424, 0, 0, 0,
	0, 209, 0, 922, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 328, 231, 0,
	0, 0, 0, 921, 457, 0, 0, 0, 0, 0,
	918, 919, 297, 882, 294, 188, 205, 912, 916, 338,
	379, 385, 0, 0, 0, 229, 0, 383, 352, 441,
	213, 258, 376, 357, 381, 364, 261, 0, 0, 382,
	303, 429, 371, 439, 458, 459, 238, 332, 448, 418,
	454, 470, 206, 235, 346, 411, 444, 402, 325, 425,
	426, 293, 401, 267, 191, 301, 464, 204, 391, 221,
	211, 197, 413, 437, 218, 394, 0, 0, 473, 199,
	435, 410, 321, 290, 291, 198, 0, 375, 243, 265,
	232, 341, 432, 433, 230, 474, 208, 453, 201, 0,
	452, 334, 428, 436, 322, 313, 200, 434, 320, 312,
	296, 254, 276, 369, 306, 370, 277, 330, 329, 331,
	194, 445, 0, 195, 0, 407, 446, 475, 214, 215,
	216, 0, 253, 257, 264, 266, 272, 273, 280, 299,
	345, 368, 366, 372, 0, 423, 440, 449, 456, 462,
	463, 465, 466, 467, 468, 469, 333, 279, 403, 295,
	304, 0, 0, 351, 384, 219, 443, 404, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 476, 477,
	478, 479, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 493, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 494, 0, 187, 202,
	300, 0, 373, 262, 472, 451, 447, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 324, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 236, 251, 259,
	270, 275, 278, 283, 284, 287, 292, 310, 315, 316,
	317, 318, 335, 336, 337, 340, 343, 344, 347, 349,
	350, 353, 360, 361, 362, 363, 365, 367, 374, 378,
	386, 387, 388, 389, 390, 392, 393, 397, 398, 399,
	400, 408, 412, 430, 431, 442, 455, 460, 271, 438,
	461, 0, 309, 0, 0, 311, 255, 274, 285, 0,
	450, 409, 207, 380, 263, 196, 225, 210, 233, 249,
	252, 289, 319, 326, 355, 359, 268, 246, 223, 377,
	220, 395, 415, 416, 417, 419, 323, 241, 358, 420,
	0, 307, 421, 422, 281, 0, 0, 0, 0, 0,
	0, 342, 0, 471, 234, 0, 0, 0, 1220, 0,
	0, 0, 0, 245, 0, 0, 0, 0, 298, 242,
	0, 0, 356, 0, 193, 0, 396, 228, 308, 305,
	427, 256, 248, 244, 227, 282, 314, 354, 414, 348,
	0, 302, 0, 0, 405, 327, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 226, 192, 339, 406, 260, 0, 0, 0,
	0, 184, 185, 186, 0, 1222, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 0, 0, 0,
	0, 0, 240, 286, 247, 239, 424, 0, 0, 0,
	0, 209, 0, 0, 0, 1086, 0, 1087, 1088, 0,
	0, 0, 0, 0, 0, 0, 250, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 328, 231, 0,
	0, 0, 0, 0, 457, 0, 0, 0, 0, 0,
	0, 0, 297, 0, 294, 188, 205, 0, 0, 338,
	379, 385, 0, 0, 0, 229, 0, 383, 352, 441,
	213, 258, 376, 357, 381, 364, 261, 0, 0, 382,
	303, 429, 371, 439, 458, 459, 238, 332, 448, 418,
	454, 470, 206, 235, 346, 411, 444, 402, 325, 425,
	426, 293, 401, 267, 191, 301, 464, 204, 391, 221,
	211, 197, 413, 437, 218, 394, 0, 0, 473, 199,
	435, 410, 321, 290, 291, 198, 0, 375, 243, 265,
	232, 341, 432, 433, 230, 474, 208, 453, 201, 0,
	452, 334, 428, 436, 322, 313, 200, 434, 320, 312,
	296, 254, 276, 369, 306, 370, 277, 330, 329, 331,
	194, 445, 0, 195, 0, 407, 446, 475, 214, 215,
	216, 0, 253, 257, 264, 266, 272, 273, 280, 299,
	345, 368, 366, 372, 0, 423, 440, 449, 456, 462,
	463, 465, 466, 467, 468, 469, 333, 279, 403, 295,
	304, 0, 0, 351, 384, 219, 443, 404, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 476, 477,
	478, 479, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 493, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 494, 0, 187, 202,
	300, 0, 373, 262, 472, 451, 447, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 324, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 236, 251, 259,
	270, 275, 278, 283, 284, 287, 292, 310, 315, 316,
	317, 318, 335, 336, 337, 340, 343, 344, 347, 349,
	350, 353, 360, 361, 362, 363, 365, 367, 374, 378,
	386, 387, 388, 389, 390, 392, 393, 397, 398, 399,
	400, 408, 412, 430, 431, 442, 455, 460, 271, 438,
	461, 0, 309, 0, 0, 311, 255, 274, 285, 0,
	450, 409, 207, 380, 263, 196, 225, 210, 233, 249,
	252, 289, 319, 326, 355, 359, 268, 246, 223, 377,
	220, 395, 415, 416, 417, 419, 323, 241, 358, 420,
	0, 307, 421, 422, 281, 0, 0, 0, 0, 0,
	0, 342, 0, 471, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 0, 0, 0, 0, 298, 242,
	0, 0, 356, 0, 193, 0, 396, 228, 308, 305,
	427, 256, 248, 244, 227, 282, 314, 354, 414, 348,
	0, 302, 0, 0, 405, 327, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 226, 192, 339, 406, 260, 0, 0, 0,
	0, 184, 185, 186, 1162, 1165, 0, 0, 0, 0,
	1161, 1164, 0, 0, 217, 1160, 224, 0, 0, 0,
	0, 0, 240, 286, 247, 239, 424, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 328, 231, 0,
	0, 0, 0, 0, 457, 0, 0, 0, 0, 0,
	0, 0, 297, 0, 294, 188, 205, 0, 0, 338,
	379, 385, 0, 0, 0, 229, 0, 383, 352, 441,
	213, 258, 376, 357, 381, 364, 261, 0, 0, 382,
	303, 429, 371, 439, 458, 459, 238, 332, 448, 418,
	454, 470, 206, 235, 346, 411, 444, 402, 325, 425,
	426, 293, 401, 267, 191, 301, 464, 204, 391, 221,
	211, 197, 413, 437, 218, 394, 0, 0, 473, 199,
	435, 410, 321, 290, 291, 198, 0, 375, 243, 265,
	232, 341, 432, 433, 230, 474, 208, 453, 201, 0,
	452, 334, 428, 436, 322, 313, 200, 434, 320, 312,
	296, 254, 276, 369, 306, 370, 277, 330, 329, 331,
	194, 445, 0, 195, 0, 407, 446, 475, 214, 215,
	216, 0, 253, 257, 264, 266, 272, 273, 280, 299,
	345, 368, 366, 372, 0, 423, 440, 449, 456, 462,
	463, 465, 466, 467, 468, 469, 333, 279, 403, 295,
	304, 0, 0, 351, 384, 219, 443, 404, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 476, 477,
	478, 479, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 493, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 494, 0, 187, 202,
	300, 0, 373, 262, 472, 451, 447, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 324, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 236, 251, 259,
	270, 275, 278, 283, 284, 287, 292, 310, 315, 316,
	317, 318, 335, 336, 337, 340, 343, 344, 347, 349,
	350, 353, 360, 361, 362, 363, 365, 367, 374, 378,
	386, 387, 388, 389, 390, 392, 393, 397, 398, 399,
	400, 408, 412, 430, 431, 442, 455, 460, 271, 438,
	461, 0, 309, 0, 0, 311, 255, 274, 285, 0,
	450, 409, 207, 380, 263, 196, 225, 210, 233, 249,
	252, 289, 319, 326, 355, 359, 268, 246, 223, 377,
	220, 395, 415, 416, 417, 419, 323, 241, 358, 78,
	420, 307, 421, 422, 281, 0, 0, 0, 0, 0,
	0, 0, 342, 0, 471, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 0, 0, 0, 0, 298,
	242, 0, 0, 356, 0, 193, 0, 396, 228, 308,
	305, 427, 256, 248, 244, 227, 282, 314, 354, 414,
	348, 0, 302, 0, 0, 405, 327, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 226, 192, 339, 406, 260, 0, 87,
	0, 1200, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 0, 0,
	0, 0, 0, 240, 286, 247, 239, 424, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 328, 231,
	0, 0, 0, 0, 0, 457, 0, 0, 0, 0,
	0, 0, 0, 297, 0, 294, 188, 205, 0, 0,
	338, 379, 385, 0, 0, 0, 229, 0, 383, 352,
	441, 213, 258, 376, 357, 381, 364, 261, 0, 0,
	382, 303, 429, 371, 439, 458, 459, 238, 332, 448,
	418, 454, 470, 206, 235, 346, 411, 444, 402, 325,
	425, 426, 293, 401, 267, 191, 301, 464, 204, 391,
	221, 211, 197, 413, 437, 218, 394, 0, 0, 473,
	199, 435, 410, 321, 290, 291, 198, 0, 375, 243,
	265, 232, 341, 432, 433, 230, 474, 208, 453, 201,
	0, 452, 334, 428, 436, 322, 313, 200, 434, 320,
	312, 296, 254, 276, 369, 306, 370, 277, 330, 329,
	331, 194, 445, 0, 195, 0, 407, 446, 475, 214,
	215, 216, 0, 253, 257, 264, 266, 272, 273, 280,
	299, 345, 368, 366, 372, 0, 423, 440, 449, 456,
	462, 463, 465, 466, 467, 468, 469, 333, 279, 403,
	295, 304, 0, 0, 351, 384, 219, 443, 404, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 476,
	477, 478, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 493, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 494, 0, 187,
	202, 300, 86, 373, 262, 472, 451, 447, 0, 0,
	237, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 324, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 236, 251,
	259, 270, 275, 278, 283, 284, 287, 292, 310, 315,
	316, 317, 318, 335, 336, 337, 340, 343, 344, 347,
	349, 350, 353, 360, 361, 362, 363, 365, 367, 374,
	378, 386, 387, 388, 389, 390, 392, 393, 397, 398,
	399, 400, 408, 412, 430, 431, 442, 455, 460, 271,
	438, 461, 0, 309, 0, 0, 311, 255, 274, 285,
	0, 450, 409, 207, 380, 263, 196, 225, 210, 233,
	249, 252, 289, 319, 326, 355, 359, 268, 246, 223,
	377, 220, 395, 415, 416, 417, 419, 323, 241, 358,
	78, 420, 307, 421, 422, 281, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 471, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 0, 0, 0,
	298, 242, 0, 0, 356, 0, 193, 0, 396, 228,
	308, 305, 427, 256, 248, 244, 227, 282, 314, 354,
	414, 348, 0, 302, 0, 0, 405, 327, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 226, 192, 339, 406, 260, 0,
	87, 0, 0, 1646, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 0,
	0, 0, 0, 0, 240, 286, 247, 239, 424, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 328,
	231, 0, 0, 0, 0, 0, 457, 0, 0, 0,
	0, 0, 0, 0, 297, 0, 294, 188, 205, 0,
	0, 338, 379, 385, 0, 0, 0, 229, 0, 383,
	352, 441, 213, 258, 376, 357, 381, 364, 261, 0,
	0, 382, 303, 429, 371, 439, 458, 459, 238, 332,
	448, 418, 454, 470, 206, 235, 346, 411, 444, 402,
	325, 425, 426, 293, 401, 267, 191, 301, 464, 204,
	391, 221, 211, 197, 413, 437, 218, 394, 0, 0,
	473, 199, 435, 410, 321, 290, 291, 198, 0, 375,
	243, 265, 232, 341, 432, 433, 230, 474, 208, 453,
	201, 0, 452, 334, 428, 436, 322, 313, 200, 434,
	320, 312, 296, 254, 276, 369, 306, 370, 277, 330,
	329, 331, 194, 445, 0, 195, 0, 407, 446, 475,
	214, 215, 216, 0, 253, 257, 264, 266, 272, 273,
	280, 299, 345, 368, 366, 372, 0, 423, 440, 449,
	456, 462, 463, 465, 466, 467, 468, 469, 333, 279,
	403, 295, 304, 0, 0, 351, 384, 219, 443, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 494, 0,
	187, 202, 300, 86, 373, 262, 472, 451, 447, 0,
	0, 237, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 324, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 236,
	251, 259, 270, 275, 278, 283, 284, 287, 292, 310,
	315, 316, 317, 318, 335, 336, 337, 340, 343, 344,
	347, 349, 350, 353, 360, 361, 362, 363, 365, 367,
	374, 378, 386, 387, 388, 389, 390, 392, 393, 397,
	398, 399, 400, 408, 412, 430, 431, 442, 455, 460,
	271, 438, 461, 0, 309, 0, 0, 311, 255, 274,
	285, 0, 450, 409, 207, 380, 263, 196, 225, 210,
	233, 249, 252, 289, 319, 326, 355, 359, 268, 246,
	223, 377, 220, 395, 415, 416, 417, 419, 323, 241,
	358, 420, 0, 307, 421, 422, 281, 0, 0, 0,
	0, 0, 0, 342, 0, 471, 234, 0, 0, 0,
	1599, 0, 0, 0, 0, 245, 0, 0, 0, 0,
	298, 242, 0, 0, 356, 0, 193, 0, 396, 228,
	308, 305, 427, 256, 248, 244, 227, 282, 314, 354,
	414, 348, 0, 302, 0, 0, 405, 327, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 226, 192, 339, 406, 260, 0,
	0, 0, 0, 184, 185, 186, 0, 1392, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 0,
	0, 0, 0, 0, 240, 286, 247, 239, 424, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 328,
	231, 0, 0, 0, 0, 0, 457, 0, 0, 0,
	0, 0, 0, 0, 297, 0, 294, 188, 205, 0,
	0, 338, 379, 385, 0, 0, 0, 229, 0, 383,
	352, 441, 213, 258, 376, 357, 381, 364, 261, 0,
	1597, 382, 303, 429, 371, 439, 458, 459, 238, 332,
	448, 418, 454, 470, 206, 235, 346, 411, 444, 402,
	325, 425, 426, 293, 401, 267, 191, 301, 464, 204,
	391, 221, 211, 197, 413, 437, 218, 394, 0, 0,
	473, 199, 435, 410, 321, 290, 291, 198, 0, 375,
	243, 265, 232, 341, 432, 433, 230, 474, 208, 453,
	201, 0, 452, 334, 428, 436, 322, 313, 200, 434,
	320, 312, 296, 254, 276, 369, 306, 370, 277, 330,
	329, 331, 194, 445, 0, 195, 0, 407, 446, 475,
	214, 215, 216, 0, 253, 257, 264, 266, 272, 273,
	280, 299, 345, 368, 366, 372, 0, 423, 440, 449,
	456, 462, 463, 465, 466, 467, 468, 469, 333, 279,
	403, 295, 304, 0, 0, 351, 384, 219, 443, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 494, 0,
	187, 202, 300, 0, 373, 262, 472, 451, 447, 0,
	0, 237, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 324, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 236,
	251, 259, 270, 275, 278, 283, 284, 287, 292, 310,
	315, 316, 317, 318, 335, 336, 337, 340, 343, 344,
	347, 349, 350, 353, 360, 361, 362, 363, 365, 367,
	374, 378, 386, 387, 388, 389, 390, 392, 393, 397,
	398, 399, 400, 408, 412, 430, 431, 442, 455, 460,
	271, 438, 461, 0, 309, 0, 0, 311, 255, 274,
	285, 0, 450, 409, 207, 380, 263, 196, 225, 210,
	233, 249, 252, 289, 319, 326, 355, 359, 268, 246,
	223, 377, 220, 395, 415, 416, 417, 419, 323, 241,
	358, 420, 0, 307, 421, 422, 281, 0, 0, 0,
	0, 0, 0, 342, 0, 471, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 0, 0, 0,
	298, 242, 0, 0, 356, 0, 193, 0, 396, 228,
	308, 305, 427, 256, 248, 244, 227, 282, 314, 354,
	414, 348, 0, 302, 0, 0, 405, 327, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 226, 192, 339, 406, 260, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 0,
	0, 0, 0, 0, 240, 286, 247, 239, 424, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 876, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 328,
	231, 0, 0, 0, 0, 0, 457, 0, 0, 0,
	0, 0, 0, 0, 297, 882, 294, 188, 205, 880,
	0, 338, 379, 385, 0, 0, 0, 229, 0, 383,
	352, 441, 213, 258, 376, 357, 381, 364, 261, 0,
	0, 382, 303, 429, 371, 439, 458, 459, 238, 332,
	448, 418, 454, 470, 206, 235, 346, 411, 444, 402,
	325, 425, 426, 293, 401, 267, 191, 301, 464, 204,
	391, 221, 211, 197, 413, 437, 218, 394, 0, 0,
	473, 199, 435, 410, 321, 290, 291, 198, 0, 375,
	243, 265, 232, 341, 432, 433, 230, 474, 208, 453,
	201, 0, 452, 334, 428, 436, 322, 313, 200, 434,
	320, 312, 296, 254, 276, 369, 306, 370, 277, 330,
	329, 331, 194, 445, 0, 195, 0, 407, 446, 475,
	214, 215, 216, 0, 253, 257, 264, 266, 272, 273,
	280, 299, 345, 368, 366, 372, 0, 423, 440, 449,
	456, 462, 463, 465, 466, 467, 468, 469, 333, 279,
	403, 295, 304, 0, 0, 351, 384, 219, 443, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 494, 0,
	187, 202, 300, 0, 373, 262, 472, 451, 447, 0,
	0, 237, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 324, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 236,
	251, 259, 270, 275, 278, 283, 284, 287, 292, 310,
	315, 316, 317, 318, 335, 336, 337, 340, 343, 344,
	347, 349, 350, 353, 360, 361, 362, 363, 365, 367,
	374, 378, 386, 387, 388, 389, 390, 392, 393, 397,
	398, 399, 400, 408, 412, 430, 431, 442, 455, 460,
	271, 438, 461, 0, 309, 0, 0, 311, 255, 274,
	285, 0, 450, 409, 207, 380, 263, 196, 225, 210,
	233, 249, 252, 289, 319, 326, 355, 359, 268, 246,
	223, 377, 220, 395, 415, 416, 417, 419, 323, 241,
	358, 420, 0, 307, 421, 422, 281, 0, 0, 0,
	0, 0, 0, 342, 0, 471, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 0, 0, 0,
	298, 242, 0, 0, 356, 0, 193, 0, 396, 228,
	308, 305, 427, 256, 248, 244, 227, 282, 314, 354,
	414, 348, 0, 302, 0, 0, 405, 327, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 226, 192, 339, 406, 260, 0,
	0, 0, 1200, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 0,
	0, 0, 0, 0, 240, 286, 247, 239, 424, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 328,
	231, 0, 0, 0, 0, 0, 457, 0, 0, 0,
	2458, 0, 0, 0, 297, 0, 294, 188, 205, 0,
	0, 338, 379, 385, 0, 0, 0, 229, 0, 383,
	352, 441, 213, 258, 376, 357, 381, 364, 261, 0,
	0, 382, 303, 429, 371, 439, 458, 459, 238, 332,
	448, 418, 454, 470, 206, 235, 346, 411, 444, 402,
	325, 425, 426, 293, 401, 267, 191, 301, 464, 204,
	391, 221, 211, 197, 413, 437, 218, 394, 0, 0,
	473, 199, 435, 410, 321, 290, 291, 198, 0, 375,
	243, 265, 232, 341, 432, 433, 230, 474, 208, 453,
	201, 0, 452, 334, 428, 436, 322, 313, 200, 434,
	320, 312, 296, 254, 276, 369, 306, 370, 277, 330,
	329, 331, 194, 445, 0, 195, 0, 407, 446, 475,
	214, 215, 216, 0, 253, 257, 264, 266, 272, 273,
	280, 299, 345, 368, 366, 372, 0, 423, 440, 449,
	456, 462, 463, 465, 466, 467, 468, 469, 333, 279,
	403, 295, 304, 0, 0, 351, 384, 219, 443, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 494, 0,
	187, 202, 300, 0, 373, 262, 472, 451, 447, 0,
	0, 237, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 324, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 236,
	251, 259, 270, 275, 278, 283, 284, 287, 292, 310,
	315, 316, 317, 318, 335, 336, 337, 340, 343, 344,
	347, 349, 350, 353, 360, 361, 362, 363, 365, 367,
	374, 378, 386, 387, 388, 389, 390, 392, 393, 397,
	398, 399, 400, 408, 412, 430, 431, 442, 455, 460,
	271, 438, 461, 0, 309, 0, 0, 311, 255, 274,
	285, 0, 450, 409, 207, 380, 263, 196, 225, 210,
	233, 249, 252, 289, 319, 326, 355, 359, 268, 246,
	223, 377, 220, 395, 415, 416, 417, 419, 323, 241,
	358, 420, 0, 307, 421, 422, 281, 0, 0, 0,
	0, 0, 0, 342, 0, 471, 234, 0, 0, 0,
	1599, 0, 0, 0, 0, 245, 0, 0, 0, 0,
	298, 242, 0, 0, 356, 0, 193, 0, 396, 228,
	308, 305, 427, 256, 248, 244, 227, 282, 314, 354,
	414, 348, 0, 302, 0, 0, 405, 327, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 226, 192, 339, 406, 260, 0,
	0, 0, 0, 184, 185, 186, 0, 1392, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 0,
	0, 0, 0, 0, 240, 286, 247, 239, 424, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 328,
	231, 0, 0, 0, 0, 0, 457, 0, 0, 0,
	0, 0, 0, 0, 297, 0, 294, 188, 205, 0,
	0, 338, 379, 385, 0, 0, 0, 229, 0, 383,
	352, 441, 213, 258, 376, 357, 381, 364, 261, 0,
	0, 382, 303, 429, 371, 439, 458, 459, 238, 332,
	448, 418, 454, 470, 206, 235, 346, 411, 444, 402,
	325, 425, 426, 293, 401, 267, 191, 301, 464, 204,
	391, 221, 211, 197, 413, 437, 218, 394, 0, 0,
	473, 199, 435, 410, 321, 290, 291, 198, 0, 375,
	243, 265, 232, 341, 432, 433, 230, 474, 208, 453,
	201, 0, 452, 334, 428, 436, 322, 313, 200, 434,
	320, 312, 296, 254, 276, 369, 306, 370, 277, 330,
	329, 331, 194, 445, 0, 195, 0, 407, 446, 475,
	214, 215, 216, 0, 253, 257, 264, 266, 272, 273,
	280, 299, 345, 368, 366, 372, 0, 423, 440, 449,
	456, 462, 463, 465, 466, 467, 468, 469, 333, 279,
	403, 295, 304, 0, 0, 351, 384, 219, 443, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 494, 0,
	187, 202, 300, 0, 373, 262, 472, 451, 447, 0,
	0, 237, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 324, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 236,
	251, 259, 270, 275, 278, 283, 284, 287, 292, 310,
	315, 316, 317, 318, 335, 336, 337, 340, 343, 344,
	347, 349, 350, 353, 360, 361, 362, 363, 365, 367,
	374, 378, 386, 387, 388, 389, 390, 392, 393, 397,
	398, 399, 400, 408, 412, 430, 431, 442, 455, 460,
	271, 438, 461, 0, 309, 0, 0, 311, 255, 274,
	285, 0, 450, 409, 207, 380, 263, 196, 225, 210,
	233, 249, 252, 289, 319, 326, 355, 359, 268, 246,
	223, 377, 220, 395, 415, 416, 417, 419, 323, 241,
	358, 420, 0, 307, 421, 422, 281, 0, 0, 0,
	0, 0, 0, 342, 0, 471, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 0, 0, 0,
	298, 242, 0, 0, 356, 0, 193, 0, 396, 228,
	308, 305, 427, 256, 248, 244, 227, 282, 314, 354,
	414, 348, 0, 302, 0, 0, 405, 327, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 226, 192, 339, 406, 260, 0,
	0, 0, 0, 184, 185, 186, 0, 1883, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 0,
	0, 0, 0, 0, 240, 286, 247, 239, 424, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1884, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 328,
	231, 0, 0, 0, 0, 0, 457, 0, 0, 0,
	0, 0, 0, 0, 297, 0, 294, 188, 205, 0,
	0, 338, 379, 385, 0, 0, 0, 229, 0, 383,
	352, 441, 213, 258, 376, 357, 381, 364, 261, 0,
	0, 382, 303, 429, 371, 439, 458, 459, 238, 332,
	448, 418, 454, 470, 206, 235, 346, 411, 444, 402,
	325, 425, 426, 293, 401, 267, 191, 301, 464, 204,
	391, 221, 211, 197, 413, 437, 218, 394, 0, 0,
	473, 199, 435, 410, 321, 290, 291, 198, 0, 375,
	243, 265, 232, 341, 432, 433, 230, 474, 208, 453,
	201, 0, 452, 334, 428, 436, 322, 313, 200, 434,
	320, 312, 296, 254, 276, 369, 306, 370, 277, 330,
	329, 331, 194, 445, 0, 195, 0, 407, 446, 475,
	214, 215, 216, 0, 253, 257, 264, 266, 272, 273,
	280, 299, 345, 368, 366, 372, 0, 423, 440, 449,
	456, 462, 463, 465, 466, 467, 468, 469, 333, 279,
	403, 295, 304, 0, 0, 351, 384, 219, 443, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 494, 0,
	187, 202, 300, 0, 373, 262, 472, 451, 447, 0,
	0, 237, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 324, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 236,
	251, 259, 270, 275, 278, 283, 284, 287, 292, 310,
	315, 316, 317, 318, 335, 336, 337, 340, 343, 344,
	347, 349, 350, 353, 360, 361, 362, 363, 365, 367,
	374, 378, 386, 387, 388, 389, 390, 392, 393, 397,
	398, 399, 400, 408, 412, 430, 431, 442, 455, 460,
	271, 438, 461, 0, 309, 0, 0, 311, 255, 274,
	285, 0, 450, 409, 207, 380, 263, 196, 225, 210,
	233, 249, 252, 289, 319, 326, 355, 359, 268, 246,
	223, 377, 220, 395, 415, 416, 417, 419, 323, 241,
	358, 420, 0, 307, 421, 422, 281, 0, 0, 0,
	0, 0, 0, 342, 0, 471, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 0, 0, 0,
	298, 242, 0, 0, 356, 0, 193, 0, 396, 228,
	308, 305, 427, 256, 248, 244, 227, 282, 314, 354,
	414, 348, 0, 302, 0, 0, 405, 327, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 226, 192, 339, 406, 260, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 1868,
	0, 0, 0, 1869, 0, 0, 217, 0, 224, 0,
	0, 0, 0, 0, 240, 286, 247, 239, 424, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 328,
	231, 0, 0, 0, 0, 0, 457, 0, 0, 0,
	0, 0, 0, 0, 297, 0, 294, 188, 205, 0,
	0, 338, 379, 385, 0, 0, 0, 229, 0, 383,
	352, 441, 213, 258, 376, 357, 381, 364, 261, 0,
	0, 382, 303, 429, 371, 439, 458, 459, 238, 332,
	448, 418, 454, 470, 206, 235, 346, 411, 444, 402,
	325, 425, 426, 293, 401, 267, 191, 301, 464, 204,
	391, 221, 211, 197, 413, 437, 218, 394, 0, 0,
	473, 199, 435, 410, 321, 290, 291, 198, 0, 375,
	243, 265, 232, 341, 432, 433, 230, 474, 208, 453,
	201, 0, 452, 334, 428, 436, 322, 313, 200, 434,
	320, 312, 296, 254, 276, 369, 306, 370, 277, 330,
	329, 331, 194, 445, 0, 195, 0, 407, 446, 475,
	214, 215, 216, 0, 253, 257, 264, 266, 272, 273,
	280, 299, 345, 368, 366, 372, 0, 423, 440, 449,
	456, 462, 463, 465, 466, 467, 468, 469, 333, 279,
	403, 295, 304, 0, 0, 351, 384, 219, 443, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 494, 0,
	187, 202, 300, 0, 373, 262, 472, 451, 447, 0,
	0, 237, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 324, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 236,
	251, 259, 270, 275, 278, 283, 284, 287, 292, 310,
	315, 316, 317, 318, 335, 336, 337, 340, 343, 344,
	347, 349, 350, 353, 360, 361, 362, 363, 365, 367,
	374, 378, 386, 387, 388, 389, 390, 392, 393, 397,
	398, 399, 400, 408, 412, 430, 431, 442, 455, 460,
	271, 438, 461, 0, 309, 0, 0, 311, 255, 274,
	285, 0, 450, 409, 207, 380, 263, 196, 225, 210,
	233, 249, 252, 289, 319, 326, 355, 359, 268, 246,
	223, 377, 220, 395, 415, 416, 417, 419, 323, 241,
	358, 420, 0, 307, 421, 422, 281, 0, 0, 0,
	0, 0, 0, 342, 0, 471, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 1243, 0, 0, 0,
	298, 242, 0, 0, 356, 0, 193, 0, 396, 228,
	308, 305, 427, 256, 248, 244, 227, 282, 314, 354,
	414, 348, 0, 302, 0, 0, 405, 327, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 226, 192, 339, 406, 260, 0,
	0, 0, 0, 184, 185, 186, 0, 1242, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 0,
	0, 0, 0, 0, 240, 286, 247, 239, 424, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 328,
	231, 0, 0, 0, 0, 0, 457, 0, 0, 0,
	0, 0, 0, 0, 297, 0, 294, 188, 205, 0,
	0, 338, 379, 385, 0, 0, 0, 229, 0, 383,
	352, 441, 213, 258, 376, 357, 381, 364, 261, 0,
	0, 382, 303, 429, 371, 439, 458, 459, 238, 332,
	448, 418, 454, 470, 206, 235, 346, 411, 444, 402,
	325, 425, 426, 293, 401, 267, 191, 301, 464, 204,
	391, 221, 211, 197, 413, 437, 218, 394, 0, 0,
	473, 199, 435, 410, 321, 290, 291, 198, 0, 375,
	243, 265, 232, 341, 432, 433, 230, 474, 208, 453,
	201, 0, 452, 334, 428, 436, 322, 313, 200, 434,
	320, 312, 296, 254, 276, 369, 306, 370, 277, 330,
	329, 331, 194, 445, 0, 195, 0, 407, 446, 475,
	214, 215, 216, 0, 253, 257, 264, 266, 272, 273,
	280, 299, 345, 368, 366, 372, 0, 423, 440, 449,
	456, 462, 463, 465, 466, 467, 468, 469, 333, 279,
	403, 295, 304, 0, 0, 351, 384, 219, 443, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 494, 0,
	187, 202, 300, 0, 373, 262, 472, 451, 447, 0,
	0, 237, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 324, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 236,
	251, 259, 270, 275, 278, 283, 284, 287, 292, 310,
	315, 316, 317, 318, 335, 336, 337, 340, 343, 344,
	347, 349, 350, 353, 360, 361, 362, 363, 365, 367,
	374, 378, 386, 387, 388, 389, 390, 392, 393, 397,
	398, 399, 400, 408, 412, 430, 431, 442, 455, 460,
	271, 438, 461, 0, 309, 0, 0, 311, 255, 274,
	285, 0, 450, 409, 207, 380, 263, 196, 225, 210,
	233, 249, 252, 289, 319, 326, 355, 359, 268, 246,
	223, 377, 220, 395, 415, 416, 417, 419, 323, 241,
	358, 420, 0, 307, 421, 422, 281, 0, 0, 0,
	0, 0, 0, 342, 0, 471, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 0, 0, 0,
	298, 242, 0, 0, 356, 0, 193, 0, 396, 228,
	308, 305, 427, 256, 248, 244, 227, 282, 314, 354,
	414, 348, 0, 302, 0, 0, 405, 327, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 226, 192, 339, 406, 260, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 0,
	0, 0, 0, 0, 240, 286, 247, 239, 424, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 328,
	231, 0, 0, 0, 0, 0, 457, 0, 0, 0,
	2538, 0, 0, 0, 297, 0, 294, 188, 205, 0,
	0, 338, 379, 385, 0, 0, 0, 229, 0, 383,
	352, 441, 213, 258, 376, 357, 381, 364, 261, 0,
	0, 382, 303, 429, 371, 439, 458, 459, 238, 332,
	448, 418, 454, 470, 206, 235, 346, 411, 444, 402,
	325, 425, 426, 293, 401, 267, 191, 301, 464, 204,
	391, 221, 211, 197, 413, 437, 218, 394, 0, 0,
	473, 199, 435, 410, 321, 290, 291, 198, 0, 375,
	243, 265, 232, 341, 432, 433, 230, 474, 208, 453,
	201, 0, 452, 334, 428, 436, 322, 313, 200, 434,
	320, 312, 296, 254, 276, 369, 306, 370, 277, 330,
	329, 331, 194, 445, 0, 195, 0, 407, 446, 475,
	214, 215, 216, 0, 253, 257, 264, 266, 272, 273,
	280, 299, 345, 368, 366, 372, 0, 423, 440, 449,
	456, 462, 463, 465, 466, 467, 468, 469, 333, 279,
	403, 295, 304, 0, 0, 351, 384, 219, 443, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 494, 0,
	187, 202, 300, 0, 373, 262, 472, 451, 447, 0,
	0, 237, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 324, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 236,
	251, 259, 270, 275, 278, 283, 284, 287, 292, 310,
	315, 316, 317, 318, 335, 336, 337, 340, 343, 344,
	347, 349, 350, 353, 360, 361, 362, 363, 365, 367,
	374, 378, 386, 387, 388, 389, 390, 392, 393, 397,
	398, 399, 400, 408, 412, 430, 431, 442, 455, 460,
	271, 438, 461, 0, 309, 0, 0, 311, 255, 274,
	285, 0, 450, 409, 207, 380, 263, 196, 225, 210,
	233, 249, 252, 289, 319, 326, 355, 359, 268, 246,
	223, 377, 220, 395, 415, 416, 417, 419, 323, 241,
	358, 420, 0, 307, 421, 422, 281, 0, 0, 0,
	0, 0, 0, 342, 0, 471, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 0, 0, 0,
	298, 242, 0, 0, 356, 0, 193, 0, 396, 228,
	308, 305, 427, 256, 248, 244, 227, 282, 314, 354,
	414, 348, 0, 302, 0, 0, 405, 327, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 226, 192, 339, 406, 260, 0,
	87, 0, 0, 1646, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 0,
	0, 0, 0, 0, 240, 286, 247, 239, 424, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 328,
	231, 0, 0, 0, 0, 0, 457, 0, 0, 0,
	0, 0, 0, 0, 297, 0, 294, 188, 205, 0,
	0, 338, 379, 385, 0, 0, 0, 229, 0, 383,
	352, 441, 213, 258, 376, 357, 381, 364, 261, 0,
	0, 382, 303, 429, 371, 439, 458, 459, 238, 332,
	448, 418, 454, 470, 206, 235, 346, 411, 444, 402,
	325, 425, 426, 293, 401, 267, 191, 301, 464, 204,
	391, 221, 211, 197, 413, 437, 218, 394, 0, 0,
	473, 199, 435, 410, 321, 290, 291, 198, 0, 375,
	243, 265, 232, 341, 432, 433, 230, 474, 208, 453,
	201, 0, 452, 334, 428, 436, 322, 313, 200, 434,
	320, 312, 296, 254, 276, 369, 306, 370, 277, 330,
	329, 331, 194, 445, 0, 195, 0, 407, 446, 475,
	214, 215, 216, 0, 253, 257, 264, 266, 272, 273,
	280, 299, 345, 368, 366, 372, 0, 423, 440, 449,
	456, 462, 463, 465, 466, 467, 468, 469, 333, 279,
	403, 295, 304, 0, 0, 351, 384, 219, 443, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 494, 0,
	187, 202, 300, 0, 373, 262, 472, 451, 447, 0,
	0, 237, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 324, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 236,
	251, 259, 270, 275, 278, 283, 284, 287, 292, 310,
	315, 316, 317, 318, 335, 336, 337, 340, 343, 344,
	347, 349, 350, 353, 360, 361, 362, 363, 365, 367,
	374, 378, 386, 387, 388, 389, 390, 392, 393, 397,
	398, 399, 400, 408, 412, 430, 431, 442, 455, 460,
	271, 438, 461, 0, 309, 0, 0, 311, 255, 274,
	285, 0, 450, 409, 207, 380, 263, 196, 225, 210,
	233, 249, 252, 289, 319, 326, 355, 359, 268, 246,
	223, 377, 220, 395, 415, 416, 417, 419, 323, 241,
	358, 420, 0, 307, 421, 422, 281, 0, 0, 0,
	0, 0, 0, 342, 0, 471, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 0, 0, 0,
	298, 242, 0, 0, 356, 0, 193, 0, 396, 228,
	308, 305, 427, 256, 248, 244, 227, 282, 314, 354,
	414, 348, 0, 302, 0, 0, 405, 327, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 226, 192, 339, 406, 260, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 0,
	0, 0, 0, 0, 240, 286, 247, 239, 424, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 328,
	231, 0, 0, 0, 0, 0, 457, 0, 0, 0,
	2458, 0, 0, 0, 297, 0, 294, 188, 205, 0,
	0, 338, 379, 385, 0, 0, 0, 229, 0, 383,
	352, 441, 213, 258, 376, 357, 381, 364, 261, 0,
	0, 382, 303, 429, 371, 439, 458, 459, 238, 332,
	448, 418, 454, 470, 206, 235, 346, 411, 444, 402,
	325, 425, 426, 293, 401, 267, 191, 301, 464, 204,
	391, 221, 211, 197, 413, 437, 218, 394, 0, 0,
	473, 199, 435, 410, 321, 290, 291, 198, 0, 375,
	243, 265, 232, 341, 432, 433, 230, 474, 208, 453,
	201, 0, 452, 334, 428, 436, 322, 313, 200, 434,
	320, 312, 296, 254, 276, 369, 306, 370, 277, 330,
	329, 331, 194, 445, 0, 195, 0, 407, 446, 475,
	214, 215, 216, 0, 253, 257, 264, 266, 272, 273,
	280, 299, 345, 368, 366, 372, 0, 423, 440, 449,
	456, 462, 463, 465, 466, 467, 468, 469, 333, 279,
	403, 295, 304, 0, 0, 351, 384, 219, 443, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 494, 0,
	187, 202, 300, 0, 373, 262, 472, 451, 447, 0,
	0, 237, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 324, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 236,
	251, 259, 270, 275, 278, 283, 284, 287, 292, 310,
	315, 316, 317, 318, 335, 336, 337, 340, 343, 344,
	347, 349, 350, 353, 360, 361, 362, 363, 365, 367,
	374, 378, 386, 387, 388, 389, 390, 392, 393, 397,
	398, 399, 400, 408, 412, 430, 431, 442, 455, 460,
	271, 438, 461, 0, 309, 0, 0, 311, 255, 274,
	285, 0, 450, 409, 207, 380, 263, 196, 225, 210,
	233, 249, 252, 289, 319, 326, 355, 359, 268, 246,
	223, 377, 220, 395, 415, 416, 417, 419, 323, 241,
	358, 420, 0, 307, 421, 422, 281, 0, 0, 0,
	0, 0, 0, 342, 0, 471, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 0, 0, 0,
	298, 242, 0, 0, 356, 0, 193, 0, 396, 228,
	308, 305, 427, 256, 248, 244, 227, 282, 314, 354,
	414, 348, 0, 302, 0, 0, 405, 327, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 226, 192, 339, 406, 260, 0,
	0, 0, 0, 184, 185, 186, 0, 1392, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 0,
	0, 0, 0, 0, 240, 286, 247, 239, 424, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 328,
	231, 0, 0, 0, 0, 0, 457, 0, 0, 0,
	0, 0, 0, 0, 297, 0, 294, 188, 205, 0,
	0, 338, 379, 385, 0, 0, 0, 229, 0, 383,
	352, 441, 213, 258, 376, 357, 381, 364, 261, 0,
	0, 382, 303, 429, 371, 439, 458, 459, 238, 332,
	448, 418, 454, 470, 206, 235, 346, 411, 444, 402,
	325, 425, 426, 293, 401, 267, 191, 301, 464, 204,
	391, 221, 211, 197, 413, 437, 218, 394, 0, 0,
	473, 199, 435, 410, 321, 290, 291, 198, 0, 375,
	243, 265, 232, 341, 432, 433, 230, 474, 208, 453,
	201, 0, 452, 334, 428, 436, 322, 313, 200, 434,
	320, 312, 296, 254, 276, 369, 306, 370, 277, 330,
	329, 331, 194, 445, 0, 195, 0, 407, 446, 475,
	214, 215, 216, 0, 253, 257, 264, 266, 272, 273,
	280, 299, 345, 368, 366, 372, 0, 423, 440, 449,
	456, 462, 463, 465, 466, 467, 468, 469, 333, 279,
	403, 295, 304, 0, 0, 351, 384, 219, 443, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 494, 0,
	187, 202, 300, 0, 373, 262, 472, 451, 447, 0,
	0, 237, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 324, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 236,
	251, 259, 270, 275, 278, 283, 284, 287, 292, 310,
	315, 316, 317, 318, 335, 336, 337, 340, 343, 344,
	347, 349, 350, 353, 360, 361, 362, 363, 365, 367,
	374, 378, 386, 387, 388, 389, 390, 392, 393, 397,
	398, 399, 400, 408, 412, 430, 431, 442, 455, 460,
	271, 438, 461, 0, 309, 0, 0, 311, 255, 274,
	285, 0, 450, 409, 207, 380, 263, 196, 225, 210,
	233, 249, 252, 289, 319, 326, 355, 359, 268, 246,
	223, 377, 220, 395, 415, 416, 417, 419, 323, 241,
	358, 0, 420, 307, 421, 422, 281, 1647, 0, 0,
	0, 0, 0, 0, 342, 0, 471, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 0, 0,
	0, 298, 242, 0, 0, 356, 0, 193, 0, 396,
	228, 308, 305, 427, 256, 248, 244, 227, 282, 314,
	354, 414, 348, 0, 302, 0, 0, 405, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 226, 192, 339, 406, 260,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	0, 0, 0, 0, 0, 240, 286, 247, 239, 424,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	328, 231, 0, 0, 0, 0, 0, 457, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 294, 188, 205,
	0, 0, 338, 379, 385, 0, 0, 0, 229, 0,
	383, 352, 441, 213, 258, 376, 357, 381, 364, 261,
	0, 0, 382, 303, 429, 371, 439, 458, 459, 238,
	332, 448, 418, 454, 470, 206, 235, 346, 411, 444,
	402, 325, 425, 426, 293, 401, 267, 191, 301, 464,
	204, 391, 221, 211, 197, 413, 437, 218, 394, 0,
	0, 473, 199, 435, 410, 321, 290, 291, 198, 0,
	375, 243, 265, 232, 341, 432, 433, 230, 474, 208,
	453, 201, 0, 452, 334, 428, 436, 322, 313, 200,
	434, 320, 312, 296, 254, 276, 369, 306, 370, 277,
	330, 329, 331, 194, 445, 0, 195, 0, 407, 446,
	475, 214, 215, 216, 0, 253, 257, 264, 266, 272,
	273, 280, 299, 345, 368, 366, 372, 0, 423, 440,
	449, 456, 462, 463, 465, 466, 467, 468, 469, 333,
	279, 403, 295, 304, 0, 0, 351, 384, 219, 443,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 494,
	0, 187, 202, 300, 0, 373, 262, 472, 451, 447,
	0, 0, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 324, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	310, 315, 316, 317, 318, 335, 336, 337, 340, 343,
	344, 347, 349, 350, 353, 360, 361, 362, 363, 365,
	367, 374, 378, 386, 387, 388, 389, 390, 392, 393,
	397, 398, 399, 400, 408, 412, 430, 431, 442, 455,
	460, 271, 438, 461, 0, 309, 0, 0, 311, 255,
	274, 285, 0, 450, 409, 207, 380, 263, 196, 225,
	210, 233, 249, 252, 289, 319, 326, 355, 359, 268,
	246, 223, 377, 220, 395, 415, 416, 417, 419, 323,
	241, 358, 420, 0, 307, 421, 422, 281, 0, 0,
	0, 0, 0, 0, 342, 0, 471, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 0, 0,
	0, 298, 242, 0, 0, 356, 0, 193, 0, 396,
	228, 308, 305, 427, 256, 248, 244, 227, 282, 314,
	354, 414, 348, 0, 302, 0, 0, 405, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 226, 192, 339, 406, 260,
	0, 0, 0, 0, 184, 185, 186, 0, 1222, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	0, 0, 0, 0, 0, 240, 286, 247, 239, 424,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	328, 231, 0, 0, 0, 0, 0, 457, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 294, 188, 205,
	0, 0, 338, 379, 385, 0, 0, 0, 229, 0,
	383, 352, 441, 213, 258, 376, 357, 381, 364, 261,
	0, 0, 382, 303, 429, 371, 439, 458, 459, 238,
	332, 448, 418, 454, 470, 206, 235, 346, 411, 444,
	402, 325, 425, 426, 293, 401, 267, 191, 301, 464,
	204, 391, 221, 211, 197, 413, 437, 218, 394, 0,
	0, 473, 199, 435, 410, 321, 290, 291, 198, 0,
	375, 243, 265, 232, 341, 432, 433, 230, 474, 208,
	453, 201, 0, 452, 334, 428, 436, 322, 313, 200,
	434, 320, 312, 296, 254, 276, 369, 306, 370, 277,
	330, 329, 331, 194, 445, 0, 195, 0, 407, 446,
	475, 214, 215, 216, 0, 253, 257, 264, 266, 272,
	273, 280, 299, 345, 368, 366, 372, 0, 423, 440,
	449, 456, 462, 463, 465, 466, 467, 468, 469, 333,
	279, 403, 295, 304, 0, 0, 351, 384, 219, 443,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 494,
	0, 187, 202, 300, 0, 373, 262, 472, 451, 447,
	0, 0, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 324, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	310, 315, 316, 317, 318, 335, 336, 337, 340, 343,
	344, 347, 349, 350, 353, 360, 361, 362, 363, 365,
	367, 374, 378, 386, 387, 388, 389, 390, 392, 393,
	397, 398, 399, 400, 408, 412, 430, 431, 442, 455,
	460, 271, 438, 461, 0, 309, 0, 0, 311, 255,
	274, 285, 0, 450, 409, 207, 380, 263, 196, 225,
	210, 233, 249, 252, 289, 319, 326, 355, 359, 268,
	246, 223, 377, 220, 395, 415, 416, 417, 419, 323,
	241, 358, 420, 0, 307, 421, 422, 281, 0, 0,
	0, 0, 0, 0, 342, 0, 471, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 0, 0,
	0, 298, 242, 0, 0, 356, 0, 193, 0, 396,
	228, 308, 305, 427, 256, 248, 244, 227, 282, 314,
	354, 414, 348, 0, 302, 0, 0, 405, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 226, 192, 339, 406, 260,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	0, 0, 0, 0, 0, 240, 286, 247, 239, 424,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1116, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	328, 231, 0, 0, 0, 0, 0, 457, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 294, 188, 205,
	0, 0, 338, 379, 385, 0, 0, 0, 229, 0,
	383, 352, 441, 213, 258, 376, 357, 381, 364, 261,
	0, 0, 382, 303, 429, 371, 439, 458, 459, 238,
	332, 448, 418, 454, 470, 206, 235, 346, 411, 444,
	402, 325, 425, 426, 293, 401, 267, 191, 301, 464,
	204, 391, 221, 211, 197, 413, 437, 218, 394, 0,
	0, 473, 199, 435, 410, 321, 290, 291, 198, 0,
	375, 243, 265, 232, 341, 432, 433, 230, 474, 208,
	453, 201, 0, 452, 334, 428, 436, 322, 313, 200,
	434, 320, 312, 296, 254, 276, 369, 306, 370, 277,
	330, 329, 331, 194, 445, 0, 195, 0, 407, 446,
	475, 214, 215, 216, 0, 253, 257, 264, 266, 272,
	273, 280, 299, 345, 368, 366, 372, 0, 423, 440,
	449, 456, 462, 463, 465, 466, 467, 468, 469, 333,
	279, 403, 295, 304, 0, 0, 351, 384, 219, 443,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 494,
	0, 187, 202, 300, 0, 373, 262, 472, 451, 447,
	0, 0, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 324, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	310, 315, 316, 317, 318, 335, 336, 337, 340, 343,
	344, 347, 349, 350, 353, 360, 361, 362, 363, 365,
	367, 374, 378, 386, 387, 388, 389, 390, 392, 393,
	397, 398, 399, 400, 408, 412, 430, 431, 442, 455,
	460, 271, 438, 461, 0, 309, 0, 0, 311, 255,
	274, 285, 0, 450, 409, 207, 380, 263, 196, 225,
	210, 233, 249, 252, 289, 319, 326, 355, 359, 268,
	246, 223, 377, 220, 395, 415, 416, 417, 419, 323,
	241, 358, 420, 0, 307, 421, 422, 281, 0, 0,
	0, 0, 0, 0, 342, 0, 471, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 0, 0,
	0, 298, 242, 0, 0, 356, 0, 193, 0, 396,
	228, 308, 305, 427, 256, 248, 244, 227, 282, 314,
	354, 414, 348, 0, 302, 0, 0, 405, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 226, 192, 339, 406, 260,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	0, 0, 0, 0, 0, 240, 286, 247, 239, 424,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	328, 231, 0, 0, 0, 0, 0, 457, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 294, 188, 205,
	0, 0, 338, 379, 385, 0, 0, 0, 229, 0,
	383, 352, 441, 213, 258, 376, 357, 381, 364, 261,
	0, 0, 382, 303, 429, 371, 439, 458, 459, 238,
	332, 448, 418, 454, 470, 206, 235, 346, 411, 444,
	402, 325, 425, 426, 293, 401, 267, 191, 301, 464,
	204, 391, 221, 211, 197, 413, 437, 218, 394, 0,
	0, 473, 199, 435, 410, 321, 290, 291, 198, 0,
	375, 243, 265, 232, 341, 432, 433, 230, 474, 208,
	453, 201, 0, 452, 334, 428, 436, 322, 313, 200,
	434, 320, 312, 296, 254, 276, 369, 306, 370, 277,
	330, 329, 331, 194, 445, 0, 195, 0, 407, 446,
	475, 214, 215, 216, 0, 253, 257, 264, 266, 272,
	273, 280, 299, 345, 368, 366, 372, 0, 423, 440,
	449, 456, 462, 463, 465, 466, 467, 468, 469, 333,
	279, 403, 295, 304, 0, 0, 351, 384, 219, 443,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 494,
	0, 187, 202, 300, 1484, 373, 262, 472, 451, 447,
	0, 0, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 324, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	310, 315, 316, 317, 318, 335, 336, 337, 340, 343,
	344, 347, 349, 350, 353, 360, 361, 362, 363, 365,
	367, 374, 378, 386, 387, 388, 389, 390, 392, 393,
	397, 398, 399, 400, 408, 412, 430, 431, 442, 455,
	460, 271, 438, 461, 0, 309, 0, 0, 311, 255,
	274, 285, 0, 450, 409, 207, 380, 263, 196, 225,
	210, 233, 249, 252, 289, 319, 326, 355, 359, 268,
	246, 223, 377, 220, 395, 415, 416, 417, 419, 323,
	241, 358, 420, 0, 307, 421, 422, 281, 0, 0,
	0, 0, 0, 0, 342, 0, 471, 234, 0, 1364,
	0, 0, 0, 0, 0, 0, 245, 0, 0, 0,
	0, 298, 242, 0, 0, 356, 0, 193, 0, 396,
	228, 308, 305, 427, 256, 248, 244, 227, 282, 314,
	354, 414, 348, 0, 302, 0, 0, 405, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 226, 192, 339, 406, 260,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	0, 0, 0, 0, 0, 240, 286, 247, 239, 424,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	328, 231, 0, 0, 0, 0, 0, 457, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 294, 188, 205,
	0, 0, 338, 379, 385, 0, 0, 0, 229, 0,
	383, 352, 441, 213, 258, 376, 357, 381, 364, 261,
	0, 0, 382, 303, 429, 371, 439, 458, 459, 238,
	332, 448, 418, 454, 470, 206, 235, 346, 411, 444,
	402, 325, 425, 426, 293, 401, 267, 191, 301, 464,
	204, 391, 221, 211, 197, 413, 437, 218, 394, 0,
	0, 473, 199, 435, 410, 321, 290, 291, 198, 0,
	375, 243, 265, 232, 341, 432, 433, 230, 474, 208,
	453, 201, 0, 452, 334, 428, 436, 322, 313, 200,
	434, 320, 312, 296, 254, 276, 369, 306, 370, 277,
	330, 329, 331, 194, 445, 0, 195, 0, 407, 446,
	475, 214, 215, 216, 0, 253, 257, 264, 266, 272,
	273, 280, 299, 345, 368, 366, 372, 0, 423, 440,
	449, 456, 462, 463, 465, 466, 467, 468, 469, 333,
	279, 403, 295, 304, 0, 0, 351, 384, 219, 443,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 494,
	0, 187, 202, 300, 0, 373, 262, 472, 451, 447,
	0, 0, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 324, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	310, 315, 316, 317, 318, 335, 336, 337, 340, 343,
	344, 347, 349, 350, 353, 360, 361, 362, 363, 365,
	367, 374, 378, 386, 387, 388, 389, 390, 392, 393,
	397, 398, 399, 400, 408, 412, 430, 431, 442, 455,
	460, 271, 438, 461, 0, 309, 0, 0, 311, 255,
	274, 285, 0, 450, 409, 207, 380, 263, 196, 225,
	210, 233, 249, 252, 289, 319, 326, 355, 359, 268,
	246, 223, 377, 220, 395, 415, 416, 417, 419, 323,
	241, 358, 420, 0, 307, 421, 422, 281, 0, 0,
	0, 0, 0, 0, 342, 0, 471, 234, 0, 1362,
	0, 0, 0, 0, 0, 0, 245, 0, 0, 0,
	0, 298, 242, 0, 0, 356, 0, 193, 0, 396,
	228, 308, 305, 427, 256, 248, 244, 227, 282, 314,
	354, 414, 348, 0, 302, 0, 0, 405, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 226, 192, 339, 406, 260,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	0, 0, 0, 0, 0, 240, 286, 247, 239, 424,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	328, 231, 0, 0, 0, 0, 0, 457, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 294, 188, 205,
	0, 0, 338, 379, 385, 0, 0, 0, 229, 0,
	383, 352, 441, 213, 258, 376, 357, 381, 364, 261,
	0, 0, 382, 303, 429, 371, 439, 458, 459, 238,
	332, 448, 418, 454, 470, 206, 235, 346, 411, 444,
	402, 325, 425, 426, 293, 401, 267, 191, 301, 464,
	204, 391, 221, 211, 197, 413, 437, 218, 394, 0,
	0, 473, 199, 435, 410, 321, 290, 291, 198, 0,
	375, 243, 265, 232, 341, 432, 433, 230, 474, 208,
	453, 201, 0, 452, 334, 428, 436, 322, 313, 200,
	434, 320, 312, 296, 254, 276, 369, 306, 370, 277,
	330, 329, 331, 194, 445, 0, 195, 0, 407, 446,
	475, 214, 215, 216, 0, 253, 257, 264, 266, 272,
	273, 280, 299, 345, 368, 366, 372, 0, 423, 440,
	449, 456, 462, 463, 465, 466, 467, 468, 469, 333,
	279, 403, 295, 304, 0, 0, 351, 384, 219, 443,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 494,
	0, 187, 202, 300, 0, 373, 262, 472, 451, 447,
	0, 0, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 324, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	310, 315, 316, 317, 318, 335, 336, 337, 340, 343,
	344, 347, 349, 350, 353, 360, 361, 362, 363, 365,
	367, 374, 378, 386, 387, 388, 389, 390, 392, 393,
	397, 398, 399, 400, 408, 412, 430, 431, 442, 455,
	460, 271, 438, 461, 0, 309, 0, 0, 311, 255,
	274, 285, 0, 450, 409, 207, 380, 263, 196, 225,
	210, 233, 249, 252, 289, 319, 326, 355, 359, 268,
	246, 223, 377, 220, 395, 415, 416, 417, 419, 323,
	241, 358, 420, 0, 307, 421, 422, 281, 0, 0,
	0, 0, 0, 0, 342, 0, 471, 234, 0, 1360,
	0, 0, 0, 0, 0, 0, 245, 0, 0, 0,
	0, 298, 242, 0, 0, 356, 0, 193, 0, 396,
	228, 308, 305, 427, 256, 248, 244, 227, 282, 314,
	354, 414, 348, 0, 302, 0, 0, 405, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 226, 192, 339, 406, 260,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	0, 0, 0, 0, 0, 240, 286, 247, 239, 424,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	328, 231, 0, 0, 0, 0, 0, 457, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 294, 188, 205,
	0, 0, 338, 379, 385, 0, 0, 0, 229, 0,
	383, 352, 441, 213, 258, 376, 357, 381, 364, 261,
	0, 0, 382, 303, 429, 371, 439, 458, 459, 238,
	332, 448, 418, 454, 470, 206, 235, 346, 411, 444,
	402, 325, 425, 426, 293, 401, 267, 191, 301, 464,
	204, 391, 221, 211, 197, 413, 437, 218, 394, 0,
	0, 473, 199, 435, 410, 321, 290, 291, 198, 0,
	375, 243, 265, 232, 341, 432, 433, 230, 474, 208,
	453, 201, 0, 452, 334, 428, 436, 322, 313, 200,
	434, 320, 312, 296, 254, 276, 369, 306, 370, 277,
	330, 329, 331, 194, 445, 0, 195, 0, 407, 446,
	475, 214, 215, 216, 0, 253, 257, 264, 266, 272,
	273, 280, 299, 345, 368, 366, 372, 0, 423, 440,
	449, 456, 462, 463, 465, 466, 467, 468, 469, 333,
	279, 403, 295, 304, 0, 0, 351, 384, 219, 443,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 494,
	0, 187, 202, 300, 0, 373, 262, 472, 451, 447,
	0, 0, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 324, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	310, 315, 316, 317, 318, 335, 336, 337, 340, 343,
	344, 347, 349, 350, 353, 360, 361, 362, 363, 365,
	367, 374, 378, 386, 387, 388, 389, 390, 392, 393,
	397, 398, 399, 400, 408, 412, 430, 431, 442, 455,
	460, 271, 438, 461, 0, 309, 0, 0, 311, 255,
	274, 285, 0, 450, 409, 207, 380, 263, 196, 225,
	210, 233, 249, 252, 289, 319, 326, 355, 359, 268,
	246, 223, 377, 220, 395, 415, 416, 417, 419, 323,
	241, 358, 420, 0, 307, 421, 422, 281, 0, 0,
	0, 0, 0, 0, 342, 0, 471, 234, 0, 1358,
	0, 0, 0, 0, 0, 0, 245, 0, 0, 0,
	0, 298, 242, 0, 0, 356, 0, 193, 0, 396,
	228, 308, 305, 427, 256, 248, 244, 227, 282, 314,
	354, 414, 348, 0, 302, 0, 0, 405, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 226, 192, 339, 406, 260,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	0, 0, 0, 0, 0, 240, 286, 247, 239, 424,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	328, 231, 0, 0, 0, 0, 0, 457, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 294, 188, 205,
	0, 0, 338, 379, 385, 0, 0, 0, 229, 0,
	383, 352, 441, 213, 258, 376, 357, 381, 364, 261,
	0, 0, 382, 303, 429, 371, 439, 458, 459, 238,
	332, 448, 418, 454, 470, 206, 235, 346, 411, 444,
	402, 325, 425, 426, 293, 401, 267, 191, 301, 464,
	204, 391, 221, 211, 197, 413, 437, 218, 394, 0,
	0, 473, 199, 435, 410, 321, 290, 291, 198, 0,
	375, 243, 265, 232, 341, 432, 433, 230, 474, 208,
	453, 201, 0, 452, 334, 428, 436, 322, 313, 200,
	434, 320, 312, 296, 254, 276, 369, 306, 370, 277,
	330, 329, 331, 194, 445, 0, 195, 0, 407, 446,
	475, 214, 215, 216, 0, 253, 257, 264, 266, 272,
	273, 280, 299, 345, 368, 366, 372, 0, 423, 440,
	449, 456, 462, 463, 465, 466, 467, 468, 469, 333,
	279, 403, 295, 304, 0, 0, 351, 384, 219, 443,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 494,
	0, 187, 202, 300, 0, 373, 262, 472, 451, 447,
	0, 0, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 324, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	310, 315, 316, 317, 318, 335, 336, 337, 340, 343,
	344, 347, 349, 350, 353, 360, 361, 362, 363, 365,
	367, 374, 378, 386, 387, 388, 389, 390, 392, 393,
	397, 398, 399, 400, 408, 412, 430, 431, 442, 455,
	460, 271, 438, 461, 0, 309, 0, 0, 311, 255,
	274, 285, 0, 450, 409, 207, 380, 263, 196, 225,
	210, 233, 249, 252, 289, 319, 326, 355, 359, 268,
	246, 223, 377, 220, 395, 415, 416, 417, 419, 323,
	241, 358, 420, 0, 307, 421, 422, 281, 0, 0,
	0, 0, 0, 0, 342, 0, 471, 234, 0, 1356,
	0, 0, 0, 0, 0, 0, 245, 0, 0, 0,
	0, 298, 242, 0, 0, 356, 0, 193, 0, 396,
	228, 308, 305, 427, 256, 248, 244, 227, 282, 314,
	354, 414, 348, 0, 302, 0, 0, 405, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 226, 192, 339, 406, 260,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	0, 0, 0, 0, 0, 240, 286, 247, 239, 424,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	328, 231, 0, 0, 0, 0, 0, 457, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 294, 188, 205,
	0, 0, 338, 379, 385, 0, 0, 0, 229, 0,
	383, 352, 441, 213, 258, 376, 357, 381, 364, 261,
	0, 0, 382, 303, 429, 371, 439, 458, 459, 238,
	332, 448, 418, 454, 470, 206, 235, 346, 411, 444,
	402, 325, 425, 426, 293, 401, 267, 191, 301, 464,
	204, 391, 221, 211, 197, 413, 437, 218, 394, 0,
	0, 473, 199, 435, 410, 321, 290, 291, 198, 0,
	375, 243, 265, 232, 341, 432, 433, 230, 474, 208,
	453, 201, 0, 452, 334, 428, 436, 322, 313, 200,
	434, 320, 312, 296, 254, 276, 369, 306, 370, 277,
	330, 329, 331, 194, 445, 0, 195, 0, 407, 446,
	475, 214, 215, 216, 0, 253, 257, 264, 266, 272,
	273, 280, 299, 345, 368, 366, 372, 0, 423, 440,
	449, 456, 462, 463, 465, 466, 467, 468, 469, 333,
	279, 403, 295, 304, 0, 0, 351, 384, 219, 443,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 494,
	0, 187, 202, 300, 0, 373, 262, 472, 451, 447,
	0, 0, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 324, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	310, 315, 316, 317, 318, 335, 336, 337, 340, 343,
	344, 347, 349, 350, 353, 360, 361, 362, 363, 365,
	367, 374, 378, 386, 387, 388, 389, 390, 392, 393,
	397, 398, 399, 400, 408, 412, 430, 431, 442, 455,
	460, 271, 438, 461, 0, 309, 0, 0, 311, 255,
	274, 285, 0, 450, 409, 207, 380, 263, 196, 225,
	210, 233, 249, 252, 289, 319, 326, 355, 359, 268,
	246, 223, 377, 220, 395, 415, 416, 417, 419, 323,
	241, 358, 420, 0, 307, 421, 422, 281, 0, 0,
	0, 0, 0, 0, 342, 0, 471, 234, 0, 1352,
	0, 0, 0, 0, 0, 0, 245, 0, 0, 0,
	0, 298, 242, 0, 0, 356, 0, 193, 0, 396,
	228, 308, 305, 427, 256, 248, 244, 227, 282, 314,
	354, 414, 348, 0, 302, 0, 0, 405, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 226, 192, 339, 406, 260,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	0, 0, 0, 0, 0, 240, 286, 247, 239, 424,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	328, 231, 0, 0, 0, 0, 0, 457, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 294, 188, 205,
	0, 0, 338, 379, 385, 0, 0, 0, 229, 0,
	383, 352, 441, 213, 258, 376, 357, 381, 364, 261,
	0, 0, 382, 303, 429, 371, 439, 458, 459, 238,
	332, 448, 418, 454, 470, 206, 235, 346, 411, 444,
	402, 325, 425, 426, 293, 401, 267, 191, 301, 464,
	204, 391, 221, 211, 197, 413, 437, 218, 394, 0,
	0, 473, 199, 435, 410, 321, 290, 291, 198, 0,
	375, 243, 265, 232, 341, 432, 433, 230, 474, 208,
	453, 201, 0, 452, 334, 428, 436, 322, 313, 200,
	434, 320, 312, 296, 254, 276, 369, 306, 370, 277,
	330, 329, 331, 194, 445, 0, 195, 0, 407, 446,
	475, 214, 215, 216, 0, 253, 257, 264, 266, 272,
	273, 280, 299, 345, 368, 366, 372, 0, 423, 440,
	449, 456, 462, 463, 465, 466, 467, 468, 469, 333,
	279, 403, 295, 304, 0, 0, 351, 384, 219, 443,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 494,
	0, 187, 202, 300, 0, 373, 262, 472, 451, 447,
	0, 0, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 324, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	310, 315, 316, 317, 318, 335, 336, 337, 340, 343,
	344, 347, 349, 350, 353, 360, 361, 362, 363, 365,
	367, 374, 378, 386, 387, 388, 389, 390, 392, 393,
	397, 398, 399, 400, 408, 412, 430, 431, 442, 455,
	460, 271, 438, 461, 0, 309, 0, 0, 311, 255,
	274, 285, 0, 450, 409, 207, 380, 263, 196, 225,
	210, 233, 249, 252, 289, 319, 326, 355, 359, 268,
	246, 223, 377, 220, 395, 415, 416, 417, 419, 323,
	241, 358, 420, 0, 307, 421, 422, 281, 0, 0,
	0, 0, 0, 0, 342, 0, 471, 234, 0, 1350,
	0, 0, 0, 0, 0, 0, 245, 0, 0, 0,
	0, 298, 242, 0, 0, 356, 0, 193, 0, 396,
	228, 308, 305, 427, 256, 248, 244, 227, 282, 314,
	354, 414, 348, 0, 302, 0, 0, 405, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 226, 192, 339, 406, 260,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	0, 0, 0, 0, 0, 240, 286, 247, 239, 424,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	328, 231, 0, 0, 0, 0, 0, 457, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 294, 188, 205,
	0, 0, 338, 379, 385, 0, 0, 0, 229, 0,
	383, 352, 441, 213, 258, 376, 357, 381, 364, 261,
	0, 0, 382, 303, 429, 371, 439, 458, 459, 238,
	332, 448, 418, 454, 470, 206, 235, 346, 411, 444,
	402, 325, 425, 426, 293, 401, 267, 191, 301, 464,
	204, 391, 221, 211, 197, 413, 437, 218, 394, 0,
	0, 473, 199, 435, 410, 321, 290, 291, 198, 0,
	375, 243, 265, 232, 341, 432, 433, 230, 474, 208,
	453, 201, 0, 452, 334, 428, 436, 322, 313, 200,
	434, 320, 312, 296, 254, 276, 369, 306, 370, 277,
	330, 329, 331, 194, 445, 0, 195, 0, 407, 446,
	475, 214, 215, 216, 0, 253, 257, 264, 266, 272,
	273, 280, 299, 345, 368, 366, 372, 0, 423, 440,
	449, 456, 462, 463, 465, 466, 467, 468, 469, 333,
	279, 403, 295, 304, 0, 0, 351, 384, 219, 443,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 494,
	0, 187, 202, 300, 0, 373, 262, 472, 451, 447,
	0, 0, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 324, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	310, 315, 316, 317, 318, 335, 336, 337, 340, 343,
	344, 347, 349, 350, 353, 360, 361, 362, 363, 365,
	367, 374, 378, 386, 387, 388, 389, 390, 392, 393,
	397, 398, 399, 400, 408, 412, 430, 431, 442, 455,
	460, 271, 438, 461, 0, 309, 0, 0, 311, 255,
	274, 285, 0, 450, 409, 207, 380, 263, 196, 225,
	210, 233, 249, 252, 289, 319, 326, 355, 359, 268,
	246, 223, 377, 220, 395, 415, 416, 417, 419, 323,
	241, 358, 420, 0, 307, 421, 422, 281, 0, 0,
	0, 0, 0, 0, 342, 0, 471, 234, 0, 1348,
	0, 0, 0, 0, 0, 0, 245, 0, 0, 0,
	0, 298, 242, 0, 0, 356, 0, 193, 0, 396,
	228, 308, 305, 427, 256, 248, 244, 227, 282, 314,
	354, 414, 348, 0, 302, 0, 0, 405, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 226, 192, 339, 406, 260,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	0, 0, 0, 0, 0, 240, 286, 247, 239, 424,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	328, 231, 0, 0, 0, 0, 0, 457, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 294, 188, 205,
	0, 0, 338, 379, 385, 0, 0, 0, 229, 0,
	383, 352, 441, 213, 258, 376, 357, 381, 364, 261,
	0, 0, 382, 303, 429, 371, 439, 458, 459, 238,
	332, 448, 418, 454, 470, 206, 235, 346, 411, 444,
	402, 325, 425, 426, 293, 401, 267, 191, 301, 464,
	204, 391, 221, 211, 197, 413, 437, 218, 394, 0,
	0, 473, 199, 435, 410, 321, 290, 291, 198, 0,
	375, 243, 265, 232, 341, 432, 433, 230, 474, 208,
	453, 201, 0, 452, 334, 428, 436, 322, 313, 200,
	434, 320, 312, 296, 254, 276, 369, 306, 370, 277,
	330, 329, 331, 194, 445, 0, 195, 0, 407, 446,
	475, 214, 215, 216, 0, 253, 257, 264, 266, 272,
	273, 280, 299, 345, 368, 366, 372, 0, 423, 440,
	449, 456, 462, 463, 465, 466, 467, 468, 469, 333,
	279, 403, 295, 304, 0, 0, 351, 384, 219, 443,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 494,
	0, 187, 202, 300, 0, 373, 262, 472, 451, 447,
	0, 0, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 324, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	310, 315, 316, 317, 318, 335, 336, 337, 340, 343,
	344, 347, 349, 350, 353, 360, 361, 362, 363, 365,
	367, 374, 378, 386, 387, 388, 389, 390, 392, 393,
	397, 398, 399, 400, 408, 412, 430, 431, 442, 455,
	460, 271, 438, 461, 0, 309, 0, 0, 311, 255,
	274, 285, 0, 450, 409, 207, 380, 263, 196, 225,
	210, 233, 249, 252, 289, 319, 326, 355, 359, 268,
	246, 223, 377, 220, 395, 415, 416, 417, 419, 323,
	241, 358, 420, 0, 307, 421, 422, 281, 0, 0,
	0, 0, 0, 0, 342, 0, 471, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 0, 0,
	0, 298, 242, 0, 0, 356, 0, 193, 0, 396,
	228, 308, 305, 427, 256, 248, 244, 227, 282, 314,
	354, 414, 348, 0, 302, 0, 0, 405, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 226, 192, 339, 406, 260,
	0, 1325, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	0, 0, 0, 0, 0, 240, 286, 247, 239, 424,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	328, 231, 0, 0, 0, 0, 0, 457, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 294, 188, 205,
	0, 0, 338, 379, 385, 0, 0, 0, 229, 0,
	383, 352, 441, 213, 258, 376, 357, 381, 364, 261,
	0, 0, 382, 303, 429, 371, 439, 458, 459, 238,
	332, 448, 418, 454, 470, 206, 235, 346, 411, 444,
	402, 325, 425, 426, 293, 401, 267, 191, 301, 464,
	204, 391, 221, 211, 197, 413, 437, 218, 394, 0,
	0, 473, 199, 435, 410, 321, 290, 291, 198, 0,
	375, 243, 265, 232, 341, 432, 433, 230, 474, 208,
	453, 201, 0, 452, 334, 428, 436, 322, 313, 200,
	434, 320, 312, 296, 254, 276, 369, 306, 370, 277,
	330, 329, 331, 194, 445, 0, 195, 0, 407, 446,
	475, 214, 215, 216, 0, 253, 257, 264, 266, 272,
	273, 280, 299, 345, 368, 366, 372, 0, 423, 440,
	449, 456, 462, 463, 465, 466, 467, 468, 469, 333,
	279, 403, 295, 304, 0, 0, 351, 384, 219, 443,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 494,
	0, 187, 202, 300, 0, 373, 262, 472, 451, 447,
	0, 0, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 324, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	310, 315, 316, 317, 318, 335, 336, 337, 340, 343,
	344, 347, 349, 350, 353, 360, 361, 362, 363, 365,
	367, 374, 378, 386, 387, 388, 389, 390, 392, 393,
	397, 398, 399, 400, 408, 412, 430, 431, 442, 455,
	460, 271, 438, 461, 0, 309, 0, 0, 311, 255,
	274, 285, 0, 450, 409, 207, 380, 263, 196, 225,
	210, 233, 249, 252, 289, 319, 326, 355, 359, 268,
	246, 223, 377, 220, 395, 415, 416, 417, 419, 323,
	241, 358, 420, 0, 307, 421, 422, 281, 0, 0,
	0, 0, 0, 0, 342, 0, 471, 234, 0, 0,
	0, 0, 0, 0, 0, 1227, 245, 0, 0, 0,
	0, 298, 242, 0, 0, 356, 0, 193, 0, 396,
	228, 308, 305, 427, 256, 248, 244, 227, 282, 314,
	354, 414, 348, 0, 302, 0, 0, 405, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 226, 192, 339, 406, 260,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	0, 0, 0, 0, 0, 240, 286, 247, 239, 424,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	328, 231, 0, 0, 0, 0, 0, 457, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 294, 188, 205,
	0, 0, 338, 379, 385, 0, 0, 0, 229, 0,
	383, 352, 441, 213, 258, 376, 357, 381, 364, 261,
	0, 0, 382, 303, 429, 371, 439, 458, 459, 238,
	332, 448, 418, 454, 470, 206, 235, 346, 411, 444,
	402, 325, 425, 426, 293, 401, 267, 191, 301, 464,
	204, 391, 221, 211, 197, 413, 437, 218, 394, 0,
	0, 473, 199, 435, 410, 321, 290, 291, 198, 0,
	375, 243, 265, 232, 341, 432, 433, 230, 474, 208,
	453, 201, 0, 452, 334, 428, 436, 322, 313, 200,
	434, 320, 312, 296, 254, 276, 369, 306, 370, 277,
	330, 329, 331, 194, 445, 0, 195, 0, 407, 446,
	475, 214, 215, 216, 0, 253, 257, 264, 266, 272,
	273, 280, 299, 345, 368, 366, 372, 0, 423, 440,
	449, 456, 462, 463, 465, 466, 467, 468, 469, 333,
	279, 403, 295, 304, 0, 0, 351, 384, 219, 443,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 494,
	0, 187, 202, 300, 0, 373, 262, 472, 451, 447,
	0, 0, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 324, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	310, 315, 316, 317, 318, 335, 336, 337, 340, 343,
	344, 347, 349, 350, 353, 360, 361, 362, 363, 365,
	367, 374, 378, 386, 387, 388, 389, 390, 392, 393,
	397, 398, 399, 400, 408, 412, 430, 431, 442, 455,
	460, 271, 438, 461, 0, 309, 0, 0, 311, 255,
	274, 285, 0, 450, 409, 207, 380, 263, 196, 225,
	210, 233, 249, 252, 289, 319, 326, 355, 359, 268,
	246, 223, 377, 220, 395, 415, 416, 417, 419, 323,
	241, 358, 420, 0, 307, 421, 422, 281, 0, 0,
	0, 0, 0, 0, 342, 0, 471, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 0, 0,
	0, 298, 242, 0, 0, 356, 0, 193, 0, 396,
	228, 308, 305, 427, 256, 248, 244, 227, 282, 314,
	354, 414, 348, 0, 302, 0, 0, 405, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 226, 192, 339, 406, 260,
	0, 0, 0, 0, 184, 185, 186, 0, 1063, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	0, 0, 0, 0, 0, 240, 286, 247, 239, 424,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	328, 231, 0, 0, 0, 0, 0, 457, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 294, 188, 205,
	0, 0, 338, 379, 385, 0, 0, 0, 229, 0,
	383, 352, 441, 213, 258, 376, 357, 381, 364, 261,
	0, 0, 382, 303, 429, 371, 439, 458, 459, 238,
	332, 448, 418, 454, 470, 206, 235, 346, 411, 444,
	402, 325, 425, 426, 293, 401, 267, 191, 301, 464,
	204, 391, 221, 211, 197, 413, 437, 218, 394, 0,
	0, 473, 199, 435, 410, 321, 290, 291, 198, 0,
	375, 243, 265, 232, 341, 432, 433, 230, 474, 208,
	453, 201, 0, 452, 334, 428, 436, 322, 313, 200,
	434, 320, 312, 296, 254, 276, 369, 306, 370, 277,
	330, 329, 331, 194, 445, 0, 195, 0, 407, 446,
	475, 214, 215, 216, 0, 253, 257, 264, 266, 272,
	273, 280, 299, 345, 368, 366, 372, 0, 423, 440,
	449, 456, 462, 463, 465, 466, 467, 468, 469, 333,
	279, 403, 295, 304, 0, 0, 351, 384, 219, 443,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 494,
	0, 187, 202, 300, 0, 373, 262, 472, 451, 447,
	0, 0, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 324, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	310, 315, 316, 317, 318, 335, 336, 337, 340, 343,
	344, 347, 349, 350, 353, 360, 361, 362, 363, 365,
	367, 374, 378, 386, 387, 388, 389, 390, 392, 393,
	397, 398, 399, 400, 408, 412, 430, 431, 442, 455,
	460, 271, 438, 461, 0, 309, 0, 0, 311, 255,
	274, 285, 0, 450, 409, 207, 380, 263, 196, 225,
	210, 233, 249, 252, 289, 319, 326, 355, 359, 268,
	246, 223, 377, 220, 395, 415, 416, 417, 419, 323,
	241, 358, 420, 0, 307, 421, 422, 281, 0, 0,
	0, 0, 0, 0, 342, 0, 471, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 0, 0,
	0, 298, 242, 0, 0, 356, 0, 193, 0, 396,
	228, 308, 305, 427, 256, 248, 244, 227, 282, 314,
	354, 414, 348, 0, 302, 0, 0, 405, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 226, 192, 339, 406, 260,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	0, 0, 0, 0, 0, 240, 286, 247, 239, 424,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	328, 231, 0, 0, 0, 0, 0, 457, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 294, 188, 205,
	0, 0, 338, 379, 385, 0, 0, 0, 229, 0,
	383, 352, 441, 213, 258, 376, 357, 381, 364, 261,
	0, 0, 382, 303, 429, 371, 439, 458, 459, 238,
	332, 448, 418, 454, 470, 206, 235, 346, 411, 444,
	402, 325, 425, 426, 293, 401, 267, 191, 301, 464,
	204, 391, 221, 211, 197, 413, 437, 218, 394, 0,
	0, 473, 199, 435, 410, 321, 290, 291, 198, 0,
	375, 243, 265, 232, 341, 432, 433, 230, 474, 208,
	453, 201, 0, 452, 334, 428, 436, 322, 313, 200,
	434, 320, 312, 296, 254, 276, 369, 306, 370, 277,
	330, 329, 331, 194, 445, 0, 195, 0, 407, 446,
	475, 214, 215, 216, 0, 253, 257, 264, 266, 272,
	273, 280, 299, 345, 368, 366, 372, 0, 423, 440,
	449, 456, 462, 463, 465, 466, 467, 468, 469, 333,
	279, 403, 295, 304, 0, 0, 351, 384, 219, 443,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 494,
	0, 187, 202, 300, 0, 373, 262, 472, 451, 447,
	0, 0, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 324, 0, 0, 0, 0, 0,
	0, 694, 0, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	310, 315, 316, 317, 318, 335, 336, 337, 340, 343,
	344, 347, 349, 350, 353, 360, 361, 362, 363, 365,
	367, 374, 378, 386, 387, 388, 389, 390, 392, 393,
	397, 398, 399, 400, 408, 412, 430, 431, 442, 455,
	460, 271, 438, 461, 0, 309, 0, 0, 311, 255,
	274, 285, 0, 450, 409, 207, 380, 263, 196, 225,
	210, 233, 249, 252, 289, 319, 326, 355, 359, 268,
	246, 223, 377, 220, 395, 415, 416, 417, 419, 323,
	241, 358, 420, 0, 307, 421, 422, 281, 0, 0,
	0, 0, 0, 0, 342, 0, 471, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 0, 0,
	0, 298, 242, 0, 0, 356, 0, 193, 0, 396,
	228, 308, 305, 427, 256, 248, 244, 227, 282, 314,
	354, 414, 348, 0, 302, 0, 0, 405, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 226, 192, 339, 406, 260,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	0, 0, 0, 0, 0, 240, 286, 247, 239, 424,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 550, 0, 269, 0,
	328, 231, 0, 0, 0, 0, 0, 457, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 294, 188, 205,
	0, 0, 338, 379, 385, 0, 0, 0, 229, 0,
	383, 352, 441, 213, 258, 376, 357, 381, 364, 261,
	0, 0, 382, 303, 429, 371, 439, 458, 459, 238,
	332, 448, 418, 454, 470, 206, 235, 346, 411, 444,
	402, 325, 425, 426, 293, 401, 267, 191, 301, 464,
	204, 391, 221, 211, 197, 413, 437, 218, 394, 0,
	0, 473, 199, 435, 410, 321, 290, 291, 198, 0,
	375, 243, 265, 232, 341, 432, 433, 230, 474, 208,
	453, 201, 0, 452, 334, 428, 436, 322, 313, 200,
	434, 320, 312, 296, 254, 276, 369, 306, 370, 277,
	330, 329, 331, 194, 445, 0, 195, 0, 407, 446,
	475, 214, 215, 216, 0, 253, 257, 264, 266, 272,
	273, 280, 299, 345, 368, 366, 372, 0, 423, 440,
	449, 456, 462, 463, 465, 466, 467, 468, 469, 333,
	279, 403, 295, 304, 0, 0, 351, 384, 219, 443,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 494,
	0, 187, 202, 300, 0, 373, 262, 472, 451, 447,
	0, 0, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 324, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	310, 315, 316, 317, 318, 335, 336, 337, 340, 343,
	344, 347, 349, 350, 353, 360, 361, 362, 363, 365,
	367, 374, 378, 386, 387, 388, 389, 390, 392, 393,
	397, 398, 399, 400, 408, 412, 430, 431, 442, 455,
	460, 549, 438, 461, 0, 309, 0, 0, 311, 255,
	274, 285, 0, 450, 409, 207, 380, 263, 196, 225,
	210, 233, 249, 252, 289, 319, 326, 355, 359, 268,
	246, 223, 377, 220, 395, 415, 416, 417, 419, 323,
	241, 358, 420, 0, 307, 421, 422, 281, 0, 0,
	0, 0, 0, 0, 342, 0, 471, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 0, 0,
	0, 298, 242, 0, 0, 356, 0, 193, 0, 396,
	228, 308, 305, 427, 256, 248, 244, 227, 282, 314,
	354, 414, 348, 0, 302, 0, 0, 405, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 226, 192, 339, 406, 260,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	0, 0, 0, 0, 0, 240, 286, 247, 239, 424,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	328, 231, 0, 0, 497, 0, 0, 457, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 294, 188, 205,
	0, 0, 338, 379, 385, 0, 0, 0, 229, 0,
	383, 352, 441, 213, 258, 376, 357, 381, 364, 261,
	0, 0, 382, 303, 429, 371, 439, 458, 459, 238,
	332, 448, 418, 454, 470, 206, 235, 346, 411, 444,
	402, 325, 425, 426, 293, 401, 267, 191, 301, 464,
	204, 391, 221, 211, 197, 413, 437, 218, 394, 0,
	0, 473, 199, 435, 410, 321, 290, 291, 198, 0,
	375, 243, 265, 232, 341, 432, 433, 230, 474, 208,
	453, 201, 0, 452, 334, 428, 436, 322, 313, 200,
	434, 320, 312, 296, 254, 276, 369, 306, 370, 277,
	330, 329, 331, 194, 445, 0, 195, 0, 407, 446,
	475, 214, 215, 216, 0, 253, 257, 264, 266, 272,
	273, 280, 299, 345, 368, 366, 372, 0, 423, 440,
	449, 456, 462, 463, 465, 466, 467, 468, 469, 333,
	279, 403, 295, 304, 0, 0, 351, 384, 219, 443,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 494,
	0, 187, 202, 300, 0, 373, 262, 472, 451, 447,
	0, 0, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 324, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	310, 315, 316, 317, 318, 335, 336, 337, 340, 343,
	344, 347, 349, 350, 353, 360, 361, 362, 363, 365,
	367, 374, 378, 386, 387, 388, 389, 390, 392, 393,
	397, 398, 399, 400, 408, 412, 430, 431, 442, 455,
	460, 271, 438, 461, 0, 309, 0, 0, 311, 255,
	274, 285, 0, 450, 409, 207, 380, 263, 196, 225,
	210, 233, 249, 252, 289, 319, 326, 355, 359, 268,
	246, 223, 377, 220, 395, 415, 416, 417, 419, 323,
	241, 358, 420, 0, 307, 421, 422, 281, 0, 0,
	0, 0, 0, 0, 342, 0, 471, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 0, 0,
	0, 298, 242, 0, 0, 356, 0, 193, 0, 396,
	228, 308, 305, 427, 256, 248, 244, 227, 282, 314,
	354, 414, 348, 0, 302, 0, 0, 405, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 226, 192, 339, 406, 260,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	0, 0, 0, 0, 0, 240, 286, 247, 239, 424,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	328, 231, 0, 0, 0, 0, 0, 457, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 294, 188, 205,
	0, 0, 338, 379, 385, 0, 0, 0, 229, 0,
	383, 352, 441, 213, 258, 376, 357, 381, 364, 261,
	0, 0, 382, 303, 429, 371, 439, 458, 459, 238,
	332, 448, 418, 454, 470, 206, 235, 346, 411, 444,
	402, 325, 425, 426, 293, 401, 267, 191, 301, 464,
	204, 391, 221, 211, 197, 413, 437, 218, 394, 0,
	0, 473, 199, 435, 410, 321, 290, 291, 198, 0,
	375, 243, 265, 232, 341, 432, 433, 230, 474, 208,
	453, 201, 0, 452, 334, 428, 436, 322, 313, 200,
	434, 320, 312, 296, 254, 276, 369, 306, 370, 277,
	330, 329, 331, 194, 445, 0, 195, 0, 407, 446,
	475, 214, 215, 216, 0, 253, 257, 264, 266, 272,
	273, 280, 299, 345, 368, 366, 372, 0, 423, 440,
	449, 456, 462, 463, 465, 466, 467, 468, 469, 333,
	279, 403, 295, 304, 0, 0, 351, 384, 219, 443,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 494,
	0, 187, 202, 300, 0, 373, 262, 472, 451, 447,
	0, 0, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 324, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	310, 315, 316, 317, 318, 335, 336, 337, 340, 343,
	344, 347, 349, 350, 353, 360, 361, 362, 363, 365,
	367, 374, 378, 386, 387, 388, 389, 390, 392, 393,
	397, 398, 399, 400, 408, 412, 430, 431, 442, 455,
	460, 271, 438, 461, 0, 309, 0, 0, 311, 255,
	274, 285, 0, 450, 409, 207, 380, 263, 196, 225,
	210, 233, 249, 252, 289, 319, 326, 355, 359, 268,
	246, 223, 377, 220, 395, 415, 416, 417, 419, 323,
	241, 358, 420, 0, 307, 421, 422, 281, 0, 0,
	0, 0, 0, 0, 342, 0, 471, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 0, 0,
	0, 298, 242, 0, 0, 356, 0, 193, 0, 396,
	228, 308, 305, 427, 256, 248, 244, 227, 282, 314,
	354, 414, 348, 0, 302, 0, 0, 405, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 226, 192, 339, 406, 260,
	0, 0, 0, 0, 184, 2256, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	0, 0, 0, 0, 0, 240, 286, 247, 239, 424,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	328, 231, 0, 0, 0, 0, 0, 457, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 294, 188, 205,
	0, 0, 338, 379, 385, 0, 0, 0, 229, 0,
	383, 352, 441, 213, 258, 376, 357, 381, 364, 261,
	0, 0, 382, 303, 429, 371, 439, 458, 459, 238,
	332, 448, 418, 454, 470, 206, 235, 346, 411, 444,
	402, 325, 425, 426, 293, 401, 267, 191, 301, 464,
	204, 391, 221, 211, 197, 413, 437, 218, 394, 0,
	0, 473, 199, 435, 410, 321, 290, 291, 198, 0,
	375, 243, 265, 232, 341, 432, 433, 230, 474, 208,
	453, 201, 0, 452, 334, 428, 436, 322, 313, 200,
	434, 320, 312, 296, 254, 276, 369, 306, 370, 277,
	330, 329, 331, 194, 445, 0, 195, 0, 407, 446,
	475, 214, 215, 216, 0, 253, 257, 264, 266, 272,
	273, 280, 299, 345, 368, 366, 372, 0, 423, 440,
	449, 456, 462, 463, 465, 466, 467, 468, 469, 333,
	279, 403, 295, 304, 0, 0, 351, 384, 219, 443,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 494,
	0, 187, 202, 300, 0, 373, 262, 472, 451, 447,
	0, 0, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 324, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	310, 315, 316, 317, 318, 335, 336, 337, 340, 343,
	344, 347, 349, 350, 353, 360, 361, 362, 363, 365,
	367, 374, 378, 386, 387, 388, 389, 390, 392, 393,
	397, 398, 399, 400, 408, 412, 430, 431, 442, 455,
	460, 271, 438, 461, 0, 309, 0, 0, 311, 255,
	274, 285, 0, 450, 409, 207, 380, 263, 196, 225,
	210, 233, 249, 252, 289, 319, 326, 355, 359, 268,
	246, 223, 377, 220, 395, 415, 416, 417, 419, 323,
	241, 358, 420, 0, 307, 421, 422, 281, 0, 0,
	0, 0, 0, 0, 342, 0, 471, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 0, 0,
	0, 298, 242, 0, 0, 356, 0, 193, 0, 396,
	228, 308, 305, 427, 256, 248, 244, 227, 282, 314,
	354, 414, 348, 0, 302, 0, 0, 405, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 226, 192, 339, 406, 260,
	0, 0, 0, 0, 184, 1864, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	0, 0, 0, 0, 0, 240, 286, 247, 239, 424,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	328, 231, 0, 0, 0, 0, 0, 457, 0, 0,
	0, 0, 0, 0, 0, 297, 0, 294, 188, 205,
	0, 0, 338, 379, 385, 0, 0, 0, 229, 0,
	383, 352, 441, 213, 258, 376, 357, 381, 364, 261,
	0, 0, 382, 303, 429, 371, 439, 458, 459, 238,
	332, 448, 418, 454, 470, 206, 235, 346, 411, 444,
	402, 325, 425, 426, 293, 401, 267, 191, 301, 464,
	204, 391, 221, 211, 197, 413, 437, 218, 394, 0,
	0, 473, 199, 435, 410, 321, 290, 291, 198, 0,
	375, 243, 265, 232, 341, 432, 433, 230, 474, 208,
	453, 201, 0, 452, 334, 428, 436, 322, 313, 200,
	434, 320, 312, 296, 254, 276, 369, 306, 370, 277,
	330, 329, 331, 194, 445, 0, 195, 0, 407, 446,
	475, 214, 215, 216, 0, 253, 257, 264, 266, 272,
	273, 280, 299, 345, 368, 366, 372, 0, 423, 440,
	449, 456, 462, 463, 465, 466, 467, 468, 469, 333,
	279, 403, 295, 304, 0, 0, 351, 384, 219, 443,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 494,
	0, 187, 202, 300, 0, 373, 262, 472, 451, 447,
	0, 0, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 324, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	310, 315, 316, 317, 318, 335, 336, 337, 340, 343,
	344, 347, 349, 350, 353, 360, 361, 362, 363, 365,
	367, 374, 378, 386, 387, 388, 389, 390, 392, 393,
	397, 398, 399, 400, 408, 412, 430, 431, 442, 455,
	460, 271, 438, 461, 0, 309, 0, 0, 311, 255,
	274, 285, 0, 450, 409, 207, 380, 263, 196, 225,
	210, 233, 249, 252, 289, 319, 326, 355, 359, 268,
	246, 223, 377, 220, 395, 415, 416, 417, 419, 323,
	241, 358, 0, 0, 307, 421, 422, 281,
}

var yyPact = [...]int{
	5219, -1000, -392, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1755, 1809, -1000, -1000,
	-1000, -1000, 1860, -1000, 604, 1522, -1000, 1746, 367, -1000,
	35345, 404, -1000, 34795, 403, 2617, 35345, -1000, 119, -1000,
	108, 35345, 112, 34245, -1000, -1000, -310, 15542, 1691, -2,
	-3, 35345, -1000, -1000, -1000, -1000, 1846, 1567, -1000, 234,
	-1000, -1000, -1000, -1000, -1000, -1000, 33695, -1000, -1000, -1000,
	1737, 1735, 1865, 531, 1684, -1000, 1801, 1567, -1000, 15542,
	1837, 1791, 14992, -1000, 14992, 336, -1000, -1000, 11135, -1000,
	-1000, 19944, 35345, 35345, 223, -1000, 1746, -1000, -1000, 273,
	-1000, 254, 1489, -1000, 1487, -1000, 580, 506, 270, 389,
	388, 268, 267, 264, 262, 260, 259, 258, 257, 282,
	-1000, 596, 596, -199, -200, 2673, 329, 329, 329, 364,
	1714, 1713, -1000, 746, -1000, 596, 596, 272, 596, 596,
	596, 596, 226, 225, 596, 596, 596, 596, 596, 596,
	596, 596, 596, 596, 596, 596, 596, 596, 596, 381,
	1746, 220, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 35345, 120, 35345, -1000, 462,
	35345, 670, 670, 16, 670, 670, 670, 670, 109, 496,
	-4, -1000, 101, 208, 98, 217, 712, 95, 105, -1000,
	-1000, 205, 712, 1147, 535, 100, -1000, 670, 8903, 8903,
	8903, -1000, 1730, -1000, -1000, -1000, -1000, -1000, -1000, 1151,
	-1000, 357, -1000, -1000, -1000, -1000, 35345, 33145, 276, 609,
	-1000, -1000, -1000, 26, -1000, -1000, 1247, 821, 15542, 1047,
	-1000, 1344, 470, -1000, -1000, -1000, -1000, -1000, 402, 16092,
	16092, 16092, 16092, -1000, -1000, 1491, 1491, 1491, 1491, 16092,
	1491, 16092, 1491, 1491, 1491, 1491, 15542, 1491, 1491, 1491,
	-1000, 1491, 1491, 1491, 1491, 1491, 1491, 1491, 1491, 457,
	1491, 1491, 1491, 1491, 1491, -1000, -1000, -1000, -1000, 1491,
	1491, 1491, 1491, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 17742, -1000, 13342, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 35345, -1000, 1491, 156, 35345, 35345,
	275, 1801, 1567, -1000, 1846, 1817, 234, -1000, 1741, 1545,
	1335, 1156, 1567, 1477, 35345, -1000, 1496, -1000, -1000, -1000,
	1585, 1119, 1144, -1000, -1000, -1000, -1000, 1088, 15542, -1000,
	-1000, 1855, -1000, 17192, 449, 811, 1854, 32595, -1000, 336,
	336, 1485, 10577, -46, -1000, -1000, -1000, 608, 22694, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1730, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1464, 35345, -1000, -1000, 3079,
	1176, -1000, 1521, -1000, 1438, -1000, 1507, 1536, 401, 1176,
	380, 375, 374, -1000, -120, -1000, -1000, -1000, -1000, -1000,
	596, 596, -1000, 271, 1831, 367, 4548, -1000, -1000, -1000,
	32045, 1519, 1176, -1000, 1518, -1000, 723, 426, 471, 471,
	1176, -1000, -1000, 35345, 1176, 717, 716, 35345, 35345, -1000,
	31495, -1000, 30945, 30395, 988, 35345, 29845, 29295, 28745, 28195,
	27645, -1000, 1592, -1000, 1538, -1000, -1000, -1000, 35345, 35345,
	35345, 269, -1000, -1000, 35345, 1176, -1000, -1000, 984, 976,
	596, 596, 967, 1140, 1136, 1127, 596, 596, 966, 1117,
	24894, 202, 961, 960, 951, 929, 1116, 165, 925, 910,
	950, 35345, 1517, 35345, -1000, 203, 611, 318, 601, 1746,
	1687, 1484, 351, 387, 1176, 333, 333, 35345, -1000, 9461,
	-1000, -1000, 1110, 15542, -1000, 718, 712, 712, -1000, -1000,
	-1000, -1000, -1000, -1000, 670, 35345, 718, -1000, -1000, -1000,
	712, 670, 35345, 670, 670, 670, 670, 712, 712, 712,
	670, 35345, 35345, 35345, 35345, 35345, 35345, 35345, 35345, 35345,
	8903, 8903, 8903, 535, 670, -315, -1000, 1109, -1000, 1568,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 102,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -110,
	1482, 27095, -1000, -316, -317, -318, -319, -1000, -1000, -1000,
	-320, -322, -1000, -1000, -1000, 15542, 15542, 15542, 15542, -1000,
	885, 16092, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 913,
	660, 16092, 16092, 16092, 16092, 16092, 16092, 16092, 16092, 16092,
	16092, 16092, 16092, 16092, 16092, 16092, 833, 1107, 1102, 470,
	470, 470, 470, -1000, 14992, 15542, 15542, 470, -1000, 1176,
	26545, 14992, 14992, 15542, 1721, 627, 821, 35345, -1000, 1156,
	-1000, -1000, -1000, 832, -1000, 35345, 35345, 17, 15542, 11691,
	9461, 14992, 14992, 14992, 14992, 14992, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 446, 1498, 1290,
	1430, -1000, 1481, -1000, -181, 19394, 15542, 1098, 1853, 1549,
	35345, -1000, -1000, -1000, 1801, -1000, 1801, 1498, 1729, 1624,
	14992, -1000, -1000, 1729, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1402, -1000, 35345, 1477, 1778, 35345, 1618, 1077,
	266, -1000, 15542, 15542, 1475, -1000, 1048, 35345, -1000, -1000,
	25995, -1000, -1000, 8345, -1000, 35345, 253, 35345, -1000, 23794,
	25445, 10019, -46, -1000, 10019, 1396, -1000, -20, -55, 12791,
	510, -1000, -1000, -1000, 2673, 16642, 1223, 510, 40, -1000,
	-1000, -1000, 1507, -1000, 1507, 1507, 1507, 1507, 266, 266,
	266, 266, -1000, -1000, -1000, -1000, -1000, 1516, 1515, -1000,
	1507, 1507, 1507, 1507, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1513, 1513, 1513, 1508, 1508, 314, -1000, 15542, 235,
	35345, 1770, 923, 203, 334, 1548, 1176, 1176, 1176, 334,
	-1000, 1252, 1209, -1000, -378, 1471, -1000, -1000, 1830, -1000,
	-1000, 839, 744, 740, 644, 35345, 164, 248, -1000, 303,
	-1000, 35345, 1176, 714, 471, 1176, -1000, 1176, -1000, -1000,
	-1000, -1000, -1000, 1176, 1469, -1000, 1417, 762, 732, 758,
	673, 1469, -1000, -1000, -149, 1469, -1000, 1469, -1000, 1469,
	-1000, 1469, -1000, 1469, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 593, 35345, 164, 833, -1000, 344, -1000, -1000,
	833, 833, -1000, -1000, -1000, -1000, 1056, 1052, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -371, 35345, -1000, 183, 599,
	233, 274, 242, 35345, 149, 1772, 194, 224, 35345, 35345,
	333, 1566, 35345, 1759, 35345, -1000, -1000, -1000, -1000, -1000,
	821, 35345, -1000, -1000, 670, 670, -1000, -1000, 35345, 670,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 670, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 35345, 35345, -1000, -1000,
	-1000, -1000, -1000, 131, -27, 252, -1000, -1000, -1000, -1000,
	-1000, 1798, -1000, 821, 666, 667, -1000, -1000, -1000, 1016,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 913, 16092, 16092,
	16092, 1259, 377, 1381, 1392, 824, 948, 948, 739, 739,
	514, 514, 514, 514, 514, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1369, -1000, 1227, 995, 1156, -1000, 1369, 1369,
	763, 14992, -1000, -1000, 686, -1000, 15542, 1156, -1000, -1000,
	1156, 1467, 1466, 1852, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 989, 1156, 14992, 14992, 1420,
	1491, 444, -1000, 1369, 1156, 1156, 1369, 1369, 9461, 1156,
	-1000, 35345, -1000, -306, -1000, -36, 497, 1491, -1000, 24894,
	1156, 1247, -1000, 1100, -1000, 36445, -1000, -1000, -1000, -1000,
	-1000, 22144, 1494, 1729, -1000, -1000, 1491, 1394, -1000, -1000,
	266, 22, 21594, -1000, -1000, 821, 821, 15542, -1000, -1000,
	-1000, -1000, -1000, -1000, 443, 1845, 243, 1491, -1000, 1436,
	1631, -1000, -1000, -1000, 1774, 18844, 1491, 35345, 1433, 1261,
	-1000, 432, -1000, 1396, -46, -28, -1000, -1000, -1000, -1000,
	821, -1000, 1134, 255, 291, -1000, 309, -1000, -1000, -1000,
	-1000, 1703, 35, -1000, -1000, -1000, 266, 266, -1000, -1000,
	-1000, -1000, -1000, -1000, 1050, 1050, -1000, -1000, -1000, -1000,
	-1000, 914, -1000, -1000, -1000, 911, -1000, -1000, 1191, 1580,
	235, -1000, -1000, 596, 1034, 1705, 35345, -1000, -1000, 1206,
	183, 35345, 642, 1564, -1000, 1548, 1548, 1548, 35345, -1000,
	-1000, -1000, -1000, -380, 57, 281, -1000, -1000, -1000, 2718,
	35345, 1388, -1000, 160, -1000, 1203, 1650, 35345, -1000, 1373,
	1512, 1176, 1176, -1000, -1000, -1000, 35345, 1491, -1000, -1000,
	-1000, -1000, 383, 1745, 1732, 164, 160, 510, 1176, -1000,
	-1000, -1000, -1000, -1000, -370, 1371, 371, 173, 239, 35345,
	35345, 35345, 35345, 35345, 434, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 222, 342, -1000, 35345, 35345, 455, -1000,
	-1000, -1000, 712, -1000, -1000, 712, -1000, -1000, -1000, -1000,
	-1000, 1724, 35345, -34, -341, -1000, -337, -1000, -1000, -1000,
	-1000, 985, 365, 1381, 16092, 16092, 14992, -140, 554, 554,
	833, -1000, -1000, -1000, 15542, 15542, 1415, 612, -1000, 15542,
	648, -1000, -1000, 15542, 15542, 15542, 1156, 229, -1000, 1369,
	1369, 14992, 9461, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 497, -1000, 471, 471, 471, 35345, -1000,
	-1000, -1000, -1000, -1000, -1000, 1385, 1808, -1000, 1645, 1638,
	1851, 1845, -1000, 23794, 1729, -1000, -1000, 35345, -300, -1000,
	1683, 1676, -1000, -1000, -1000, -1000, 7787, 1801, 15542, 1563,
	35345, 1491, -1000, 18293, 35345, 35345, 23794, 23794, 23794, 23794,
	23794, -1000, 1603, 1602, -1000, 1588, 1584, 1621, 35345, -1000,
	1367, 1156, 1817, 18844, 35345, 21044, 1432, 23794, -1000, -1000,
	23794, 35345, 7229, -1000, -1000, -45, -86, -1000, -1000, -1000,
	-1000, 2673, -1000, -1000, 661, 1775, 1698, -1000, -1000, -1000,
	-1000, 1363, -1000, 1340, 1315, 1338, 97, -1000, 1535, 1722,
	596, 596, -1000, 902, -1000, 1176, -1000, -1000, 363, -1000,
	1757, 35345, 1562, 1561, 1559, -1000, -387, 901, 1511, 1530,
	15542, 1510, 1829, 1267, 35345, -1000, -1000, 35345, -1000, -1000,
	360, -1000, 235, 35345, -1000, -1000, -1000, 248, 35345, -1000,
	5825, 160, -1000, -1000, -1000, -1000, -1000, -1000, 35345, 178,
	-1000, 1509, 842, -1000, -1000, 1506, -1000, -1000, -1000, -1000,
	125, 232, -1000, 35345, 448, 1580, 35345, -1000, -1000, -1000,
	670, 670, -1000, -1000, 1717, -1000, 1176, 16092, 16092, -1000,
	470, -1000, 1491, 1156, 1507, 1507, -1000, 1507, 1508, -1000,
	1507, 92, 1507, 69, 1507, -1000, -1000, 1156, 1156, 878,
	827, -134, -1000, 821, 15542, 1167, 1155, 1081, -1000, 1505,
	1504, -1000, -1000, 1156, -1000, -1000, 1797, 1797, 1797, 1332,
	35895, 35345, -1000, -1000, -1000, -1000, 1845, 1843, 1297, -1000,
	-1000, 22, 348, -1000, 1672, 1676, -1000, 1827, 1679, 1825,
	-1000, -1000, -1000, 821, -1000, 1731, 1375, -1000, 591, 1236,
	-1000, -1000, 14442, 1334, 1637, 431, 1332, 1473, 1631, 1541,
	1555, 1609, -1000, -1000, -1000, -1000, 1599, -1000, 1587, -1000,
	-1000, 1496, -1000, -1000, 1290, 1156, 1292, -1000, 528, 253,
	23794, 1425, 1425, -1000, 430, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 777, 5577, 1863, -1000, 1023, -1000, 1126, -1000,
	701, 689, -1000, 35345, 1503, -1000, 266, 1017, 266, 894,
	-1000, 873, -1000, -1000, -241, -1000, -1000, 1483, 1578, -1000,
	-1000, 35345, -1000, -1000, 35345, 35345, 35345, 1502, 1824, -1000,
	15542, 1501, 587, 1146, 35345, 35345, -1000, -1000, 240, 1491,
	-1000, 1307, 1279, -1000, -197, -1000, 15542, -1000, -1000, -1000,
	1083, 1083, -1000, 1496, -1000, -1000, -1000, 1194, -1000, -1000,
	-152, 35345, 35345, 35345, 35345, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 470, 16092, -1000, -1000, 266, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 15542, -1000,
	15542, -1000, 1801, 1013, 821, 15542, 15542, -1000, 853, 840,
	-1000, 1491, 1648, 1491, 1491, 21044, -1000, -1000, 1843, 1841,
	1823, 1662, 1665, 1665, 1672, -1000, 1821, 1820, -1000, 1002,
	1819, 1000, 685, -1000, 35345, 15542, 1491, -1000, 316, 35345,
	1491, 35345, -1000, 1818, -1000, -1000, 15542, 1499, -1000, 15542,
	-1000, -1000, -1000, -1000, -1000, 1774, 35345, 12241, 1845, 1425,
	-1000, -1000, 521, -1000, 15542, -1000, -1000, -1000, 362, -1000,
	-1000, -1000, -1000, -1000, 1497, 15542, -1000, -1000, -1000, 1182,
	1174, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1496,
	-1000, -1000, -1000, -1000, 248, -382, 1113, 35345, 835, -1000,
	1276, 1267, 422, -1000, 15542, 289, -1000, 248, -1000, -203,
	-206, 1081, -1000, -1000, 1766, -1000, -1000, 9461, -1000, -1000,
	1492, 1547, -1000, 155, -1000, 1081, 1081, 1156, -1000, 1081,
	1081, 1169, 1160, 20494, -1000, 1815, 1806, 24344, 24344, 497,
	1841, 236, 15542, 15542, 1651, 877, -1000, -1000, -1000, -1000,
	993, 991, -1000, 987, -1000, 1862, -1000, 821, -1000, 1491,
	-1000, 421, 1236, -1000, 1801, 821, 35345, 821, 35345, -1000,
	-1000, 821, 1491, 1491, 1818, -1000, 1081, -1000, 1491, 35345,
	1003, -1000, -1000, 1756, 1272, 49, -1000, 1270, -1000, -1000,
	-1000, -1000, 13892, -1000, -1000, -1000, -1000, -1000, -1000, 234,
	1250, -1000, 584, 35345, 35345, 1156, 210, -191, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1243, -1000, -1000, -1000, -1000,
	-1000, 1243, 1243, -1000, -1000, -1000, 415, 821, 1247, -1000,
	776, -1000, -1000, -1000, -1000, -1000, 35345, 1236, 35345, -1000,
	1241, -1000, 23794, 35345, 1801, -1000, 1231, -1000, 234, -1000,
	1291, 1530, -1000, 1156, -151, 9461, 6671, 1197, -1000, -1000,
	1612, -145, -194, 23244, -1000, -1000, -1000, 1228, -1000, 678,
	1786, 15542, -1000, -1000, 1168, -1000, -1000, 1330, 1156, -1000,
	1552, 843, -151, 15542, 1260, -1000, -1000, -61, -1000, -1000,
	-1000, -1000, -1000, 1506, -1000, 1611, -1000, -1000, -1000, 415,
	-1000, -226, 15542, 821, -1000, -1000, 1551, -1000, 1850, -1000,
	-1000, -1000, 769, 915, -1000, -1000, -1000, -1000, 926, 35345,
	310, -1000, -1000, -152, -179, -1000, 1869, 821, -1000, 1858,
	561, 561, -1000, -1000, -389, 1172, 186, -1000, -192, -1000,
	-1000, -1000, -1000, 305, 837, -1000, -1000, 819, -389, -1000,
	-195, -1000, -1000, -1000, -1000, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2164, 2163, 15, 1, 2162, 13, 77, 163, 12,
	168, 84, 2161, 2159, 2148, 2147, 2146, 2145, 2144, 192,
	190, 186, 2143, 2142, 2140, 2138, 2137, 2136, 2132, 2130,
	2129, 2126, 188, 142, 160, 2125, 2123, 2122, 100, 151,
	71, 74, 153, 2121, 2120, 66, 2119, 2118, 2117, 177,
	174, 667, 2116, 154, 99, 29, 2115, 2114, 2113, 2112,
	2108, 2107, 2106, 2105, 2104, 2103, 2102, 2100, 2097, 2096,
	274, 2095, 2094, 9, 2093, 68, 2092, 2091, 2090, 117,
	2089, 2088, 2087, 2086, 2080, 2079, 129, 2077, 2075, 2074,
	2073, 167, 2070, 2069, 131, 98, 108, 2068, 2067, 83,
	156, 2066, 102, 2065, 2064, 2062, 136, 2061, 2536, 2057,
	52, 50, 2056, 46, 69, 49, 38, 2055, 2052, 2051,
	48, 73, 2050, 89, 59, 2049, 20, 97, 2048, 2047,
	2046, 32, 2045, 45, 2044, 2043, 104, 2042, 2036, 2035,
	82, 2034, 2033, 4461, 2032, 78, 119, 81, 65, 2031,
	28, 47, 2030, 2029, 2028, 2026, 2025, 33, 2024, 2022,
	2020, 127, 17, 2018, 24, 19, 35, 122, 2016, 61,
	67, 2015, 123, 2013, 2012, 40, 21, 22, 2011, 18,
	120, 139, 58, 80, 124, 2010, 2009, 43, 53, 2007,
	2006, 2005, 2004, 1997, 1994, 55, 1992, 39, 1988, 183,
	1986, 1985, 6, 1982, 3, 1981, 30, 25, 1979, 41,
	88, 42, 16, 1976, 161, 1974, 36, 159, 106, 147,
	1973, 1972, 1970, 158, 221, 1969, 1968, 63, 148, 128,
	134, 1967, 219, 1966, 1965, 96, 1580, 1717, 26, 140,
	1964, 1963, 3033, 125, 126, 37, 1961, 267, 34, 1959,
	1955, 165, 155, 103, 983, 90, 1954, 1951, 1950, 1949,
	1948, 1945, 1944, 1943, 115, 166, 44, 92, 143, 60,
	1942, 1941, 1939, 105, 79, 1938, 146, 144, 116, 145,
	1937, 149, 130, 110, 1936, 86, 1934, 1932, 1931, 1930,
	76, 1929, 1928, 1926, 1908, 138, 132, 101, 75, 1906,
	70, 94, 133, 137, 31, 1905, 23, 1904, 1903, 152,
	10, 1902, 4, 0, 1896, 7, 150, 223, 141, 1893,
	1892, 2, 1890, 5, 1889, 1886, 121, 1884, 1883, 1882,
	11, 27, 8, 1881, 1880, 1879, 3705, 2950, 107, 1877,
	169,
}

//line sql.y:6302
type yySymType struct {
	union             interface{}
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	yys               int
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) triggerExprUnion() TriggerExpr {
	v, _ := st.union.(TriggerExpr)
	return v
}

func (st *yySymType) triggerExprsUnion() TriggerExprs {
	v, _ := st.union.(TriggerExprs)
	return v
}

func (st *yySymType) tvfaUnion() *TableValuedFunctionArgument {
	v, _ := st.union.(*TableValuedFunctionArgument)
	return v
}

func (st *yySymType) tvfasUnion() TableValuedFunctionArguments {
	v, _ := st.union.(TableValuedFunctionArguments)
	return v
}

func (st *yySymType) tvfavUnion() TableValuedFunctionArgumentValue {
	v, _ := st.union.(TableValuedFunctionArgumentValue)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 334, 335, 335, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 313, 313,
	313, 316, 316, 30, 65, 32, 32, 31, 31, 34,
	34, 33, 6, 6, 6, 7, 7, 7, 7, 7,
	7, 7, 7, 8, 8, 8, 8, 8, 9, 9,
	9, 9, 11, 11, 11, 11, 11, 17, 18, 10,
	10, 19, 19, 77, 77, 20, 21, 21, 21, 21,
	338, 338, 138, 138, 136, 136, 137, 137, 209, 209,
	22, 23, 23, 219, 219, 218, 218, 218, 220, 220,
	220, 220, 254, 254, 24, 24, 24, 24, 24, 92,
	92, 315, 315, 314, 312, 312, 311, 311, 310, 36,
	37, 46, 46, 46, 46, 47, 48, 317, 317, 286,
	52, 52, 51, 51, 51, 51, 53, 53, 50, 50,
	49, 49, 288, 288, 275, 275, 287, 287, 287, 287,
	287, 287, 287, 274, 274, 103, 103, 185, 185, 185,
	185, 185, 185, 185, 185, 185, 185, 185, 329, 329,
	186, 186, 186, 186, 186, 186, 112, 112, 120, 120,
	120, 120, 110, 110, 111, 109, 109, 109, 115, 115,
	115, 115, 115, 115, 115, 115, 115, 115, 115, 115,
	333, 333, 333, 333, 333, 333, 333, 333, 333, 333,
	333, 333, 333, 333, 333, 333, 333, 333, 333, 333,
	333, 333, 333, 333, 333, 333, 333, 333, 333, 333,
	333, 333, 333, 333, 333, 333, 333, 333, 333, 333,
	333, 119, 119, 116, 116, 116, 117, 117, 117, 330,
	330, 330, 330, 257, 257, 257, 257, 260, 260, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 259, 259,
	259, 259, 259, 261, 261, 261, 261, 261, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 263, 263, 263, 263, 263, 263, 263,
	263, 273, 273, 264, 264, 268, 268, 269, 269, 269,
	270, 270, 270, 271, 271, 266, 266, 266, 266, 266,
	266, 267, 267, 267, 276, 300, 300, 299, 299, 297,
	297, 297, 297, 285, 285, 294, 294, 294, 294, 294,
	284, 284, 280, 280, 280, 281, 281, 282, 282, 279,
	279, 283, 283, 296, 296, 295, 277, 277, 278, 278,
	302, 331, 331, 331, 331, 332, 332, 303, 322, 323,
	321, 321, 321, 321, 321, 75, 75, 75, 231, 231,
	231, 292, 292, 291, 291, 291, 293, 293, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 226, 226, 226, 320,
	320, 320, 320, 320, 320, 319, 319, 319, 289, 289,
	289, 318, 318, 54, 54, 170, 170, 43, 43, 43,
	43, 43, 43, 42, 42, 42, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 38, 38, 38, 44,
	44, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	79, 79, 80, 80, 80, 80, 81, 81, 81, 305,
	305, 55, 55, 3, 3, 1, 1, 2, 2, 4,
	4, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 272, 272, 272, 304, 304, 306, 308,
	308, 308, 308, 307, 88, 88, 26, 35, 35, 27,
	27, 27, 27, 28, 28, 56, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 324, 324, 225, 225, 233, 233,
	224, 224, 247, 247, 247, 227, 227, 227, 228, 228,
	328, 328, 328, 58, 58, 58, 60, 60, 61, 62,
	62, 249, 249, 250, 250, 63, 64, 76, 76, 76,
	76, 76, 76, 78, 78, 78, 13, 13, 13, 13,
	72, 72, 72, 12, 12, 59, 59, 66, 325, 325,
	326, 327, 327, 327, 327, 67, 69, 29, 29, 29,
	29, 29, 29, 98, 98, 86, 86, 86, 86, 86,
	86, 86, 86, 86, 86, 86, 86, 93, 93, 93,
	87, 87, 339, 70, 71, 71, 91, 91, 91, 84,
	84, 84, 90, 90, 90, 14, 14, 15, 208, 208,
	16, 16, 95, 95, 97, 97, 97, 97, 97, 99,
	99, 99, 99, 99, 99, 99, 94, 94, 96, 96,
	96, 96, 240, 240, 240, 239, 239, 123, 123, 125,
	124, 124, 126, 126, 127, 127, 127, 127, 168, 146,
	146, 130, 130, 129, 129, 131, 132, 132, 132, 206,
	206, 204, 204, 205, 205, 207, 207, 207, 207, 210,
	210, 128, 128, 128, 128, 133, 133, 134, 134, 135,
	135, 248, 248, 245, 245, 245, 244, 244, 139, 139,
	139, 141, 140, 140, 140, 140, 142, 142, 144, 144,
	143, 143, 145, 150, 150, 149, 149, 147, 147, 147,
	147, 148, 148, 148, 148, 151, 151, 108, 108, 108,
	108, 108, 108, 118, 118, 118, 118, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 114, 114, 114, 114, 114, 114, 114, 114, 114,
	114, 114, 114, 114, 114, 114, 114, 114, 114, 114,
	114, 114, 114, 114, 222, 222, 152, 152, 160, 160,
	160, 160, 153, 153, 153, 153, 153, 153, 153, 161,
	161, 161, 167, 162, 162, 158, 158, 158, 158, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 157,
	157, 157, 157, 157, 157, 157, 157, 157, 83, 83,
	83, 83, 83, 83, 83, 83, 83, 83, 83, 83,
	82, 82, 82, 82, 82, 82, 82, 82, 82, 340,
	340, 265, 265, 265, 159, 159, 159, 159, 159, 89,
	89, 89, 89, 89, 253, 253, 253, 256, 256, 256,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 173, 173, 85, 85, 171,
	171, 172, 174, 174, 169, 169, 169, 155, 155, 155,
	175, 175, 176, 176, 177, 177, 179, 178, 178, 180,
	181, 181, 181, 182, 182, 183, 183, 183, 45, 45,
	45, 45, 45, 40, 40, 40, 40, 41, 41, 41,
	100, 100, 100, 100, 102, 102, 101, 101, 73, 73,
	74, 74, 74, 106, 106, 107, 107, 107, 104, 104,
	105, 105, 199, 199, 184, 184, 184, 191, 191, 191,
	187, 187, 189, 189, 189, 190, 190, 190, 188, 196,
	196, 198, 198, 197, 197, 193, 193, 194, 194, 195,
	195, 195, 192, 192, 200, 200, 201, 201, 202, 202,
	202, 202, 154, 154, 154, 154, 154, 203, 203, 203,
	203, 211, 211, 164, 164, 166, 166, 165, 122, 212,
	212, 216, 213, 213, 217, 217, 217, 217, 217, 214,
	214, 215, 215, 241, 241, 241, 221, 221, 232, 232,
	229, 229, 230, 230, 223, 223, 234, 234, 234, 68,
	163, 163, 301, 301, 298, 237, 237, 238, 238, 242,
	242, 246, 246, 243, 243, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 336, 337, 251, 252, 252, 252,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 9,
	9, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 6,
	4, 7, 8, 8, 8, 6, 3, 1, 1, 5,
	0, 1, 1, 1, 2, 2, 0, 1, 4, 4,
	4, 4, 2, 4, 1, 3, 1, 1, 3, 4,
	3, 3, 3, 5, 10, 0, 2, 0, 2, 3,
	5, 3, 4, 2, 3, 2, 3, 3, 1, 1,
	0, 2, 2, 3, 3, 2, 1, 1, 2, 2,
	2, 2, 1, 1, 1, 1, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	1, 2, 1, 3, 1, 1, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 2, 1, 2, 2, 2, 2, 3, 3,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 5, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 0, 3, 0, 5, 0, 3, 5,
	0, 1, 1, 0, 1, 0, 2, 2, 2, 1,
	1, 0, 2, 2, 5, 0, 1, 1, 2, 1,
	3, 2, 3, 0, 1, 4, 3, 3, 4, 2,
	0, 2, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 1, 3, 3, 3, 1, 3, 1,
	7, 5, 6, 6, 7, 0, 1, 5, 3, 3,
	1, 1, 2, 2, 2, 0, 1, 1, 0, 1,
	2, 0, 1, 1, 3, 2, 1, 2, 3, 3,
	4, 4, 3, 3, 3, 3, 4, 4, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 5, 0, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 0, 1, 0, 2, 0, 1, 5,
	1, 3, 7, 1, 3, 3, 1, 2, 2, 2,
	5, 5, 5, 6, 8, 6, 5, 5, 2, 2,
	2, 2, 3, 3, 3, 4, 1, 3, 5, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	3, 4, 4, 2, 11, 3, 6, 8, 6, 6,
	6, 13, 8, 6, 10, 5, 5, 5, 5, 5,
	0, 6, 5, 6, 4, 5, 0, 8, 9, 0,
	3, 0, 1, 0, 3, 1, 1, 0, 2, 0,
	2, 5, 3, 7, 4, 4, 4, 4, 3, 3,
	3, 7, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 0, 2, 2, 1, 3, 2, 0,
	4, 4, 3, 2, 1, 3, 3, 3, 5, 7,
	7, 6, 5, 3, 2, 3, 3, 3, 7, 3,
	3, 3, 3, 4, 7, 5, 2, 4, 4, 4,
	4, 4, 5, 5, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 2, 4, 2, 4, 5,
	4, 4, 4, 4, 4, 3, 3, 3, 5, 2,
	3, 3, 3, 3, 1, 1, 0, 1, 0, 1,
	1, 1, 0, 2, 2, 0, 2, 2, 0, 2,
	0, 1, 1, 2, 1, 3, 1, 2, 1, 1,
	5, 0, 1, 0, 1, 2, 3, 0, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 3, 3, 2, 2, 3, 1, 3,
	2, 1, 2, 1, 2, 2, 4, 3, 3, 6,
	4, 7, 6, 1, 3, 2, 2, 2, 2, 1,
	1, 1, 3, 2, 1, 1, 1, 0, 1, 1,
	0, 3, 0, 2, 0, 2, 1, 2, 2, 0,
	1, 1, 0, 1, 1, 5, 5, 4, 0, 2,
	4, 4, 0, 1, 0, 1, 2, 3, 4, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 2,
	3, 5, 0, 1, 2, 1, 1, 0, 1, 2,
	1, 3, 1, 1, 1, 4, 3, 6, 3, 3,
	7, 0, 1, 1, 3, 3, 1, 4, 4, 0,
	3, 1, 3, 1, 3, 1, 1, 3, 3, 1,
	3, 4, 4, 4, 3, 2, 4, 0, 1, 0,
	2, 0, 1, 0, 1, 2, 1, 1, 1, 2,
	2, 1, 2, 3, 2, 3, 2, 2, 2, 1,
	1, 3, 3, 0, 1, 1, 2, 6, 5, 6,
	6, 0, 2, 3, 3, 0, 2, 3, 3, 3,
	2, 3, 1, 3, 4, 3, 1, 3, 4, 5,
	6, 3, 4, 5, 6, 3, 4, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 3, 1, 1, 2, 2,
	2, 2, 1, 1, 2, 9, 6, 6, 6, 2,
	2, 3, 3, 3, 0, 3, 1, 1, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 5, 5, 6, 4,
	4, 8, 6, 8, 6, 8, 5, 4, 2, 2,
	1, 2, 2, 2, 8, 8, 6, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	2, 0, 2, 3, 4, 4, 4, 4, 4, 0,
	3, 4, 7, 3, 1, 1, 1, 0, 5, 5,
	2, 3, 1, 2, 2, 1, 2, 1, 2, 2,
	1, 2, 2, 1, 1, 0, 1, 0, 2, 1,
	2, 4, 0, 2, 1, 3, 5, 1, 2, 2,
	0, 3, 0, 2, 0, 1, 3, 1, 3, 2,
	0, 1, 1, 0, 1, 2, 4, 4, 0, 2,
	2, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	0, 3, 3, 3, 0, 3, 1, 1, 0, 4,
	0, 1, 1, 0, 3, 1, 3, 2, 1, 1,
	0, 1, 2, 4, 9, 3, 5, 0, 3, 3,
	0, 1, 0, 2, 2, 0, 2, 2, 2, 0,
	2, 1, 2, 3, 3, 0, 2, 1, 2, 3,
	4, 3, 0, 1, 0, 2, 1, 3, 2, 4,
	3, 2, 2, 1, 5, 4, 4, 1, 3, 3,
	5, 0, 5, 1, 3, 1, 2, 3, 1, 1,
	3, 3, 1, 3, 3, 3, 3, 3, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	0, 2, 0, 3, 0, 1, 0, 1, 1, 5,
	0, 1, 0, 1, 2, 1, 1, 1, 1, 1,
	1, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -334, -5, -9, -17, -18, -19, -20, -21, -22,
	-23, -24, -25, -26, -27, -28, -56, -57, -58, -60,
	-61, -62, -63, -64, -12, -59, -29, -30, -65, -66,
	-67, -68, -69, -14, -15, -16, -7, -6, -11, 7,
	8, -77, -31, 33, -36, -46, 207, -47, -37, 208,
	-48, 210, 209, 247, 211, 240, 75, 289, 290, 292,
	293, 294, 295, -78, 245, 246, 213, 37, 46, 34,
	35, 38, 217, 253, 254, 216, -8, -32, 6, -336,
	9, 415, 242, 241, 29, -10, 429, 86, -335, 563,
	-199, -184, 20, 34, 30, -183, -179, -91, -184, 18,
	16, 5, -70, -339, -70, -70, 10, 11, -70, -286,
	-288, 86, 143, 86, -70, -52, -51, -50, -49, -53,
	32, -43, -44, -309, -42, -39, 212, 209, 257, 110,
	111, 247, 248, 249, 211, 231, 246, 250, 245, 266,
	-38, 81, 34, 429, 432, -293, 208, 214, 215, 416,
	113, 112, 76, 210, -290, 341, 533, -53, 535, 102,
	104, 534, 45, 221, 536, 537, 538, 539, 230, 540,
	541, 542, 543, 549, 550, 551, 552, 114, 5, -70,
	-246, -242, -313, -236, 89, 90, 91, 426, 233, 460,
	461, 282, 81, 42, 338, 341, 533, 289, 303, 297,
	324, 316, 427, 462, 285, 234, 270, 530, 314, 119,
	535, 288, 463, 248, 346, 347, 348, 102, 292, 383,
	548, 287, 464, 546, 104, 534, 80, 52, 45, 243,
	312, 216, 308, 536, 22, 271, 465, 437, 264, 113,
	110, 555, 37, 306, 51, 31, 545, 112, 50, 537,
	134, 466, 538, 350, 329, 524, 49, 351, 249, 467,
	84, 254, 431, 532, 352, 307, 353, 281, 544, 213,
	468, 516, 354, 355, 525, 469, 330, 334, 470, 375,
	356, 562, 53, 471, 472, 526, 111, 473, 79, 539,
	301, 302, 474, 279, 232, 377, 328, 230, 36, 357,
	428, 283, 59, 258, 378, 47, 332, 559, 46, 520,
	475, 523, 327, 323, 54, 476, 477, 478, 479, 540,
	326, 300, 322, 554, 449, 276, 541, 63, 215, 336,
	335, 337, 265, 374, 319, 480, 481, 482, 237, 82,
	483, 309, 19, 484, 485, 358, 272, 486, 57, 487,
	488, 381, 246, 489, 55, 542, 40, 251, 556, 543,
	490, 491, 492, 493, 253, 494, 360, 495, 359, 331,
	333, 260, 361, 430, 496, 305, 250, 547, 497, 238,
	531, 252, 257, 245, 382, 239, 498, 499, 500, 501,
	502, 286, 503, 504, 293, 549, 44, 505, 506, 507,
	508, 280, 275, 376, 385, 62, 83, 343, 509, 529,
	299, 273, 510, 290, 56, 550, 551, 552, 267, 553,
	7, 560, 561, 363, 114, 277, 278, 48, 320, 259,
	511, 512, 310, 311, 325, 298, 321, 291, 517, 261,
	364, 247, 513, 384, 274, 339, 344, 434, 266, 365,
	528, 433, 318, 315, 268, 514, 366, 222, 262, 263,
	515, 518, 367, 368, 284, 369, 370, 371, 372, 373,
	269, 21, 432, 296, 313, 345, 396, 397, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 424, 219, -70, 219, -143, -242,
	219, -214, 347, -233, 349, 362, 357, 367, 355, -225,
	358, 360, 260, -328, 375, 219, 364, 207, 161, 350,
	359, 368, 369, 284, 370, 373, 269, -324, -313, 538,
	553, 119, 317, 354, 352, 376, 520, 372, 371, -242,
	291, -249, 296, -237, -313, -236, 294, -143, -76, 516,
	211, -251, -251, -93, 520, 522, -162, -108, 127, -118,
	-121, -113, -114, -156, -157, -158, -159, -119, -169, 150,
	151, 158, 128, -167, -122, 27, 425, 417, 416, 161,
	32, 203, 69, 70, 419, 420, 130, 58, 392, 393,
	-120, 388, 394, 389, 422, 423, 105, 424, -237, -242,
	225, 387, 218, 156, 415, -115, -111, -6, -165, 386,
	390, 391, 395, -313, -236, -117, -116, -152, 92, 98,
	103, 99, -333, 106, -336, 93, 94, 95, 96, 97,
	107, 108, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 45, 363, 363, -143, -70, -70, -70,
	-70, -177, -91, -179, -8, -6, -336, 6, -70, -6,
	-7, -11, -32, -34, 456, -33, -242, -184, -199, 10,
	145, 43, 51, -182, -183, -10, -6, -108, 17, 24,
	25, -96, 152, -108, -242, -71, -96, -223, 224, -70,
	-70, -213, -254, 291, -217, 376, 375, -238, -215, -237,
	-235, -214, 374, 212, 435, 126, 26, 28, 129, 161,
	17, 130, 38, 214, 317, 231, 160, 227, 416, 207,
	73, 436, 388, 389, 386, 392, 418, 419, 387, 349,
	32, 11, 438, 29, 241, 25, 39, 154, 209, 133,
	244, 27, 242, 105, 108, 441, 20, 76, 236, 12,
	229, 41, 14, 442, 443, 15, 225, 224, 145, 221,
	71, 9, 203, 30, 142, 67, 444, 121, 445, 446,
	447, 448, 69, 143, 18, 557, 390, 391, 34, 521,
	425, 255, 156, 74, 60, 522, 127, 450, 451, 106,
	452, 109, 77, 527, 123, 16, 72, 43, 453, 256,
	454, 226, 558, 455, 379, 456, 144, 210, 415, 70,
	457, 218, 362, 6, 421, 33, 240, 228, 116, 68,
	458, 219, 132, 422, 423, 223, 107, 5, 120, 35,
	10, 75, 78, 393, 394, 395, 58, 115, 429, 131,
	13, 459, 380, 125, 119, -287, 143, -274, -278, -237,
	235, -303, 231, -143, -296, -295, -237, -92, -232, 221,
	229, 228, 120, -317, 123, 277, 387, 218, -49, -50,
	-214, 160, -79, 252, 256, 87, 87, -278, -277, -276,
	-318, 256, 235, -302, -294, 227, 236, -284, 228, 229,
	-279, 221, 121, -318, -279, 226, 236, 256, 256, 114,
	256, 114, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 251, -285, 135, -285, 433, 433, -290, -318, -318,
	-318, 223, 36, 36, -234, -279, 223, 26, -285, -285,
	-214, 160, -285, -285, -285, -285, 264, 264, -285, -285,
	-285, -285, -285, -285, -285, -285, -285, -285, -285, -285,
	-285, -285, -285, 219, -317, -100, 373, 284, 81, -51,
	266, -35, -143, -232, 221, 222, -317, 253, -143, 204,
	-143, -227, 143, 13, -227, -224, 363, 361, 348, 353,
	-227, -227, -227, -227, 267, 346, -280, 221, 36, 232,
	363, 267, 346, 267, 268, 267, 268, 356, 366, 267,
	-247, 12, 145, 387, 351, 355, 260, 219, 261, 222,
	365, -313, 523, 268, -247, 93, -228, 143, 363, 263,
	-227, -252, -336, -238, 317, -252, -252, 33, 90, 223,
	-237, -72, -237, 93, -13, -9, -20, -19, -21, 135,
	-98, 363, -86, 161, 538, 524, 525, 526, 523, 360,
	531, 529, 527, 267, 528, 87, 123, 125, 126, -108,
	142, -153, 135, 136, 137, 138, 139, 140, 141, 145,
	127, 129, 143, 144, 124, 147, 148, 149, 150, 151,
	152, 153, 155, 154, 156, 157, 160, 205, 206, -114,
	-114, -114, -114, -167, -336, -336, -336, -114, -222, -336,
	-114, -336, -336, -336, -336, -173, -108, -336, -340, -336,
	-340, -340, -265, -336, -265, -336, -336, -336, -336, -336,
	204, -336, -336, -336, -336, -336, -265, -265, -265, -265,
	103, 98, 92, -169, 99, 93, -237, -242, -6, -7,
	-162, -251, -325, -326, -146, -143, -336, 284, -237, -237,
	253, -182, -10, -6, -177, -183, -179, -6, -70, -84,
	-97, 64, 65, -99, 25, 39, 68, 66, 24, -337,
	88, -337, -199, -337, 87, -34, -206, 86, 62, 44,
	93, 93, 87, 19, -178, -180, -108, 12, -240, -239,
	26, -237, 93, 204, 101, 12, -144, 30, -143, -223,
	-223, 87, 291, -217, -254, -219, -218, 377, 379, 135,
	-241, -237, 93, 32, 88, 87, -143, -257, -260, -262,
	-261, -263, -258, -259, 314, 315, 161, 318, 320, 321,
	322, 323, 324, 325, 326, 327, 328, 329, 33, 243,
	310, 311, 312, 313, 330, 331, 332, 333, 334, 335,
	336, 337, 297, 316, 427, 298, 299, 300, 301, 302,
	303, 305, 306, 307, 308, 309, -316, -313, 86, 88,
	87, -264, 86, -100, 219, -313, 221, 221, 221, -70,
	415, -285, -285, 251, 17, -42, -39, -309, 16, -38,
	-39, 212, 110, 111, 209, 86, -274, 86, -283, -316,
	-313, 86, 121, 226, 120, -282, -279, -282, -283, -313,
	-169, -313, 121, 121, -210, -237, -210, -210, 24, -210,
	24, -210, 24, 95, -237, -210, 24, -210, 24, -210,
	24, -210, 24, -210, 24, 32, 79, 80, 32, 82,
	83, 84, -169, -169, -274, -214, -143, -313, 95, 95,
	-285, -285, 95, 93, 93, 93, -285, -285, 95, 93,
	-244, -242, 93, -319, 237, 281, 283, 95, 95, 95,
	95, 32, 93, -320, 32, 545, 544, 546, 547, 548,
	95, 32, 95, 32, 95, -237, 86, -143, -106, 271,
	207, 209, 212, 77, 93, 285, 135, 45, 87, 223,
	219, -313, -229, 225, -229, -237, -243, -242, -235, 93,
	-108, -281, 12, 145, -247, -247, -227, -143, -281, -247,
	-227, -143, -227, -227, -227, -227, -247, -247, -247, -227,
	-242, -242, -143, -143, -143, -143, -143, -143, -143, -252,
	-252, -252, -228, -227, 523, 93, 77, -250, 294, 328,
	517, 518, 519, 87, 429, -136, -143, 523, 523, 523,
	523, 523, 523, -108, -108, -108, -108, -160, 106, 127,
	107, 108, -121, -161, -165, -167, 100, 145, 129, 143,
	144, -113, -114, -113, -113, -113, -113, -113, -113, -113,
	-113, -113, -113, -113, -113, -113, -253, -313, 93, 161,
	93, 93, -94, -96, -108, -108, -313, -237, -94, -94,
	-108, -90, 25, 39, -171, -172, 131, -169, -337, -337,
	95, -237, -237, -83, -82, 397, 398, 399, 400, 402,
	403, 404, 407, 408, 412, 413, 396, 414, 401, 406,
	409, 410, 411, 405, 313, -108, -95, 25, 39, -94,
	-238, -243, -235, -94, -95, -95, -94, -94, 204, -199,
	-337, 87, -327, 379, 380, 521, -245, 256, -244, 26,
	-163, -162, 93, 12, -208, 78, -237, -182, -182, 64,
	65, 60, -94, -99, -337, -33, 26, -204, -237, 63,
	93, -266, -214, 338, 339, -108, -108, 87, -181, 28,
	29, -143, -239, 152, -243, -143, -209, 256, -143, -124,
	-126, -127, -128, -146, -168, -336, 89, 12, -136, -137,
	-145, -242, -217, -219, 87, 378, 380, 381, 77, 109,
	-108, -267, 160, -292, -291, -290, -274, -276, -277, -278,
	88, -267, -270, 344, 343, -264, -264, -264, -264, -264,
	-266, -266, -266, -266, 86, 86, -264, -264, -264, -264,
	-268, 86, -268, -268, -269, 86, -269, -303, -108, -300,
	-299, -297, -298, 230, 102, 429, 78, -295, -181, 95,
	-106, -230, 225, -301, -298, -313, -313, -313, -230, -313,
	93, -313, 93, -80, -55, -1, 557, 558, 559, 87,
	17, -275, -274, -54, 281, -306, -307, 256, -302, -296,
	-283, 121, -282, -283, -283, -313, 87, 30, 114, 114,
	114, 114, 429, 209, 33, -274, -54, -253, 223, -253,
	-253, 93, 93, -226, 553, -136, -102, 273, 135, 262,
	262, 219, 219, 275, -143, 286, 288, 287, 285, 24,
	274, 276, 278, 264, -143, -143, -229, 77, -138, -143,
	27, -242, -143, -227, -227, -143, -227, -227, -143, -237,
	-86, 379, 87, 429, 20, -87, 20, 106, 107, 108,
	-161, -113, -114, -113, 126, 244, 87, -337, 26, 87,
	78, -337, -337, -337, 87, 12, -94, -174, -172, 133,
	-108, -337, -337, 87, 87, 12, -256, 26, -337, -94,
	-94, -336, 204, -337, -337, -337, -337, -337, -238, -326,
	520, 380, -150, -149, -147, 75, 224, 76, -336, -244,
	-337, 93, 90, -205, 90, -204, -155, -237, 95, 99,
	-184, -123, -125, 12, -99, -167, 88, 87, -266, -188,
	-193, -224, -237, 93, 161, -180, 204, -151, 13, -154,
	33, 58, -9, -336, -336, 33, 87, -139, -141, -140,
	-142, 67, 71, 73, 68, 69, 70, 74, -248, 26,
	-124, -7, -6, -336, -336, -143, -136, -338, 12, 78,
	-338, 87, 204, -218, -220, 382, 379, 385, -313, 93,
	-79, 87, -290, -278, -185, -103, 41, -271, 345, -266,
	-266, -273, 93, -273, 95, 95, 88, -45, -40, -41,
	34, 81, -297, -285, 93, 40, -237, 88, -102, -143,
	127, 77, -301, -301, -301, -242, -2, 556, 562, 121,
	86, 348, 16, -204, 87, 88, -170, 282, 88, -308,
	58, -237, 88, 86, -283, -283, -237, -336, 219, 32,
	32, -54, -170, -267, -313, 555, 554, 88, 222, 280,
	-107, 392, -104, 93, 89, -143, -143, -143, -143, -143,
	212, 209, 265, 223, -136, -143, 87, -75, 239, 234,
	-247, -247, 34, -143, 379, 532, 530, 126, 244, -121,
	-114, -96, 426, -255, 161, 314, 243, 312, 308, 328,
	319, 343, 310, 344, 307, 306, 305, -255, -253, -108,
	-108, -177, 134, -108, 132, -108, -108, -108, -337, 161,
	314, -337, -337, -95, -238, -147, -279, -279, -279, -210,
	87, -221, 20, 12, 58, 58, -123, -151, -124, -99,
	-237, -191, 516, -196, 47, -194, -195, 48, -192, 49,
	57, 152, -182, -108, -211, 77, -212, -216, -169, -164,
	-166, -165, -336, -203, -337, -237, -210, -212, -126, -127,
	-127, -126, -127, 67, 67, 67, 72, 67, 72, 67,
	-140, -242, -337, -337, -7, -130, -129, -131, -237, -245,
	78, -124, -124, -145, -242, 152, 379, 383, 384, -290,
	-332, 106, 127, 32, 77, 341, 102, -330, 160, -331,
	226, 120, 121, 238, 26, 42, 88, 87, 88, 87,
	88, 87, -231, 466, 127, -41, -40, -285, -285, 95,
	-313, 222, 27, -143, 77, 77, 77, -81, 560, 95,
	86, -3, 81, -108, 86, 17, -274, -169, 258, 145,
	-300, -204, -304, -306, -143, -110, -336, -109, -111, -115,
	150, 151, -170, -143, -101, 271, 279, 86, -105, 90,
	-315, 78, 262, 341, 262, -143, -75, -45, -143, -227,
	-227, 34, -313, -121, -114, -336, -337, -264, -264, -264,
	-269, -264, 302, -264, 302, -264, -337, -337, 87, -337,
	20, -337, -85, 421, -108, 87, 87, -337, 86, 86,
	-337, -148, 20, -148, -148, -337, 90, -143, -151, -175,
	14, -188, 52, 320, -198, -197, 56, 48, -195, 17,
	50, 17, 31, -211, 87, 135, 87, -337, -337, 87,
	58, 204, -337, -151, -134, -133, 77, 78, -135, 77,
	-133, 67, 67, -206, -337, -337, 87, 146, -209, -124,
	-151, -151, 204, 106, -336, -112, -120, -110, 10, 93,
	93, -313, 121, 121, -143, 86, -266, 93, -266, 95,
	95, 466, 32, 82, 83, 84, 32, 79, 80, -143,
	-143, -143, -143, -305, 86, 17, -108, 86, 135, 88,
	-204, -204, 259, -165, -336, 88, -337, 87, -272, 429,
	432, -108, -116, -116, -206, 88, -312, 429, -314, -237,
	-237, -237, -237, -113, -266, -108, -108, -182, 93, -108,
	-108, 95, 95, -336, 67, 16, 14, -336, -336, -245,
	-175, -176, 15, 17, -189, 54, -187, 53, -187, -197,
	17, 17, 93, 17, 93, 121, -216, -108, -166, 58,
	-9, -237, -164, -237, -177, -108, 86, -108, -248, -131,
	-132, -108, 219, 220, -151, -151, -108, -157, 424, 86,
	-108, 88, 88, -206, -304, -55, 88, -204, 95, 88,
	-165, -88, -336, 255, -331, -306, 433, 433, -337, 26,
	-311, -310, -238, 86, 78, -89, 145, 429, -337, -337,
	-337, -337, -337, 88, 88, -207, -337, -237, 226, 17,
	17, -207, -207, -150, -176, -200, 261, -108, -162, -190,
	55, 77, 109, 93, 93, 93, 10, -164, 204, -182,
	-204, -242, -336, -336, -177, -337, -204, 88, 26, 88,
	562, 121, 88, 255, -9, 87, 135, -204, -143, -337,
	427, 74, 430, 87, -337, -337, -337, -201, -202, 77,
	282, 23, 77, 109, -212, -237, 88, -126, -169, -182,
	88, -186, -9, 86, -3, -337, -73, 429, -310, -289,
	-238, 93, 95, 88, 63, 428, 431, -237, 226, 87,
	21, 134, 22, -108, -337, -337, -322, -323, 77, -332,
	-329, 106, 127, 102, -330, 115, 116, -73, -108, 86,
	-74, 270, 520, -315, 63, -202, 452, -108, -323, 77,
	11, 10, 106, 93, 88, -204, 231, -312, 429, 7,
	-321, 239, 234, 237, 33, -321, -4, 561, 88, 272,
	430, 233, 32, 106, 95, -4, 431,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 712,
	712, 712, 0, 712, 0, 0, 712, -2, -2, 712,
	1161, 0, 712, 0, 0, -2, 644, 646, 0, 648,
	-2, 0, 0, 657, 1616, 1616, 707, 0, 0, 0,
	0, 0, 712, 712, 712, 712, 1014, 48, 712, 0,
	83, 84, 663, 664, 665, 63, 0, 1614, 1, 3,
	69, 73, 0, 0, 0, 56, 1023, 0, 76, 0,
	0, 716, 0, 714, 0, 1144, 712, 712, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 142, 143, 0,
	147, 510, 450, 493, 448, 479, -2, 441, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	453, 343, 343, 0, 0, -2, 441, 441, 441, 0,
	0, 0, 476, 1146, 396, 343, 343, 0, 343, 343,
	343, 343, 0, 0, 343, 343, 343, 343, 343, 343,
	343, 343, 343, 343, 343, 343, 343, 343, 343, 1040,
	146, 1162, 1159, 1160, 38, 39, 40, 1306, 1307, 1308,
	1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318,
	1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328,
	1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338,
	1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348,
	1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358,
	1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368,
	1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378,
	1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388,
	1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398,
	1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408,
	1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418,
	1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428,
	1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438,
	1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448,
	1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458,
	1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468,
	1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478,
	1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488,
	1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498,
	1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508,
	1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518,
	1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528,
	1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538,
	1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548,
	1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558,
	1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568,
	1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578,
	1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588,
	1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598,
	1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608,
	1609, 1610, 1611, 1612, 1613, 0, 1138, 0, 574, 820,
	0, 635, 635, 0, 635, 635, 635, 635, 0, 0,
	0, 586, 0, 0, 0, 0, 632, 0, 0, 605,
	607, 0, 632, 0, 638, 0, 619, 635, 1617, 1617,
	1617, 1129, 0, 629, 627, 641, 642, 624, 625, 643,
	647, 0, 652, 655, 1155, 1156, 0, 670, 47, 1390,
	662, 675, 676, 0, 708, 709, 43, 913, 0, 842,
	846, 857, 870, 871, 872, 873, 874, 876, 877, 0,
	0, 0, 0, 882, 883, 0, 0, 0, 0, 0,
	894, 0, 0, 0, 0, 0, 995, 0, 959, 959,
	930, 959, 961, 961, 0, 0, 0, 1613, 1004, 0,
	0, 0, 0, 0, 0, 251, 252, 912, 1118, 961,
	961, 961, 961, -2, -2, 198, 199, 200, 201, 202,
	203, 204, 0, 194, 0, 256, 257, 253, 254, 255,
	896, 897, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 243, 244, 245, 246, 247,
	248, 249, 250, 1616, 0, 685, 0, 0, 0, 0,
	0, 1023, 0, 1015, 1014, 61, 0, 712, -2, 0,
	0, 0, 0, 45, 0, 50, 779, 75, 74, 1062,
	0, 0, 0, 57, 1024, 65, 67, 1025, 0, 717,
	718, 0, 748, 752, 0, 713, 0, 0, 1145, 1144,
	1144, 100, 0, 1556, 1122, -2, -2, 0, 0, 1157,
	1158, 1131, -2, 1165, 1166, 1167, 1168, 1169, 1170, 1171,
	1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181,
	1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191,
	1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201,
	1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211,
	1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221,
	1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231,
	1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241,
	1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251,
	1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261,
	1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271,
	1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281,
	1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291,
	1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301,
	1302, 1303, 1304, 1305, -2, 0, 0, 156, 157, 0,
	41, 369, 0, 152, 0, 363, 313, 1040, 0, 0,
	0, 0, 0, 712, 0, 1139, 137, 138, 144, 145,
	343, 343, 490, 0, 0, 146, 146, 457, 458, 459,
	0, 0, -2, 367, 0, 442, 0, 0, 357, 357,
	361, 359, 360, 0, 0, 0, 0, 0, 0, 470,
	0, 471, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 552, 0, 344, 0, 488, 489, 397, 0, 0,
	0, 0, 468, 469, 0, 0, 1147, 1148, 0, 0,
	343, 343, 0, 0, 0, 0, 343, 343, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 136, 1053, 0, 0, 0, -2,
	0, 566, 0, 0, 0, 1140, 1140, 0, 573, 0,
	575, 576, 0, 0, 577, 0, 632, 632, 630, 631,
	579, 580, 581, 582, 635, 0, 0, 352, 353, 354,
	632, 635, 0, 635, 635, 635, 635, 632, 632, 632,
	635, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1617, 1617, 1617, 638, 635, 0, 615, 0, 616, 617,
	620, 621, 1618, 1619, 1176, 622, 623, 1130, 645, 653,
	656, 673, 671, 672, 674, 666, 667, 668, 669, 0,
	687, 688, 693, 0, 0, 0, 0, 699, 700, 701,
	0, 0, 704, 705, 706, 0, 0, 0, 0, 840,
	0, 0, 902, 903, 904, 905, 906, 907, 908, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 878,
	879, 880, 881, 884, 0, 0, 0, 889, 890, 0,
	0, 0, 0, 0, 722, 0, 996, 0, 928, 0,
	929, 931, 932, 0, 933, 0, 0, 0, 0, 732,
	0, 0, 732, 732, 0, 0, 188, 189, 190, 191,
	205, 206, 207, 208, 209, 258, 1004, 0, 912, 0,
	0, 44, 677, 678, 0, 803, 1150, 0, 0, 728,
	0, 55, 64, 66, 1023, 59, 1023, 0, 734, 0,
	0, -2, -2, 735, 741, 742, 743, 744, 745, 52,
	1615, 53, 0, 72, 0, 46, 0, 0, 0, 0,
	325, 1065, 0, 0, 1016, 1017, 1020, 0, 749, 753,
	0, 755, 756, 0, 715, 0, 98, 0, 819, 0,
	0, 0, 1556, 1128, 0, 102, 103, 0, 0, 0,
	331, 1133, 1134, 1135, -2, 350, 0, 331, 320, 264,
	265, 266, 313, 268, 313, 313, 313, 313, 325, 325,
	325, 325, 296, 297, 298, 299, 300, 0, 0, 283,
	313, 313, 313, 313, 303, 304, 305, 306, 307, 308,
	309, 310, 269, 270, 271, 272, 273, 274, 275, 276,
	277, 315, 315, 315, 317, 317, 0, 42, 0, 335,
	0, 1020, 0, 1053, 1142, 1152, 0, 0, 0, 1142,
	120, 0, 0, 491, 521, 451, 480, 492, 0, 454,
	455, -2, 0, 0, 441, 0, 443, 0, 351, 0,
	-2, 0, 361, 0, 357, 361, 358, 361, 349, 362,
	472, 473, 474, 0, 532, 789, 0, 0, 0, 0,
	0, 538, 539, 540, 0, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 481, 482, 483, 484, 485,
	486, 487, 0, 0, 443, 0, 477, 0, 398, 399,
	0, 0, 402, 403, 404, 405, 0, 0, 408, 409,
	410, 806, 807, 411, 435, 436, 437, 412, 413, 414,
	415, 416, 417, 418, 429, 430, 431, 432, 433, 434,
	419, 420, 421, 422, 423, 426, 0, 130, 1044, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1140, 0, 0, 0, 0, 731, 821, 1163, 1164, 636,
	637, 0, 355, 356, 635, 635, 583, 606, 0, 635,
	587, 608, 588, 590, 589, 591, 610, 611, 635, 594,
	633, 634, 595, 596, 597, 598, 599, 600, 601, 602,
	603, 604, 612, 613, 614, 639, 0, 0, 654, 658,
	659, 660, 661, 0, 0, 690, 94, 695, 696, 697,
	698, 710, 703, 914, 837, 838, 839, 841, 843, 0,
	898, 900, 845, 847, 909, 910, 911, 0, 0, 0,
	0, 0, 851, 855, 858, 859, 860, 861, 862, 863,
	864, 865, 866, 867, 868, 869, 875, 974, 975, 976,
	892, 893, 0, 746, 0, 0, 0, 891, 0, 0,
	0, 0, 723, 724, 1002, 999, 0, 0, 960, 962,
	0, 0, 0, 0, 938, 939, 940, 941, 942, 943,
	944, 945, 946, 947, 948, 949, 950, 951, 952, 953,
	954, 955, 956, 957, 958, 977, 0, 0, 0, 733,
	1005, 0, -2, 0, 0, 0, 0, 0, 0, 0,
	1117, 0, 680, 681, 683, 0, 823, 0, 804, 0,
	0, 1151, 686, 0, 727, 0, 730, 58, 60, 739,
	740, 0, 757, 736, 54, 49, 0, 0, 781, 1063,
	325, 1085, 0, 329, 330, 1026, 1027, 0, 1019, 1021,
	1022, 77, 754, 750, 0, 835, 0, 0, 818, 0,
	760, 762, 763, 764, 801, 0, 38, 0, 0, 0,
	96, 820, 1123, 101, 0, 0, 106, 107, 1124, 1125,
	1126, 1127, 0, 510, -2, 393, 158, 160, 161, 162,
	153, -2, 323, 321, 322, 267, 325, 325, 290, 291,
	292, 293, 294, 295, 0, 0, 284, 285, 286, 287,
	278, 0, 279, 280, 281, 0, 282, 368, 0, 1028,
	336, 337, 339, 343, 0, 0, 0, 364, 365, 0,
	1044, 0, 0, 0, 1153, 1152, 1152, 1152, 0, 148,
	149, 150, 151, 527, 0, 0, 522, 525, 526, 146,
	0, 0, 154, 445, 444, 0, 559, 0, 366, 0,
	0, 361, 361, 346, 347, 475, 0, 0, 534, 535,
	536, 537, 0, 0, 0, 443, 445, 331, 0, 400,
	401, 406, 407, 424, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 505, 506, 507, 508, 509,
	1041, 1042, 1043, 0, 0, 567, 0, 0, 385, 92,
	1141, 572, 632, 593, 609, 632, 585, 592, 618, 650,
	694, 0, 0, 0, 0, 702, 0, 844, 899, 901,
	848, 0, 852, 856, 0, 0, 0, 0, 0, 0,
	0, 895, 919, 920, 0, 0, 1014, 0, 1000, 0,
	0, 927, 963, 0, 0, 0, 0, 0, 915, 0,
	0, 732, 0, 964, 965, 966, 967, 968, 1005, 679,
	682, 684, 769, 824, 825, 0, 0, 0, 0, 805,
	1149, 725, 726, 729, -2, 0, 0, 1007, 0, 0,
	757, 835, 758, 0, 737, 51, 780, 0, 1067, 1066,
	1079, 1092, 326, 327, 328, 1018, 0, 1023, 0, 1111,
	0, 0, 1103, 0, 0, 0, 0, 0, 0, 0,
	0, 808, 0, 0, 811, 0, 0, 0, 0, 802,
	0, 0, 0, 0, 771, -2, 0, 0, 90, 91,
	0, 0, 0, 104, 105, 0, 0, 111, 332, 333,
	139, 146, 395, 159, 375, 0, 0, 263, 324, 288,
	289, 0, 311, 0, 0, 0, 388, 116, 1032, 1031,
	343, 343, 338, 0, 341, 0, 1154, 314, 0, 129,
	0, 0, 0, 0, 0, 135, 516, 0, 0, 523,
	0, 0, 0, 449, 0, 460, 461, 0, 531, 558,
	0, 563, 335, 0, 345, 348, 790, 0, 0, 462,
	0, 445, 466, 467, 478, 427, 428, 425, 0, 0,
	1054, 1055, 1060, 1058, 1059, 121, 498, 500, 499, 503,
	0, 0, 496, 0, 385, 1028, 0, 571, 386, 387,
	635, 635, 689, 95, 0, 692, 0, 0, 0, 849,
	853, 747, 0, 0, 313, 313, 982, 313, 317, 985,
	313, 987, 313, 990, 313, 993, 994, 0, 0, 0,
	0, 997, 926, 1003, 0, 0, 0, 0, 937, 0,
	0, 916, 917, 0, 1006, 826, 831, 831, 831, 0,
	0, 0, 1136, 1137, 1008, 1009, 835, 1010, 759, 738,
	782, 1085, 0, 1078, 0, -2, 1087, 0, 0, 0,
	1093, 751, 78, 836, 81, 0, 1111, 1119, 0, 1102,
	1113, 1115, 0, 0, 0, 1107, 0, 835, 761, 797,
	799, 0, 794, 809, 810, 812, 0, 814, 0, 816,
	817, 779, 766, 768, 0, 0, 772, 773, 0, 98,
	0, 835, 835, 97, 0, 822, 108, 109, 110, 394,
	163, 168, 0, 0, 0, 173, 0, 175, 0, 376,
	0, 260, 262, 0, 0, 166, 325, 0, 325, 0,
	318, 0, 377, 389, 0, 1029, 1030, 0, 0, 340,
	342, 0, 1143, 131, 0, 0, 0, 519, 0, 528,
	0, 0, 0, 0, 0, 0, 155, 446, 0, 0,
	334, 0, 0, 556, 553, 463, 0, 192, 193, 195,
	0, 0, 465, 779, 1045, 1046, 1047, 0, 1057, 1061,
	124, 0, 0, 0, 0, 568, 569, 570, 93, 578,
	584, 691, 711, 850, 854, 0, 886, 980, 325, 983,
	984, 986, 988, 989, 991, 992, 887, 888, 0, 922,
	0, 924, 1023, 0, 1001, 0, 0, 936, 0, 0,
	918, 0, 0, 0, 0, 803, -2, 62, 1010, 1012,
	0, 1072, 1070, 1070, 1080, 1081, 0, 0, 1088, 0,
	0, 0, 0, 82, 0, 0, 0, 1116, 0, 0,
	0, 0, 99, 1014, 791, 798, 0, 0, 792, 0,
	793, 813, 815, 765, -2, 801, 0, 0, 835, 835,
	88, 89, 0, 169, 0, 171, 186, 187, 0, 174,
	176, 177, 259, 261, 0, 0, 301, 312, 302, 0,
	0, 390, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 779,
	132, 133, 134, 511, 0, 521, 0, 0, 0, 514,
	0, 452, 0, 562, 0, 0, 533, 0, 541, 0,
	0, 0, 196, 197, 0, 1056, 497, 0, 122, 123,
	0, 0, 502, 969, 981, 0, 0, 0, 998, 0,
	0, 0, 0, 0, 832, 0, 0, 0, 0, 823,
	1012, 1094, 0, 0, 1075, 0, 1068, 1071, 1069, 1082,
	0, 0, 1089, 0, 1091, 0, 1120, 1121, 1114, 0,
	1106, 1109, 1105, 1108, 1023, 795, 0, 800, 0, 774,
	775, 776, 0, 0, 1014, 87, 0, 172, 0, 0,
	0, 316, 319, 0, 0, 0, 512, 0, 524, 515,
	560, 561, 0, 564, 370, 557, 554, 555, 464, 0,
	125, 126, 0, 0, 0, 0, 0, 0, 921, 923,
	925, 934, 935, 978, 979, 0, 828, 785, 786, 833,
	834, 0, 0, 770, 79, 80, 0, 1013, 1011, 1064,
	0, 1073, 1074, 1083, 1084, 1090, 0, 1104, 0, 85,
	0, 767, 0, 0, 1023, 170, 0, 180, 0, 520,
	0, 523, 513, 0, 1048, 0, 0, 0, 504, 885,
	0, 0, 0, 0, 827, 829, 830, 1095, 1096, 0,
	0, 0, 1076, 1077, 1112, 1110, 796, 0, 0, 86,
	371, 375, 1048, 0, 0, 565, 494, 1050, 127, 128,
	438, 439, 440, 121, 970, 0, 973, 787, 788, 0,
	1098, 0, 0, 1101, 777, 778, 372, 373, 0, 164,
	181, 182, 0, 0, 185, 178, 179, 117, 0, 0,
	0, 1051, 1052, 124, 971, 1097, 0, 1100, 374, 0,
	0, 0, 183, 184, 529, 0, 0, 501, 0, 1099,
	378, 380, 381, 0, 0, 379, 517, 0, 529, 1049,
	0, 382, 383, 384, 530, 518, 972,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 128, 3, 3, 3, 155, 147, 3,
	86, 88, 152, 150, 87, 151, 204, 153, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 563,
	136, 135, 137, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 157, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 124, 3, 158,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 125,
	126, 127, 129, 130, 131, 132, 133, 134, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 148, 149, 154,
	156, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:488
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:493
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:494
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:498
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:534
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:540
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:544
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:548
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:553
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:557
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:563
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:569
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:575
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:579
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:584
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:588
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:594
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:598
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:604
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:610
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:614
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:618
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:641
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:647
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:652
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:658
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:665
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:671
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:678
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:682
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil /*triggers*/)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:688
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:692
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:696
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:700
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:704
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:710
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:714
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:719
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:723
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:729
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:733
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:738
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:744
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:750
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:757
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:763
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:771
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), nil /*triggers*/)
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:775
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].triggerExprsUnion() /*triggers*/)
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:783
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = yyDollar[2].strs
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:795
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:807
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:811
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:817
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:823
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:827
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:831
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:835
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:840
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:841
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:845
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:849
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:855
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:859
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:865
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:869
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:874
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:878
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:884
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:890
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:894
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:900
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:904
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:910
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:914
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:918
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:924
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:928
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:932
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:936
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:942
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:946
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:952
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:958
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:965
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:974
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:978
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:985
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:989
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:994
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:998
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1004
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1009
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1014
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1020
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1025
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1031
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1037
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1044
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1051
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1056
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1061
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1066
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1073
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1080
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1091
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1098
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1102
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1108
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1112
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1116
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1120
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 146:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1126
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1130
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1136
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 149:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1140
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1146
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 151:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1150
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1157
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1161
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1167
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1171
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1177
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1182
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1187
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1191
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1196
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1200
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 162:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1204
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 163:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1215
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1224
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1233
		{
			yyVAL.str = ""
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1237
		{
			yyVAL.str = ""
		}
	case 167:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1246
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1250
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1256
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1262
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1267
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1272
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1277
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1282
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1287
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1292
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1296
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1303
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1307
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1312
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1316
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1321
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1327
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1333
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1338
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1345
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1352
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1356
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1360
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1364
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1375
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1382
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1386
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1392
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1396
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1400
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1404
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1408
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1412
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1416
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1421
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1425
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1429
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1433
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1437
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1444
		{
			yyVAL.str = Armscii8Str
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1448
		{
			yyVAL.str = ASCIIStr
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1452
		{
			yyVAL.str = Big5Str
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1456
		{
			yyVAL.str = UBinaryStr
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1460
		{
			yyVAL.str = Cp1250Str
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1464
		{
			yyVAL.str = Cp1251Str
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1468
		{
			yyVAL.str = Cp1256Str
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1472
		{
			yyVAL.str = Cp1257Str
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1476
		{
			yyVAL.str = Cp850Str
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1480
		{
			yyVAL.str = Cp852Str
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1484
		{
			yyVAL.str = Cp866Str
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1488
		{
			yyVAL.str = Cp932Str
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1492
		{
			yyVAL.str = Dec8Str
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1496
		{
			yyVAL.str = EucjpmsStr
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1500
		{
			yyVAL.str = EuckrStr
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1504
		{
			yyVAL.str = Gb18030Str
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1508
		{
			yyVAL.str = Gb2312Str
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1512
		{
			yyVAL.str = GbkStr
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1516
		{
			yyVAL.str = Geostd8Str
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1520
		{
			yyVAL.str = GreekStr
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1524
		{
			yyVAL.str = HebrewStr
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1528
		{
			yyVAL.str = Hp8Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1532
		{
			yyVAL.str = Keybcs2Str
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1536
		{
			yyVAL.str = Koi8rStr
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1540
		{
			yyVAL.str = Koi8uStr
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1544
		{
			yyVAL.str = Latin1Str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1548
		{
			yyVAL.str = Latin2Str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1552
		{
			yyVAL.str = Latin5Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1556
		{
			yyVAL.str = Latin7Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1560
		{
			yyVAL.str = MacceStr
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1564
		{
			yyVAL.str = MacromanStr
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1568
		{
			yyVAL.str = SjisStr
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1572
		{
			yyVAL.str = Swe7Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1576
		{
			yyVAL.str = Tis620Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1580
		{
			yyVAL.str = Ucs2Str
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1584
		{
			yyVAL.str = UjisStr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1588
		{
			yyVAL.str = Utf16Str
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1592
		{
			yyVAL.str = Utf16leStr
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1596
		{
			yyVAL.str = Utf32Str
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1600
		{
			yyVAL.str = Utf8Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1604
		{
			yyVAL.str = Utf8mb4Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1614
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1618
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1622
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1629
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1633
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1637
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1643
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1647
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1651
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1655
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1661
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1672
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1677
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1683
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1687
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1691
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1695
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1699
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1703
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1707
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1711
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1715
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1721
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1727
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1733
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 281:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1739
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 282:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1745
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1753
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1757
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1761
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1765
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1769
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1775
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1779
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1783
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1787
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1791
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1795
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1799
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1803
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1807
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1811
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1815
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1819
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1823
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 301:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1827
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 302:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1832
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1838
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1842
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1846
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1850
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1854
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1858
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1862
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1866
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1872
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1877
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 313:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1882
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1886
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1891
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 316:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1895
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 317:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1903
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1907
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 319:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1913
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 320:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1921
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1925
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1929
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1934
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1938
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1943
		{
			yyVAL.str = ""
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1947
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1951
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1955
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1959
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.str = "latin1"
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1964
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.str = "ucs2"
		}
	case 331:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1970
		{
			yyVAL.str = ""
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1974
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1978
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 334:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:1985
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1990
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1994
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2000
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2004
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2010
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2014
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2019
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2023
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2029
		{
			yyVAL.str = ""
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2033
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 345:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2039
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2043
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2047
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2051
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2055
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2060
		{
			yyVAL.str = ""
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2064
		{
			yyVAL.str = yyDollar[2].str
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2070
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2074
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2078
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2085
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2089
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 357:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2094
		{
			yyVAL.str = "key"
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2098
		{
			yyVAL.str = yyDollar[1].str
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2104
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2108
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2113
		{
			yyVAL.str = ""
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2117
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2123
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2127
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2133
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2139
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2143
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2149
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2153
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2159
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2165
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2169
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2173
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2177
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2182
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2186
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2192
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2198
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2204
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2210
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2214
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2218
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2222
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2226
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2231
		{
			yyVAL.str = ""
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2235
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2239
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 388:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2244
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2248
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2252
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2257
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2261
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2267
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2271
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2275
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2281
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2285
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2291
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2295
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2299
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2303
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2307
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2311
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2315
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2319
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2323
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2327
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2331
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2335
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2339
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2343
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2347
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2351
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2355
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2359
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2363
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2367
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2371
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2375
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2379
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2383
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2387
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2391
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2395
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2399
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2404
		{
			yyVAL.str = ""
		}
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2408
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2412
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2431
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2435
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2439
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 441:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2444
		{
			yyVAL.str = ""
		}
	case 443:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2450
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2454
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2459
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2463
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2468
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2472
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2476
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2480
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2484
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 452:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2488
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2494
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2498
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2502
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2508
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2512
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2516
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2520
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2524
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2528
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2532
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2536
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2540
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2544
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2548
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2552
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2556
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2560
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2564
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2568
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2572
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2576
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2580
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2584
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2588
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2592
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2596
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2602
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2606
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2612
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2616
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2620
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2624
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2628
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2632
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2636
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2640
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2644
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2650
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2657
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2664
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2671
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2677
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2681
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2688
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2695
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2707
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2717
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2721
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2725
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2738
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2748
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2752
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2763
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2770
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2777
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2784
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2791
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2798
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2802
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2811
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2819
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2828
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2835
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2843
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2847
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2856
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2867
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2871
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2876
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2880
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2885
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:2889
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:2895
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:2899
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2904
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:2908
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2913
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:2917
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2923
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2927
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2931
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2935
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2939
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2943
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2947
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2951
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2955
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2959
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2963
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2967
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2971
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2975
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2979
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2983
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2987
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2991
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2995
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2999
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3003
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3007
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3012
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3016
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3020
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3027
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3031
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3037
		{
			yyVAL.partDefUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
		}
	case 559:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3042
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3046
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3053
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3060
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3069
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3075
		{
			yyVAL.str = ""
		}
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3079
		{
			yyVAL.str = ""
		}
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3085
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3091
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3095
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 569:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3101
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3105
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3114
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3118
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3124
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3128
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3133
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3139
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3143
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3147
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3151
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3155
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3159
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3163
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3167
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3171
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3175
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3179
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3183
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3187
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3191
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3195
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3199
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3203
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3207
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3211
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3215
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3219
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3223
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3227
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3231
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3235
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3239
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3243
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3247
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3251
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3255
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3259
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3263
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3267
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3271
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3275
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3279
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3283
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3288
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3292
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3296
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3301
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3305
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3309
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3313
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3318
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3332
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3336
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3340
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3346
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3350
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 626:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3356
		{
			yyVAL.str = ""
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3360
		{
			yyVAL.str = "extended "
		}
	case 628:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3366
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3370
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3376
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3380
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 632:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3386
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3390
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3394
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3400
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3404
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3408
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3414
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3418
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3424
		{
			yyVAL.empty = struct{}{}
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3428
		{
			yyVAL.empty = struct{}{}
		}
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3432
		{
			yyVAL.empty = struct{}{}
		}
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3438
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3442
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3446
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3452
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3456
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3462
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3468
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3472
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3477
		{
			yyVAL.empty = struct{}{}
		}
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3479
		{
			yyVAL.empty = struct{}{}
		}
	case 653:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3482
		{
			yyVAL.empty = struct{}{}
		}
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3484
		{
			yyVAL.empty = struct{}{}
		}
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3489
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3495
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3500
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3504
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3508
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3512
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3516
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3520
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3526
		{
			yyVAL.str = yyDollar[1].str
		}
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3530
		{
			yyVAL.str = yyDollar[1].str
		}
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3534
		{
			yyVAL.str = yyDollar[1].str
		}
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3540
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3544
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3548
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3552
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3557
		{
			yyVAL.str = ""
		}
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3561
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3565
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3571
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3575
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3581
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3585
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3591
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:3597
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3601
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:3607
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3613
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3617
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3621
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3625
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3631
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3637
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3643
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3647
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3651
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3655
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3659
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3663
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3669
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3673
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3679
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3683
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3687
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3691
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3695
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3699
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3703
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3707
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3711
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3715
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3719
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3723
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 707:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3728
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3732
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3736
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3741
		{
			yyVAL.str = ""
		}
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3745
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 712:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3750
		{
			setAllowComments(yylex, true)
		}
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3754
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 714:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3760
		{
			yyVAL.strs = nil
		}
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3764
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3770
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3774
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3778
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3783
		{
			yyVAL.str = ""
		}
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3787
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3791
		{
			yyVAL.str = SQLCacheStr
		}
	case 722:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3796
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3800
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3804
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3810
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: yyDollar[2].strs, Statement: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3814
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: yyDollar[2].strs, StatementIdentifier: NewColIdentWithAt(string(yyDollar[5].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3820
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: yyDollar[2].strs, Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3825
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3829
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3835
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: yyDollar[2].strs, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3839
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: yyDollar[2].strs, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3844
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3848
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3853
		{
			yyVAL.strs = nil
		}
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3857
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 736:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3861
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3865
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3869
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3875
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3879
		{
			yyVAL.str = SQLCacheStr
		}
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3883
		{
			yyVAL.str = DistinctStr
		}
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3887
		{
			yyVAL.str = DistinctStr
		}
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3891
		{
			yyVAL.str = StraightJoinHint
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3895
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3899
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3905
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3909
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3915
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3919
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3923
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3927
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3932
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3936
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3940
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3947
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 757:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3952
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3956
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3962
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3968
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3972
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3982
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3986
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3990
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3994
		{
			yyLOCAL = &TableValuedFunction{Name: NewColIdent(string(yyDollar[1].str)), Args: yyDollar[3].tvfasUnion(), As: yyDollar[6].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4000
		{
			yyLOCAL = &DerivedTable{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4006
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4010
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableValuedFunctionArguments
//line sql.y:4015
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableValuedFunctionArguments
//line sql.y:4019
		{
			yyLOCAL = yyDollar[1].tvfasUnion()
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableValuedFunctionArguments
//line sql.y:4025
		{
			yyLOCAL = TableValuedFunctionArguments{yyDollar[1].tvfaUnion()}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4029
		{
			yySLICE := (*TableValuedFunctionArguments)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tvfaUnion())
		}
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableValuedFunctionArgument
//line sql.y:4035
		{
			yyLOCAL = &TableValuedFunctionArgument{Name: yyDollar[1].colIdent, Value: yyDollar[3].tvfavUnion()}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableValuedFunctionArgumentValue
//line sql.y:4041
		{
			yyLOCAL = &ExprTableValuedFunctionArgumentValue{Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableValuedFunctionArgumentValue
//line sql.y:4045
		{
			yyLOCAL = &TableDescriptorTableValuedFunctionArgumentValue{Table: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableValuedFunctionArgumentValue
//line sql.y:4049
		{
			yyLOCAL = &FieldDescriptorTableValuedFunctionArgumentValue{Field: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4054
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4058
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4064
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4068
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4074
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4078
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4084
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4088
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4092
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4096
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4102
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4106
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 791:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4119
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4123
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4127
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4131
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4137
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 796:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4139
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 797:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4143
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4145
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 799:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4149
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4151
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 801:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4154
		{
			yyVAL.empty = struct{}{}
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4156
		{
			yyVAL.empty = struct{}{}
		}
	case 803:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4159
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4163
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4167
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4174
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4180
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4184
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4188
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4194
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4200
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4204
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4208
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4212
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4218
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4222
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4232
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4236
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4242
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4246
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4252
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 823:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4257
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4261
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4267
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4271
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 827:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4277
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4281
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4285
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4289
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4294
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4298
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4302
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4306
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4312
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4316
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4323
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4327
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4331
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4335
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4339
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4343
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4350
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4354
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4358
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4362
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4368
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4372
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4376
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4380
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4384
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4388
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4392
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4396
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4400
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4404
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4408
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4414
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4418
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4422
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4426
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4430
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4434
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4438
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4442
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4446
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4450
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4454
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4458
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4462
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4468
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4472
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4476
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4480
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4484
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4488
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4492
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4496
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4500
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4504
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4508
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4512
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4516
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4520
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4524
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4528
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4532
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4536
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4540
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4548
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4552
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4560
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4564
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4571
		{
			yyVAL.str = ""
		}
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4575
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4581
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4585
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4592
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4596
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4600
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4604
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4610
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4614
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4618
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4622
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4626
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4630
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4634
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4640
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4644
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4648
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:4655
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4661
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4665
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 915:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4675
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4679
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4683
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4687
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4697
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4701
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4705
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4709
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4713
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4717
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4721
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4725
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4729
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4733
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4744
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4748
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4754
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4758
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4763
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4767
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4771
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4775
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4779
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4785
		{
		}
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4787
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4791
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4795
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4799
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4803
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4807
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4811
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4815
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4819
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4823
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4827
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4833
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4837
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4841
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4845
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4849
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4853
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4857
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4861
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4865
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4875
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4879
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4883
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4893
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4897
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4901
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4905
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4909
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4915
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4919
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4923
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4927
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4931
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4937
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4941
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4945
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 977:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4951
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4955
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4959
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4965
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4969
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4973
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4977
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4981
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4987
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4991
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4995
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4999
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5003
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5007
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5011
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5015
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5019
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5023
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5029
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5033
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5038
		{
			yyVAL.str = string("")
		}
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5042
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:5048
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5052
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1001:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:5058
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5063
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5067
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5073
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5077
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5081
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5087
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5096
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5100
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5106
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5110
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5115
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5119
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5124
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5128
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5134
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5140
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5144
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1019:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:5150
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5155
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5159
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5163
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5168
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5172
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5178
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5182
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5186
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5191
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5195
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5199
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5203
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5207
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5214
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5218
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5222
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5226
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5232
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5236
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5240
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5245
		{
			yyVAL.str = ""
		}
	case 1041:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5249
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1042:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5253
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1043:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5257
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1044:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5262
		{
			yyVAL.str = ""
		}
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5266
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5272
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5276
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1048:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5281
		{
			yyVAL.str = ""
		}
	case 1049:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5285
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1050:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5290
		{
			yyVAL.str = "cascaded"
		}
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5294
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5298
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1053:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5303
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5307
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5313
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5319
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5325
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5334
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5338
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1060:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5343
		{
			yyVAL.str = ""
		}
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5347
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1062:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5353
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5357
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5363
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5367
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5371
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5376
		{
			yyVAL.str = ""
		}
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5380
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1069:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5384
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1070:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5389
		{
			yyVAL.str = ""
		}
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5393
		{
			yyVAL.str = " header"
		}
	case 1072:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5398
		{
			yyVAL.str = ""
		}
	case 1073:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5402
		{
			yyVAL.str = " manifest on"
		}
	case 1074:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5406
		{
			yyVAL.str = " manifest off"
		}
	case 1075:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5411
		{
			yyVAL.str = ""
		}
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5415
		{
			yyVAL.str = " overwrite on"
		}
	case 1077:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5419
		{
			yyVAL.str = " overwrite off"
		}
	case 1078:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5425
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1079:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5430
		{
			yyVAL.str = ""
		}
	case 1080:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5434
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5440
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1082:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5444
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1083:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5450
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5454
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1085:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5459
		{
			yyVAL.str = ""
		}
	case 1086:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5463
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5469
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1088:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5473
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1089:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5479
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1090:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5483
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1091:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5487
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1092:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5492
		{
			yyVAL.str = ""
		}
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5496
		{
			yyVAL.str = " optionally"
		}
	case 1094:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TriggerExprs
//line sql.y:5501
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TriggerExprs
//line sql.y:5505
		{
			yyLOCAL = yyDollar[2].triggerExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TriggerExprs
//line sql.y:5511
		{
			yyLOCAL = TriggerExprs{yyDollar[1].triggerExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5515
		{
			yySLICE := (*TriggerExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].triggerExprUnion())
		}
	case 1098:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TriggerExpr
//line sql.y:5521
		{
			yyLOCAL = &WatermarkTriggerExpr{}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TriggerExpr
//line sql.y:5525
		{
			yyLOCAL = &EndOfStreamTriggerExpr{}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TriggerExpr
//line sql.y:5529
		{
			yyLOCAL = &DelayTriggerExpr{Delay: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TriggerExpr
//line sql.y:5533
		{
			yyLOCAL = &CountingTriggerExpr{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5546
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5550
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5554
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5558
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5562
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5568
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5572
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5576
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1110:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5580
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1111:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5585
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5589
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:5595
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5599
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5605
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5609
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5615
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5620
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5630
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5634
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:5640
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:5646
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5650
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5656
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5660
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5664
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5668
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5672
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5680
		{
			yyVAL.str = "charset"
		}
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5690
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5694
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5698
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5707
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5709
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5712
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5714
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5717
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:5719
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5722
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5724
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5727
		{
			yyVAL.empty = struct{}{}
		}
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5729
		{
			yyVAL.empty = struct{}{}
		}
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5731
		{
			yyVAL.empty = struct{}{}
		}
	case 1149:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5735
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5740
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5744
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5749
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5751
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:5755
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5761
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5765
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5772
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5778
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5782
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1161:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5788
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5792
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5799
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1614:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6273
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1615:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6282
		{
			decNesting(yylex)
		}
	case 1616:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6287
		{
			skipToEnd(yylex)
		}
	case 1617:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6292
		{
			skipToEnd(yylex)
		}
	case 1618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6296
		{
			skipToEnd(yylex)
		}
	case 1619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6300
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
